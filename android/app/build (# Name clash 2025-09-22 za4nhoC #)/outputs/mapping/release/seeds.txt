okhttp3.OkHttpClient$Companion
okhttp3.internal.http2.Http2Stream$StreamTimeout
com.facebook.jni.annotations.DoNotStripAny
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec
com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl
com.polidea.rxandroidble2.internal.connection.MtuBasedPayloadSizeLimit
com.facebook.fbreact.specs.NativeBlobModuleSpec
com.facebook.fbreact.specs.NativeExceptionsManagerSpec
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory_Factory
com.facebook.react.bridge.CatalystInstanceImpl$1$1
okhttp3.internal.http2.Http2Reader$Handler
com.polidea.rxandroidble2.internal.util.CheckerConnectPermission_Factory
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$3$2
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl$2
okhttp3.Cache$Entry$Companion
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideScanPreconditionVerifierFactory
com.polidea.rxandroidble2.exceptions.BleGattException
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable
com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper_Factory
okhttp3.Protocol$Companion
com.polidea.rxandroidble2.LogConstants$MacAddressLogSetting
com.facebook.react.bridge.CatalystInstanceImpl$1
com.facebook.react.modules.deviceinfo.DeviceInfoModule
androidx.lifecycle.ReflectiveGenericLifecycleObserver
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationServicesStatusFactory
com.polidea.rxandroidble2.internal.util.ByteAssociationUtil$2
com.polidea.rxandroidble2.internal.util.CheckerLocationProvider_Factory
okhttp3.internal.platform.OpenJSSEPlatform
okhttp3.internal.ws.RealWebSocket$Companion
com.polidea.rxandroidble2.internal.util.ByteAssociationUtil$1
com.facebook.react.bridge.JavaScriptModuleRegistry
com.polidea.rxandroidble2.internal.connection.ImmediateSerializedBatchAckStrategy
com.facebook.react.uimanager.BaseViewManager
com.facebook.fbreact.specs.NativeAlertManagerSpec
com.facebook.react.bridge.JSExceptionHandler
com.facebook.react.bridge.JSBundleLoader$3
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$3
com.facebook.react.bridge.CallbackImpl
okhttp3.RequestBody$Companion
okhttp3.internal.connection.RouteDatabase
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher_Factory$InstanceHolder
com.polidea.rxandroidble2.scan.IsConnectable
okhttp3.internal.platform.Android10Platform$Companion
okhttp3.Response$Builder
com.polidea.rxandroidble2.internal.operations.ConnectOperation$1
okhttp3.Cache$Entry
okhttp3.internal.cache.CacheInterceptor
com.facebook.react.bridge.ModuleSpec
okhttp3.internal.authenticator.JavaNetAuthenticator
com.polidea.rxandroidble2.internal.util.ScanRecordParser_Factory
okhttp3.Handshake$Companion
com.polidea.rxandroidble2.scan.ScanSettings$MatchMode
okhttp3.internal.platform.android.AndroidLog
com.polidea.rxandroidble2.utils.ConnectionSharingAdapter$1
com.polidea.rxandroidble2.exceptions.BleCharacteristicNotFoundException
com.facebook.soloader.Elf32_Phdr
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$6
okhttp3.CipherSuite$Companion
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher_Factory
com.facebook.react.bridge.ReactSoftExceptionLogger
com.facebook.soloader.ExtractFromZipSoSource$ZipDso
okhttp3.Interceptor$Companion$invoke$1
com.polidea.rxandroidble2.internal.util.CheckerLocationProvider
com.facebook.react.bridge.JavaMethodWrapper$3
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4
androidx.annotation.Keep
com.facebook.react.bridge.ReactIgnorableMountingException
com.oblador.vectoricons.VectorIconsModule
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory
com.facebook.react.views.switchview.ReactSwitchManager
com.polidea.rxandroidble2.internal.util.DisposableUtil$2
com.reactnativecommunity.asyncstorage.SerialExecutor$1
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1$2
com.facebook.react.bridge.Inspector$Page
com.facebook.react.bridge.JavaMethodWrapper$6
okhttp3.CertificatePinner
okhttp3.RequestBody
com.facebook.soloader.UnpackingSoSource$InputDsoIterator
okhttp3.WebSocketListener
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableIndicationValueFactory
com.himelbrand.ble.peripheral.RNBLEModule
okhttp3.internal.platform.ConscryptPlatform
com.polidea.rxandroidble2.internal.connection.Connector
okhttp3.internal.cache.DiskLruCache$Entry
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl_Factory
com.facebook.react.views.scroll.ReactScrollViewManager
okhttp3.internal.http2.Http2Reader$ContinuationSource
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$1
com.facebook.react.bridge.ReactMarker$FabricMarkerListener
com.facebook.react.uimanager.RootViewManager
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory
com.polidea.rxandroidble2.scan.ScanSettings
androidx.savedstate.Recreator
com.facebook.soloader.NoopSoSource
com.polidea.rxandroidble2.internal.connection.ConstantPayloadSizeLimit
androidx.appcompat.widget.SearchView$SearchAutoComplete
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi23
com.facebook.jni.CppException
okhttp3.internal.http.BridgeInterceptor
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$1
com.facebook.react.fabric.FabricUIManager
com.polidea.rxandroidble2.ClientComponent$ClientModule
com.facebook.jni.annotations.DoNotStrip
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel
com.facebook.react.modules.camera.ImageStoreManager
com.facebook.soloader.NativeLibrary
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource
okhttp3.internal.connection.RealCall$timeout$1
com.polidea.rxandroidble2.scan.ScanFilter$Builder
com.polidea.rxandroidble2.internal.util.CheckerScanPermission_Factory
okhttp3.Handshake$Companion$get$1
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi26_Factory
com.polidea.rxandroidble2.RxBleConnection$Connector
com.polidea.rxandroidble2.exceptions.BleException
okhttp3.Handshake
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueue
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler
okhttp3.internal.http1.Http1ExchangeCodec$Companion
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1
com.facebook.jni.NativeRunnable
com.polidea.rxandroidble2.DaggerClientComponent$Builder
com.polidea.rxandroidble2.internal.util.DisposableUtil$1
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1$1
okhttp3.internal.connection.RouteSelector$Companion
com.polidea.rxandroidble2.Timeout
com.facebook.react.bridge.CxxModuleWrapper
com.facebook.react.uimanager.events.ReactEventEmitter
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1
com.polidea.rxandroidble2.internal.cache.DeviceComponentWeakReference
com.facebook.react.bridge.ReactMarker$MarkerListener
com.polidea.rxandroidble2.RxBleAdapterStateObservable_Factory
com.ghostcommv2.R
com.facebook.hermes.reactexecutor.HermesExecutor
com.polidea.rxandroidble2.internal.operations.LegacyScanOperation
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$2
com.polidea.rxandroidble2.RxBleConnection
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$2
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDisableNotificationValueFactory$InstanceHolder
okhttp3.internal.connection.RealConnectionPool$Companion
com.facebook.react.bridge.JsonWriterHelper
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec
com.facebook.react.bridge.OnBatchCompleteListener
org.linusu.RNGetRandomValuesModule
com.facebook.react.modules.intent.IntentModule
okhttp3.internal.http2.Http2Writer
com.polidea.rxandroidble2.RxBleDeviceServices$5
com.polidea.rxandroidble2.internal.operations.ConnectOperation$4$1
com.polidea.rxandroidble2.internal.DeviceModule_ProvideBluetoothDeviceFactory
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor
okhttp3.Route
com.ghostcommv2.MainApplication$reactNativeHost$1
com.facebook.react.bridge.JavaMethodWrapper$10
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor
com.facebook.react.bridge.JavaOnlyArray
com.facebook.react.CompositeReactPackageTurboModuleManagerDelegate
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager
com.facebook.react.uimanager.events.RCTEventEmitter
com.polidea.rxandroidble2.internal.connection.ConnectorImpl_Factory
okhttp3.internal.platform.Jdk9Platform$Companion
com.polidea.rxandroidble2.internal.DeviceModule_ProvideConnectionStateChangeListenerFactory
com.facebook.react.modules.appregistry.AppRegistry
okhttp3.internal.platform.Jdk8WithJettyBootPlatform
okhttp3.internal.ws.WebSocketProtocol
com.polidea.rxandroidble2.internal.util.BluetoothManagerWrapper
okhttp3.ConnectionSpec$Companion
okhttp3.internal.http2.Http2Reader$Companion
com.facebook.react.bridge.ColorPropConverter
okhttp3.internal.http2.Http2Writer$Companion
com.polidea.rxandroidble2.internal.operations.ConnectOperation
com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry$1
com.polidea.rxandroidble2.internal.serialization.RxBleThreadFactory$RxBleNonBlockingThread
com.polidea.rxandroidble2.internal.operations.DescriptorReadOperation_Factory
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException
okhttp3.internal.concurrent.Task
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi18_Factory
com.facebook.react.turbomodule.core.TurboModuleManager
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager
okhttp3.WebSocket
com.polidea.rxandroidble2.internal.util.CharacteristicNotificationId
okhttp3.internal.ws.WebSocketExtensions
com.polidea.rxandroidble2.scan.ScanSettings$1
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord
com.polidea.rxandroidble2.ClientComponent$NamedSchedulers
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener
com.facebook.react.bridge.queue.MessageQueueThread
com.facebook.soloader.SoFileLoader
com.facebook.react.bridge.ModuleHolder
com.polidea.rxandroidble2.exceptions.BleAlreadyConnectedException
okhttp3.Headers$Builder
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothInteractionSchedulerFactory
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$3$1
com.polidea.rxandroidble2.internal.RxBleDeviceImpl_Factory
okhttp3.internal.Util
okhttp3.internal.cache2.Relay
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1$3
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$1
com.reactnativecommunity.asyncstorage.AsyncStorageModule
com.facebook.soloader.Elf32_Shdr
okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1
com.polidea.rxandroidble2.ConnectionSetup
androidx.appcompat.widget.Toolbar
okhttp3.Interceptor$Chain
okhttp3.internal.Util$asFactory$1
com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsNearbyPermissionNeverForLocationFactory
com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener
com.facebook.react.fabric.events.FabricEventEmitter
com.facebook.soloader.SoLoader$AppType
okhttp3.internal.cache2.FileOperator
com.polidea.rxandroidble2.internal.operations.LegacyScanOperation$1
com.facebook.react.modules.core.JavaTimerManager
okhttp3.TlsVersion
com.polidea.rxandroidble2.exceptions.BleCannotSetCharacteristicNotificationException
com.polidea.rxandroidble2.internal.connection.ConnectionComponent$Builder
com.polidea.rxandroidble2.internal.util.CheckerScanPermission
com.facebook.react.modules.sound.SoundManagerModule
com.polidea.rxandroidble2.internal.operations.ConnectOperation$2
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem
com.facebook.jni.ThreadScopeSupport
com.facebook.react.bridge.UnexpectedNativeTypeException
com.polidea.rxandroidble2.scan.ScanSettings$Builder
androidx.core.app.CoreComponentFactory
com.facebook.react.views.progressbar.ReactProgressBarViewManager
okhttp3.internal.ws.RealWebSocket$Message
okhttp3.internal.platform.android.SocketAdapter$DefaultImpls
com.facebook.react.bridge.CxxCallbackImpl
com.facebook.yoga.YogaLogger
com.facebook.react.bridge.JavaMethodWrapper
com.polidea.rxandroidble2.internal.connection.MtuProvider
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable$2
com.facebook.jni.HybridData$Destructor
com.facebook.react.bridge.DynamicFromMap$1
com.polidea.rxandroidble2.internal.connection.DisconnectAction
com.facebook.soloader.R
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$Api24Utils
com.polidea.rxandroidble2.internal.cache.CacheEntry
com.facebook.react.views.textinput.ReactTextInputManager
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideBluetoothGattFactory
okhttp3.Callback
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1
androidx.appcompat.widget.AlertDialogLayout
com.polidea.rxandroidble2.RxBleAdapterStateObservable
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder
com.polidea.rxandroidble2.utils.ConnectionSharingAdapter
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec
com.facebook.react.bridge.JSBundleLoader$4
com.facebook.react.modules.i18nmanager.I18nManagerModule
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1
okhttp3.internal.connection.RealConnectionPool$cleanupTask$1
com.facebook.react.devsupport.JSException
com.facebook.react.bridge.queue.MessageQueueThreadSpec
com.facebook.react.bridge.queue.MessageQueueThreadHandler
okhttp3.internal.http2.Http2ExchangeCodec$Companion
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi21
com.polidea.rxandroidble2.internal.operations.ScanOperationApi21
okhttp3.Request
androidx.appcompat.widget.ViewStubCompat
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec
com.polidea.rxandroidble2.ClientComponent$Builder
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDeviceSdkFactory$InstanceHolder
com.polidea.rxandroidble2.internal.util.ClientStateObservable
okhttp3.internal.platform.android.BouncyCastleSocketAdapter
okhttp3.MultipartBody$Part
com.facebook.soloader.SysUtil$LollipopSysdeps
com.facebook.soloader.SysUtil$MarshmallowSysdeps
com.polidea.rxandroidble2.scan.ScanSettings$MatchNum
androidx.lifecycle.LegacySavedStateHandleController$1
okhttp3.ConnectionSpec
okhttp3.internal.ws.RealWebSocket
com.facebook.fbreact.specs.NativeAppearanceSpec
com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry$1$1
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueue
androidx.core.app.RemoteActionCompatParcelizer
com.facebook.fbreact.specs.NativeFileReaderModuleSpec
com.facebook.soloader.Api18TraceUtils
okhttp3.internal.ws.MessageInflater
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1
com.polidea.rxandroidble2.internal.util.CharacteristicPropertiesParser
com.facebook.react.defaults.DefaultBindingsInstaller
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideConnectionQueueExecutorServiceFactory
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink
okhttp3.internal.http2.Settings
com.polidea.rxandroidble2.internal.util.ObservableUtil
okhttp3.internal.publicsuffix.PublicSuffixDatabase
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$2
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5
com.facebook.react.bridge.ProxyJavaScriptExecutor
com.facebook.soloader.UnpackingSoSource$1
okhttp3.Authenticator$Companion$AuthenticatorNone
com.facebook.proguard.annotations.KeepGettersAndSetters
okhttp3.FormBody$Builder
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem
com.facebook.react.bridge.AssertionException
androidx.activity.ImmLeaksCleaner
com.facebook.react.fabric.SurfaceHandlerBinding
com.facebook.react.fabric.events.EventEmitterWrapper
com.facebook.react.modules.fresco.FrescoModule
com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder
com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache$1
com.facebook.react.fabric.events.EventBeatManager
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion
com.facebook.react.uimanager.ViewManager
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideConnectionQueueExecutorServiceFactory$InstanceHolder
com.facebook.react.turbomodule.core.NativeModuleSoLoader$Companion
androidx.core.graphics.drawable.IconCompatParcelizer
com.polidea.rxandroidble2.RxBleDeviceServices$4
com.facebook.soloader.DirectApkSoSource
com.polidea.rxandroidble2.exceptions.BleGattCannotStartException
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi18
com.facebook.react.bridge.ReadableNativeMap$2
com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState
okhttp3.MultipartBody
com.facebook.soloader.ExoSoSource$ExoUnpacker$FileBackedInputDsoIterator
com.facebook.react.bridge.NativeMap
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
okhttp3.OkHttpClient
com.polidea.rxandroidble2.scan.ScanFilter$1
okhttp3.internal.cache.CacheInterceptor$Companion
com.polidea.rxandroidble2.ConnectionParameters
com.facebook.react.bridge.queue.ReactQueueConfiguration
com.polidea.rxandroidble2.internal.DeviceModule_ProvideConnectionStateRelayFactory$InstanceHolder
com.facebook.react.bridge.JavaModuleWrapper
com.polidea.rxandroidble2.internal.operations.Operation
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$5
okhttp3.internal.cache.CacheStrategy$Factory
okhttp3.internal.http2.Settings$Companion
com.polidea.rxandroidble2.RxBleClient$State
com.polidea.rxandroidble2.internal.connection.ConnectionModule_GattWriteMtuOverheadFactory$InstanceHolder
okhttp3.internal.concurrent.TaskLoggerKt
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec
com.polidea.rxandroidble2.internal.connection.MtuWatcher
com.polidea.rxandroidble2.internal.DeviceModule
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$6
okhttp3.internal.ws.WebSocketWriter
com.polidea.rxandroidble2.RxBleConnection$WriteOperationRetryStrategy
com.facebook.react.fabric.CoreComponentsRegistry
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi18
com.facebook.soloader.UnpackingSoSource$Unpacker
androidx.lifecycle.FullLifecycleObserverAdapter
com.facebook.react.uimanager.ViewGroupManager
com.polidea.rxandroidble2.internal.scan.ScanFilterInterface
okhttp3.internal.tls.BasicCertificateChainCleaner$Companion
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1
com.vitorpamplona.bleavertiser.BLEAdvertiserModule
com.facebook.react.bridge.JSCJavaScriptExecutorFactory
okhttp3.internal.tls.BasicTrustRootIndex
okhttp3.internal.platform.android.DeferredSocketAdapter$Factory
com.polidea.rxandroidble2.internal.operations.ScanOperation$1
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$2
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi18_Factory$InstanceHolder
com.polidea.rxandroidble2.helpers.ValueInterpreter$IntFormatType
com.facebook.soloader.nativeloader.SystemDelegate
okhttp3.internal.platform.android.StandardAndroidSocketAdapter
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder
androidx.fragment.app.FragmentManager$6
androidx.core.app.RemoteActionCompat
okhttp3.FormBody$Companion
okhttp3.internal.http2.Hpack
com.facebook.react.bridge.GuardedRunnable
com.polidea.rxandroidble2.helpers.LocationServicesOkObservable
com.facebook.imagepipeline.memory.NativeMemoryChunk
com.polidea.rxandroidble2.internal.operations.CharacteristicReadOperation
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl$2$1
com.polidea.rxandroidble2.internal.RxBleLog$1
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl
com.facebook.react.bridge.RuntimeExecutor
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl
com.facebook.jni.DestructorThread$Destructor
com.reactnativecommunity.asyncstorage.AsyncStorageModule$5
com.facebook.react.bridge.ReactContextBaseJavaModule
com.facebook.react.bridge.BaseActivityEventListener
com.facebook.imagepipeline.nativecode.NativeBlurFilter
com.facebook.jni.DestructorThread$1
okhttp3.internal.http2.Header$Companion
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1
com.polidea.rxandroidble2.internal.connection.IllegalOperationHandler
androidx.appcompat.widget.ContentFrameLayout
okhttp3.internal.ws.WebSocketReader
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter_Factory
com.facebook.react.bridge.JSIModuleSpec
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType
com.facebook.react.bridge.RetryableMountingLayerException
com.facebook.react.bridge.LifecycleEventListener
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry
com.facebook.react.bridge.JSIModuleType
com.facebook.react.fabric.interop.InteropEventEmitter
com.facebook.soloader.UnpackingSoSource$DsoManifest
com.polidea.rxandroidble2.internal.scan.InternalToExternalScanResultConverter_Factory
com.facebook.react.runtime.hermes.HermesInstance
okhttp3.ResponseBody$Companion
com.facebook.react.modules.network.NetworkingModule
com.polidea.rxandroidble2.DaggerClientComponent
com.polidea.rxandroidble2.internal.util.ScanRecordParser
okhttp3.internal.http.StatusLine
okhttp3.Credentials
com.reactnativecommunity.asyncstorage.SerialExecutor
com.facebook.react.common.mapbuffer.ReadableMapBuffer
okhttp3.Cache$CacheResponseBody
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1
com.polidea.rxandroidble2.internal.ScanResultInterface
com.facebook.react.devsupport.LogBoxModule
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi18_Factory
okhttp3.Authenticator$Companion
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache_Factory
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothAdapterFactory$InstanceHolder
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker$ZipBackedInputDsoIterator
okhttp3.ResponseBody
okhttp3.internal.ws.RealWebSocket$WriterTask
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothCallbacksSchedulerFactory$InstanceHolder
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5$1
okhttp3.internal.http2.Http2Connection$ReaderRunnable
com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker$1
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideCharacteristicPropertiesParserFactory$InstanceHolder
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation
com.facebook.react.bridge.JavaJSExecutor$Factory
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall
okhttp3.internal.authenticator.JavaNetAuthenticator$WhenMappings
okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2
com.facebook.react.bridge.JSIModulePackage
com.facebook.imagepipeline.memory.NativeMemoryChunkPool
com.facebook.react.modules.dialog.AlertFragment
okhttp3.internal.cache.CacheStrategy
com.polidea.rxandroidble2.internal.Priority
com.facebook.react.bridge.Inspector
okhttp3.internal.ws.WebSocketReader$FrameCallback
androidx.lifecycle.LiveData$LifecycleBoundObserver
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDeviceSdkFactory
okhttp3.RequestBody$Companion$asRequestBody$1
com.facebook.fbreact.specs.NativeImageEditorSpec
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6$1
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$4
com.polidea.rxandroidble2.internal.QueueOperation$1
com.facebook.react.modules.core.HeadlessJsTaskSupportModule
com.facebook.react.bridge.FallbackJSBundleLoader
com.facebook.hermes.intl.Collator
okhttp3.JavaNetAuthenticator
com.polidea.rxandroidble2.internal.util.ByteAssociationUtil$3
com.facebook.fbreact.specs.NativeSettingsManagerSpec
okhttp3.internal.concurrent.TaskQueue
com.bleplx.BlePlxModule
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$6
com.polidea.rxandroidble2.internal.operations.ScanOperationApi18
com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl_Factory
com.polidea.rxandroidble2.internal.connection.MtuBasedPayloadSizeLimit_Factory
kotlinx.coroutines.android.AndroidDispatcherFactory
com.facebook.react.bridge.JavaScriptExecutor
com.facebook.react.config.ReactFeatureFlags
com.facebook.soloader.MinElf$ISA
com.facebook.jni.MapIteratorHelper
okhttp3.internal.platform.android.SocketAdapter
okhttp3.HttpUrl$Builder$Companion
okhttp3.internal.http.StatusLine$Companion
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi26_Factory$InstanceHolder
com.polidea.rxandroidble2.internal.util.ClientStateObservable$3
com.polidea.rxandroidble2.helpers.ValueInterpreter$FloatFormatType
com.facebook.soloader.MergedSoMapping
com.polidea.rxandroidble2.internal.connection.ConnectionComponent$NamedInts
okhttp3.internal.http2.Huffman$Node
okhttp3.RequestBody$Companion$toRequestBody$1
okhttp3.EventListener$Factory
com.facebook.react.bridge.JavaMethodWrapper$2
com.facebook.soloader.SystemLoadLibraryWrapper
com.facebook.fbreact.specs.NativeShareModuleSpec
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper
com.polidea.rxandroidble2.internal.util.ClientStateObservable_Factory
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDisableNotificationValueFactory
com.facebook.yoga.YogaNative
com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl
com.facebook.react.modules.core.DeviceEventManagerModule
com.polidea.rxandroidble2.internal.operations.ReadRssiOperation
com.polidea.rxandroidble2.RxBleConnection$ConnectionPriority
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5
com.facebook.react.bridge.ReactBridge
com.polidea.rxandroidble2.internal.connection.ConnectionScope
androidx.appcompat.widget.ActionBarOverlayLayout
com.facebook.react.bridge.JavaOnlyMap$1
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl
okhttp3.OkHttp
com.polidea.rxandroidble2.internal.scan.ScanSetup
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideScanSetupProviderFactory
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory$1$1
okhttp3.internal.connection.RealConnection$connectTls$1
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationManagerFactory
com.facebook.fbreact.specs.NativeWebSocketModuleSpec
com.polidea.rxandroidble2.internal.RxBleLog$Logger
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager
com.polidea.rxandroidble2.internal.serialization.RxBleThreadFactory
com.polidea.rxandroidble2.LogOptions
com.facebook.jni.HybridData
com.polidea.rxandroidble2.internal.RxBleLog$2
okhttp3.internal.http1.HeadersReader$Companion
com.polidea.rxandroidble2.NotificationSetupMode
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$11
com.polidea.rxandroidble2.internal.operations.ConnectOperation_Factory
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback_Factory
com.facebook.react.bridge.NativeModuleRegistry
com.facebook.react.fabric.ReactNativeConfig
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex
okhttp3.Dns$Companion$DnsSystem
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl$1
com.facebook.react.devsupport.HMRClient
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider
okhttp3.ResponseBody$Companion$asResponseBody$1
com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry
okhttp3.internal.http1.HeadersReader
okhttp3.internal.cache.DiskLruCache$cleanupTask$1
com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator_Factory
okhttp3.CookieJar
com.facebook.soloader.nativeloader.NativeLoader
com.facebook.fbreact.specs.NativeLinkingManagerSpec
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$Output
com.polidea.rxandroidble2.internal.operations.DescriptorReadOperation
com.polidea.rxandroidble2.scan.BackgroundScanner
com.facebook.react.views.drawer.ReactDrawerLayoutManager
okhttp3.internal.concurrent.TaskRunner$runnable$1
okhttp3.internal.http.CallServerInterceptor
com.facebook.soloader.NativeDeps$1
com.polidea.rxandroidble2.exceptions.BleGattDescriptorException
com.facebook.jni.HybridClassBase
com.polidea.rxandroidble2.ClientComponent$PlatformConstants
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$8
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$2$1
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$4
okhttp3.internal.http2.Http2Connection$Companion
com.facebook.react.runtime.BindingsInstaller
com.facebook.react.runtime.JSCInstance
com.facebook.soloader.UnpackingSoSource$InputDso
com.polidea.rxandroidble2.internal.util.BleConnectionCompat
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$4
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl
com.facebook.soloader.Elf64_Ehdr
com.facebook.react.bridge.Inspector$LocalConnection
com.polidea.rxandroidble2.internal.connection.ConnectionComponent
okhttp3.internal.ws.RealWebSocket$Streams
androidx.lifecycle.SingleGeneratedAdapterObserver
com.polidea.rxandroidble2.exceptions.BleGattCharacteristicException
javax.inject.Provider
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder
okhttp3.internal.concurrent.TaskRunner$Backend
com.facebook.react.bridge.PerformanceCounter
com.facebook.react.bridge.JSONArguments
com.reactnativecommunity.asyncstorage.AsyncStorageModule$6
okhttp3.internal.proxy.NullProxySelector
okhttp3.HttpUrl
com.polidea.rxandroidble2.RxBleClient
com.polidea.rxandroidble2.RxBleClientImpl
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator
com.facebook.react.bridge.CatalystInstanceImpl
com.facebook.fbreact.specs.NativeLogBoxSpec
com.facebook.react.bridge.BackgroundExecutor
com.facebook.react.bridge.CatalystInstanceImpl$2
com.facebook.react.bridge.JSBundleLoader
okhttp3.Interceptor
com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker_Factory
com.facebook.fbreact.specs.NativeKeyboardObserverSpec
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache
com.facebook.react.bridge.ReactModuleWithSpec
com.reactnativecommunity.asyncstorage.AsyncStorageModule$3
com.polidea.rxandroidble2.RxBleConnection$WriteOperationRetryStrategy$LongWriteFailure
com.facebook.soloader.SoSource
com.facebook.hermes.unicode.AndroidUnicodeUtils
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothAdapterFactory
com.polidea.rxandroidble2.LogOptions$Builder
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideComputationSchedulerFactory$InstanceHolder
com.polidea.rxandroidble2.scan.ScanSettings$ScanMode
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothInteractionExecutorServiceFactory$InstanceHolder
com.polidea.rxandroidble2.internal.util.QueueReleasingEmitterWrapper
com.facebook.react.views.modal.ReactModalHostManager
com.polidea.rxandroidble2.exceptions.BleScanException$Reason
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener
com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider
com.polidea.rxandroidble2.R
com.polidea.rxandroidble2.internal.connection.DescriptorWriter_Factory
com.facebook.react.modules.core.ExceptionsManagerModule
com.facebook.react.bridge.JSIModule
okhttp3.internal.http.DatesKt
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableNotificationValueFactory
com.facebook.react.turbomodule.core.TurboModuleInteropUtils
com.facebook.react.modules.vibration.VibrationModule
okhttp3.internal.platform.BouncyCastlePlatform
com.facebook.soloader.nativeloader.NativeLoaderDelegate
okhttp3.internal.concurrent.TaskRunner$Companion
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache_Factory$InstanceHolder
okhttp3.internal.platform.android.AndroidSocketAdapter
com.polidea.rxandroidble2.RxBleRadioOperationCustom
androidx.appcompat.widget.DialogTitle
com.facebook.react.bridge.ReadableNativeMap$1
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi26
okhttp3.internal.cache.DiskLruCache
okhttp3.Response
okhttp3.internal.platform.android.CloseGuard
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter
com.facebook.react.uimanager.SimpleViewManager
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$4
com.facebook.react.fabric.StateWrapperImpl
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideRecommendedConnectRuntimePermissionNamesFactory
com.polidea.rxandroidble2.internal.connection.MtuWatcher_Factory
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable$1
okhttp3.internal.platform.android.ConscryptSocketAdapter
com.ghostcommv2.R$mipmap
com.facebook.imagepipeline.nativecode.NativeRoundingFilter
com.polidea.rxandroidble2.internal.DeviceComponent$Builder
androidx.fragment.app.DialogFragment
com.facebook.fbreact.specs.NativeTimingSpec
com.facebook.react.bridge.UIManagerProvider
com.facebook.react.bridge.JavaMethodWrapper$8
okhttp3.internal.ws.MessageDeflater
com.facebook.fbreact.specs.NativeModalManagerSpec
okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1
com.facebook.react.bridge.JavaOnlyArray$1
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi18_Factory
com.facebook.imagepipeline.platform.PreverificationHelper
com.facebook.react.fabric.mounting.mountitems.MountItem
com.facebook.react.bridge.interop.InteropModuleRegistry
com.polidea.rxandroidble2.utils.GattStatusParser
okhttp3.internal.http2.Http2Stream$Companion
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleProvider
okhttp3.internal.http2.Http2ExchangeCodec
com.facebook.react.bridge.DimensionPropConverter
okhttp3.internal.connection.RouteSelector$Selection
okhttp3.HttpUrl$Companion
okhttp3.Call$Factory
com.polidea.rxandroidble2.internal.connection.LoggingIllegalOperationHandler
com.facebook.react.bridge.BaseJavaModule
com.facebook.proguard.annotations.DoNotStrip
com.reactnativecommunity.asyncstorage.AsyncStorageModule$1
com.facebook.react.modules.share.ShareModule
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator_Factory
com.polidea.rxandroidble2.utils.StandardUUIDsParser
okhttp3.internal.http.ExchangeCodec$Companion
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec
okhttp3.MultipartBody$Builder
com.facebook.react.bridge.JSIModuleProvider
com.polidea.rxandroidble2.internal.operations.DescriptorWriteOperation
okhttp3.internal.SuppressSignatureCheck
androidx.core.graphics.drawable.IconCompat
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource
com.facebook.soloader.ExoSoSource
okhttp3.Dispatcher
okhttp3.Headers$Companion
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifier
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$11$1
okhttp3.Challenge
com.polidea.rxandroidble2.internal.operations.ConnectOperation$5
androidx.startup.InitializationProvider
com.facebook.react.bridge.DefaultJSExceptionHandler
com.facebook.react.bridge.WindowFocusChangeListener
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi24
androidx.lifecycle.ProcessLifecycleInitializer
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentBuilder
okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion
com.facebook.react.modules.devloading.DevLoadingModule
com.facebook.soloader.SoLoader
com.facebook.react.bridge.ReactMarker
com.polidea.rxandroidble2.internal.util.ClientStateObservable$2
com.polidea.rxandroidble2.helpers.ValueInterpreter
com.polidea.rxandroidble2.RxBleAdapterStateObservable$1
okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion
com.facebook.react.views.view.ReactViewManager
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource
com.facebook.soloader.ExtractFromZipSoSource
com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState
com.facebook.react.bridge.GuardedResultAsyncTask
com.facebook.react.bridge.Dynamic
okhttp3.Handshake$Companion$handshake$1
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl_Factory
okhttp3.internal.cache.FaultHidingSink
com.polidea.rxandroidble2.internal.serialization.QueueAwaitReleaseInterface
okhttp3.internal.cache.DiskLruCache$Companion
com.ghostcommv2.MainActivity
com.polidea.rxandroidble2.LogConstants$LogLevel
com.polidea.rxandroidble2.internal.operations.ScanOperationApi21$1
com.facebook.react.bridge.CatalystInstanceImpl$Builder
com.polidea.rxandroidble2.RxBleAdapterStateObservable$1$2
com.polidea.rxandroidble2.internal.operations.ServiceDiscoveryOperation
okhttp3.CookieJar$Companion$NoCookies
com.polidea.rxandroidble2.exceptions.BleDescriptorNotFoundException
com.polidea.rxandroidble2.internal.util.UUIDUtil
okhttp3.CertificatePinner$Companion
com.facebook.react.bridge.ObjectAlreadyConsumedException
com.polidea.rxandroidble2.internal.RxBleLog$LogLevel
com.polidea.rxandroidble2.internal.util.LocationServicesStatus
okhttp3.MediaType
com.polidea.rxandroidble2.internal.DeviceModule_ProvideConnectionStateRelayFactory
com.polidea.rxandroidble2.internal.operations.DisconnectOperation
com.facebook.react.bridge.JsonWriterHelper$1
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec
okhttp3.internal.http2.Http2Connection
okhttp3.internal.connection.RealConnectionPool
com.facebook.react.views.text.ReactVirtualTextViewManager
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl_Factory
com.polidea.rxandroidble2.ClientComponent$ClientModule$1
com.polidea.rxandroidble2.RxBleScanResult
okhttp3.internal.http2.Huffman
okhttp3.internal.concurrent.TaskRunner
com.facebook.react.bridge.Systrace
com.facebook.react.bridge.ReactContext$2
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1
com.facebook.soloader.SysUtil$Api14Utils
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl$1
androidx.activity.ComponentActivity$3
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsConnectableCheckerFactory
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory$1$2
okhttp3.MediaType$Companion
okhttp3.ConnectionPool
com.polidea.rxandroidble2.internal.connection.ConnectionStateChangeListener
okhttp3.ConnectionSpec$Builder
androidx.appcompat.widget.SearchView
okhttp3.Handshake$peerCertificates$2
okhttp3.internal.http2.StreamResetException
com.polidea.rxandroidble2.scan.ScanSettings$CallbackType
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory
kotlin.internal.jdk7.JDK7PlatformImplementations
com.polidea.rxandroidble2.internal.util.ClientStateObservable$4
okhttp3.internal.platform.AndroidPlatform$Companion
com.facebook.soloader.UnpackingSoSource$InputDsoStream
com.polidea.rxandroidble2.ConnectionSetup$Builder
com.polidea.rxandroidble2.helpers.ByteArrayBatchObservable
com.polidea.rxandroidble2.LogOptions$Logger
okhttp3.internal.cache.CacheStrategy$Companion
okhttp3.internal.cache.CacheRequest
com.polidea.rxandroidble2.internal.util.DisposableUtil
com.polidea.rxandroidble2.internal.DeviceModule_ProvidesConnectTimeoutConfFactory
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager
com.polidea.rxandroidble2.RxBleConnection$LongWriteOperationBuilder
com.polidea.rxandroidble2.ClientComponent$ClientComponentFinalizer
com.polidea.rxandroidble2.internal.BluetoothGattCharacteristicProperty
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils
com.polidea.rxandroidble2.internal.util.BluetoothManagerWrapper_Factory
okhttp3.internal.http2.ErrorCode
com.polidea.rxandroidble2.internal.operations.MtuRequestOperation_Factory
com.facebook.react.runtime.ReactInstance
com.polidea.rxandroidble2.LogConstants$UuidLogSetting
com.facebook.fbreact.specs.NativeBugReportingSpec
com.facebook.soloader.MinElf
com.polidea.rxandroidble2.internal.operations.OperationsProvider
okhttp3.internal.http.RetryAndFollowUpInterceptor
com.facebook.react.bridge.JavaMethodWrapper$7
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1
com.polidea.rxandroidble2.internal.connection.DisconnectAction_Factory
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi18
android.support.v4.app.RemoteActionCompatParcelizer
androidx.appcompat.view.menu.ListMenuItemView
com.facebook.react.uimanager.UIConstantsProviderManager
com.facebook.fbreact.specs.NativeSegmentFetcherSpec
okhttp3.Protocol
com.facebook.soloader.DirectorySoSource
com.facebook.common.time.AwakeTimeSinceBootClock
com.facebook.react.turbomodule.core.TurboModuleInteropUtils$ParsingException
com.reactnativecommunity.asyncstorage.AsyncStoragePackage
androidx.appcompat.widget.ActionBarContainer
com.polidea.rxandroidble2.internal.util.ByteAssociation
com.facebook.react.modules.dialog.DialogModule
okhttp3.internal.http2.Hpack$Writer
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi23_Factory
com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl
com.polidea.rxandroidble2.internal.logger.LoggerUtil$AttributeLogWrapper
com.facebook.react.bridge.ReactContext
com.facebook.react.bridge.NativeModule
com.facebook.react.bridge.UIManager
com.facebook.react.uimanager.events.RCTModernEventEmitter
com.facebook.react.bridge.JavaScriptModule
okhttp3.internal.cache2.Relay$RelaySource
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager
okhttp3.MultipartBody$Part$Companion
com.polidea.rxandroidble2.internal.operations.ReadRssiOperation_Factory
com.facebook.soloader.ExtractFromZipSoSource$1
com.polidea.rxandroidble2.internal.connection.ConnectionModule
com.facebook.soloader.SoLoader$1
okhttp3.internal.platform.android.AndroidCertificateChainCleaner
okhttp3.internal.http.ExchangeCodec
okhttp3.Cache
okhttp3.Cache$RealCacheRequest$1
okhttp3.CacheControl
com.facebook.react.bridge.Promise
com.facebook.react.modules.blob.FileReaderModule
com.ghostcommv2.R$integer
com.facebook.fbreact.specs.NativeDevLoadingViewSpec
com.facebook.fbreact.specs.NativeDeviceInfoSpec
com.facebook.fbreact.specs.NativeDevMenuSpec
com.facebook.react.bridge.ReadableNativeMap$3
com.facebook.fbreact.specs.NativeSoundManagerSpec
com.facebook.react.bridge.ReactCallback
com.facebook.react.uimanager.ComponentNameResolver
com.facebook.fbreact.specs.NativeClipboardSpec
com.polidea.rxandroidble2.internal.connection.ConnectionParametersImpl
com.facebook.react.bridge.ActivityEventListener
com.facebook.react.bridge.CatalystInstance
com.facebook.soloader.ElfByteChannel
com.facebook.react.turbomodule.core.NativeModuleSoLoader
com.polidea.rxandroidble2.internal.scan.IsConnectableChecker
okhttp3.internal.publicsuffix.PublicSuffixDatabase$findMatchingRule$1
com.facebook.react.bridge.JavaJSExecutor
com.polidea.rxandroidble2.exceptions.BleGattCallbackTimeoutException
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler
com.polidea.rxandroidble2.internal.serialization.QueueReleaseInterface
com.facebook.react.modules.debug.SourceCodeModule
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$5
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker
com.facebook.common.time.RealtimeSinceBootClock
okhttp3.TlsVersion$Companion
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1
okhttp3.internal.http2.Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$7$1
com.facebook.react.animated.NativeAnimatedModule
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl
com.facebook.react.bridge.queue.QueueThreadExceptionHandler
okhttp3.Authenticator
com.ghostcommv2.BuildConfig
com.facebook.react.turbomodule.core.CallInvokerHolderImpl
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableNotificationValueFactory$InstanceHolder
com.facebook.jni.CppSystemErrorException
okhttp3.HttpUrl$Builder
com.facebook.react.bridge.ReadableType
com.polidea.rxandroidble2.internal.connection.NoRetryStrategy$1
okhttp3.internal.cache.DiskLruCache$Snapshot
com.polidea.rxandroidble2.internal.operations.MtuRequestOperation
okhttp3.Dns
com.facebook.react.views.text.ReactRawTextManager
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideComputationSchedulerFactory
okhttp3.internal.platform.Jdk9Platform
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideCharacteristicPropertiesParserFactory
com.polidea.rxandroidble2.internal.util.ObservableUtil$1
com.polidea.rxandroidble2.internal.logger.LoggerSetup
com.polidea.rxandroidble2.internal.DeviceModule_ProvidesDisconnectTimeoutConfFactory
com.facebook.react.bridge.ReactContext$1
androidx.emoji2.text.EmojiCompatInitializer
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi18_Factory$InstanceHolder
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$3
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$3
com.facebook.soloader.SoLoader$WrongAbiError
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvidesOperationTimeoutConfFactory
com.facebook.react.common.JavascriptException
okhttp3.internal.Internal
okhttp3.Connection
com.polidea.rxandroidble2.internal.connection.ConnectionModule_MinimumMtuFactory$InstanceHolder
okhttp3.RequestBody$Companion$toRequestBody$2
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18_Factory
com.facebook.fbreact.specs.NativeDevSettingsSpec
com.polidea.rxandroidble2.internal.scan.ScanRecordImplCompat
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink
okhttp3.internal.http2.ErrorCode$Companion
okhttp3.internal.ws.MessageDeflaterKt
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion
okhttp3.internal.http.HttpHeaders
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$5
com.facebook.react.bridge.JSIModuleHolder
okhttp3.MultipartReader$PartSource
com.polidea.rxandroidble2.internal.connection.IllegalOperationMessageCreator_Factory
com.polidea.rxandroidble2.internal.util.DisposableUtil$3
com.polidea.rxandroidble2.internal.DeviceScope
com.facebook.jni.UnknownCppException
com.facebook.soloader.ApplicationSoSource
com.facebook.react.bridge.WritableArray
com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator
okhttp3.internal.platform.AndroidPlatform
com.polidea.rxandroidble2.internal.connection.ConnectionSubscriptionWatcher
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback
com.facebook.react.runtime.JSEngineInstance
okhttp3.internal.platform.Platform
com.facebook.systrace.TraceListener
okhttp3.CertificatePinner$Pin
com.facebook.react.views.text.ReactTextViewManager
com.polidea.rxandroidble2.internal.connection.DisconnectionRouterInput
com.facebook.react.modules.clipboard.ClipboardModule
okhttp3.internal.io.FileSystem$Companion
com.polidea.rxandroidble2.RxBleDeviceServices$1
okhttp3.internal.http.RequestLine
com.polidea.rxandroidble2.internal.connection.ConnectorImpl
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$9
com.facebook.react.bridge.JSApplicationIllegalArgumentException
okhttp3.Dns$Companion
com.polidea.rxandroidble2.internal.DeviceComponent
com.facebook.fbreact.specs.NativeToastAndroidSpec
okhttp3.internal.http.HttpMethod
com.facebook.react.bridge.NoSuchKeyException
com.facebook.imagepipeline.nativecode.Bitmaps
okhttp3.EventListener$Companion$NONE$1
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder
okhttp3.internal.http.RealInterceptorChain
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$2
com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation_Factory
com.facebook.react.bridge.CatalystInstanceImpl$5
com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper
okhttp3.internal.platform.Platform$Companion
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec
com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider_Factory
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl$2
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$1
okhttp3.internal.tls.BasicCertificateChainCleaner
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1
com.polidea.rxandroidble2.RxBleDeviceServices$3
com.ghostcommv2.MainApplication
com.facebook.react.modules.blob.BlobCollector
com.facebook.react.bridge.JSInstance
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$2
com.polidea.rxandroidble2.internal.util.ScanRecordParser_Factory$InstanceHolder
com.reactnativecommunity.asyncstorage.BuildConfig
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$2$1
com.polidea.rxandroidble2.internal.logger.LoggerUtil
com.facebook.react.bridge.JavaMethodWrapper$1
com.polidea.rxandroidble2.exceptions.BleGattOperationType
com.facebook.react.bridge.JavaScriptContextHolder
com.facebook.react.perflogger.NativeModulePerfLogger
com.facebook.react.fabric.ComponentFactory
com.polidea.rxandroidble2.internal.cache.DeviceComponentWeakReference$Provider
com.facebook.react.bridge.JSBundleLoader$2
com.polidea.rxandroidble2.internal.serialization.OperationPriorityFifoBlockingQueue
com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter_Factory
com.facebook.hermes.intl.DateTimeFormat
com.facebook.soloader.Elf64_Shdr
okhttp3.internal.platform.ConscryptPlatform$Companion
okhttp3.internal.platform.android.AndroidLogHandler
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager
com.facebook.imagepipeline.memory.BufferMemoryChunkPool
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$7
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$1
com.reactnativecommunity.asyncstorage.AsyncLocalStorageUtil
okhttp3.internal.tls.OkHostnameVerifier
com.polidea.rxandroidble2.helpers.LocationServicesOkObservable_Factory
com.polidea.rxandroidble2.internal.operations.ScanOperation
okhttp3.internal.http2.Hpack$Reader
com.facebook.jni.DestructorThread$DestructorStack
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate
com.bleplx.adapter.BleModule
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableIndicationValueFactory$InstanceHolder
com.polidea.rxandroidble2.internal.connection.ConnectionModule_GattWriteMtuOverheadFactory
com.polidea.rxandroidble2.internal.util.ActiveCharacteristicNotification
com.polidea.rxandroidble2.RxBleAdapterStateObservable$1$1
com.polidea.rxandroidble2.RxBleDevice
com.facebook.react.bridge.ReactCxxErrorHandler
okhttp3.internal.concurrent.TaskQueue$schedule$2
com.facebook.fbreact.specs.NativeSourceCodeSpec
com.polidea.rxandroidble2.internal.RxBleDeviceProvider_Factory
com.polidea.rxandroidble2.internal.scan.InternalToExternalScanResultConverter
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1
com.facebook.react.turbomodule.core.interfaces.TurboModule
com.reactnativecommunity.asyncstorage.AsyncStorageModule$2
okhttp3.Cache$urls$1
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable$3
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi31_Factory
com.facebook.react.common.mapbuffer.WritableMapBuffer
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6$2
okhttp3.OkHttpClient$Builder
okhttp3.internal.connection.ExchangeFinder
okhttp3.internal.connection.Exchange$ResponseBodySource
com.facebook.react.runtime.JSTimerExecutor
com.polidea.rxandroidble2.ClientComponent$NamedBooleanObservables
com.facebook.react.bridge.CatalystInstanceImpl$4
com.polidea.rxandroidble2.internal.SingleResponseOperation
okhttp3.internal.http2.Http2Reader
com.facebook.react.bridge.MemoryPressure
com.facebook.react.bridge.JavaMethodWrapper$4
com.polidea.rxandroidble2.internal.connection.ConnectionComponent$NamedBooleans
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec
com.facebook.soloader.ApkSoSource
com.facebook.react.turbomodule.core.TurboModulePerfLogger
com.polidea.rxandroidble2.internal.connection.ThrowingIllegalOperationHandler
okhttp3.internal.cache2.Relay$Companion
okhttp3.MultipartReader
okhttp3.internal.http2.Http2Stream
com.facebook.react.uimanager.UIManagerModule
com.facebook.fbreact.specs.NativeAnimatedModuleSpec
com.facebook.fbreact.specs.NativeVibrationSpec
okhttp3.internal.http2.Http2
com.facebook.react.bridge.CxxModuleWrapperBase
com.facebook.fbreact.specs.NativeActionSheetManagerSpec
com.polidea.rxandroidble2.internal.operations.DisconnectOperation_Factory
androidx.versionedparcelable.ParcelImpl
com.facebook.react.bridge.ReadableNativeArray
okhttp3.internal.connection.RouteException
okhttp3.internal.ws.MessageInflaterKt
okhttp3.internal.ws.RealWebSocket$connect$1
okhttp3.internal.platform.Android10Platform
com.facebook.react.bridge.ReadableNativeMap$1$1
okhttp3.internal.connection.RouteSelector
com.polidea.rxandroidble2.internal.connection.IllegalOperationMessageCreator
com.facebook.react.modules.debug.DevSettingsModule
com.facebook.react.bridge.PromiseImpl
com.facebook.fbreact.specs.NativeAppStateSpec
com.facebook.react.bridge.JavaScriptExecutorFactory
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$1
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1
com.polidea.rxandroidble2.RxBleClientImpl_Factory
com.facebook.react.bridge.SoftAssertions
okhttp3.internal.connection.ConnectInterceptor
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.facebook.yoga.YogaNodeJNIBase
com.facebook.react.bridge.Callback
com.facebook.react.modules.core.JSTimers
okhttp3.internal.tls.CertificateChainCleaner$Companion
com.ghostcommv2.R$style
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec
com.polidea.rxandroidble2.internal.connection.ConnectionModule_MinimumMtuFactory
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$7
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl
com.facebook.react.views.image.ReactImageManager
okhttp3.Address
com.polidea.rxandroidble2.internal.connection.DescriptorWriter
okhttp3.CacheControl$Builder
com.facebook.imagepipeline.nativecode.NativeCodeInitializer
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager
okhttp3.Cache$RealCacheRequest
com.facebook.react.bridge.ReactApplicationContext
androidx.core.util.Pools$SimplePool
okhttp3.internal.tls.CertificateChainCleaner
okhttp3.JavaNetCookieJar
com.facebook.react.bridge.JavaOnlyMap
okhttp3.internal.Util$threadFactory$1
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$3
com.polidea.rxandroidble2.RxBleDeviceServices$2
com.facebook.react.modules.toast.ToastModule
com.polidea.rxandroidble2.internal.util.CheckerConnectPermission
com.facebook.soloader.SysUtil
com.facebook.fbreact.specs.NativeIntentAndroidSpec
androidx.lifecycle.SavedStateHandleAttacher
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideIllegalOperationHandlerFactory
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18
com.facebook.react.bridge.ReadableArray
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsAndroidWearFactory
okhttp3.CertificatePinner$check$1
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec
okhttp3.internal.platform.android.Android10SocketAdapter$Companion
com.polidea.rxandroidble2.exceptions.BleConflictingNotificationAlreadySetException
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideTargetSdkFactory
com.polidea.rxandroidble2.internal.BleIllegalOperationException
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$3
com.facebook.react.bridge.UIManagerListener
com.facebook.react.bridge.JSBundleLoader$1
com.facebook.fbreact.specs.NativePermissionsAndroidSpec
com.polidea.rxandroidble2.ClientComponent
com.facebook.react.modules.core.TimingModule
com.polidea.rxandroidble2.exceptions.BleCannotSetCharacteristicNotificationException$Reason
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi24_Factory
com.facebook.react.bridge.DynamicFromObject
com.facebook.react.bridge.ReactMarkerConstants
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices_Factory
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion
com.facebook.soloader.Elf32_Dyn
com.facebook.react.views.view.ReactClippingViewManager
com.facebook.react.bridge.ReadableNativeMap
com.polidea.rxandroidble2.internal.util.ClientStateObservable$1
com.facebook.react.animated.EventAnimationDriver
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler
com.ghostcommv2.R$string
okhttp3.internal.concurrent.TaskRunner$RealBackend
com.facebook.react.bridge.Arguments$2
com.facebook.react.bridge.NativeArgumentsParseException
okhttp3.internal.http2.ConnectionShutdownException
okhttp3.FormBody
com.facebook.soloader.ElfFileChannel
androidx.versionedparcelable.CustomVersionedParcelable
okhttp3.internal.http2.Http2Connection$Listener$Companion
com.facebook.react.modules.blob.BlobModule
com.facebook.react.modules.websocket.WebSocketModule
okhttp3.internal.connection.RealCall
com.reactnativecommunity.asyncstorage.R
com.facebook.react.bridge.NativeArrayInterface
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$IntSupplier
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec
com.facebook.soloader.NativeLoaderToSoLoaderDelegate
androidx.appcompat.view.menu.ExpandedMenuView
okhttp3.Cache$Companion
com.polidea.rxandroidble2.internal.util.ByteAssociationUtil
okhttp3.MultipartBody$Companion
com.facebook.react.bridge.JavaMethodWrapper$5
com.facebook.react.bridge.NativeArray
com.facebook.react.modules.appearance.AppearanceModule
com.facebook.react.bridge.ReadableNativeArray$1
okhttp3.internal.connection.RealConnection$WhenMappings
com.polidea.rxandroidble2.internal.util.CheckerPermission
androidx.lifecycle.Lifecycling$1
com.facebook.react.defaults.DefaultComponentsRegistry
kotlinx.coroutines.android.AndroidExceptionPreHandler
com.polidea.rxandroidble2.internal.operations.ConnectOperation$3
okhttp3.ResponseBody$BomAwareReader
com.facebook.react.bridge.UiThreadUtil
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothManagerFactory
okhttp3.internal.http2.Http2Stream$FramingSink
com.reactnativecommunity.asyncstorage.AsyncStorageExpoMigration
com.polidea.rxandroidble2.internal.connection.LoggingIllegalOperationHandler_Factory
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentBuilder
com.polidea.rxandroidble2.internal.connection.PayloadSizeLimitProvider
com.polidea.rxandroidble2.internal.RxBleDeviceProvider
okhttp3.Call
okhttp3.internal.platform.OpenJSSEPlatform$Companion
com.facebook.jni.IteratorHelper
okhttp3.CookieJar$Companion
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl$1
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion
com.polidea.rxandroidble2.internal.util.CheckerPermission_Factory
com.polidea.rxandroidble2.internal.operations.ConnectOperation$4
okhttp3.internal.connection.RouteSelector$resetNextProxy$1
com.facebook.soloader.NativeDeps
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory$1
com.polidea.rxandroidble2.LogConstants
okhttp3.internal.platform.BouncyCastlePlatform$Companion
okhttp3.internal.connection.Exchange$RequestBodySink
com.facebook.hermes.instrumentation.HermesSamplingProfiler
androidx.appcompat.widget.FitWindowsLinearLayout
com.polidea.rxandroidble2.scan.ScanFilter
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1
com.facebook.react.modules.statusbar.StatusBarModule
com.facebook.react.bridge.JSApplicationCausedNativeException
com.facebook.react.bridge.DynamicFromArray
okhttp3.internal.platform.android.AndroidLogKt
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi31
com.facebook.react.jscexecutor.JSCExecutor
com.facebook.react.devsupport.JSCHeapCapture
okhttp3.internal.connection.RealConnection
okhttp3.internal.http2.Http2Connection$Builder
com.facebook.react.bridge.MemoryPressureListener
okhttp3.internal.connection.ConnectionSpecSelector
com.facebook.react.bridge.InvalidIteratorException
com.polidea.rxandroidble2.internal.connection.ThrowingIllegalOperationHandler_Factory
androidx.emoji2.text.EmojiCompatInitializer$1
okhttp3.Cookie$Companion
com.facebook.react.module.model.ReactModuleInfo
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1
com.facebook.soloader.DoNotOptimize
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$4
okhttp3.internal.concurrent.TaskQueue$AwaitIdleTask
com.polidea.rxandroidble2.exceptions.BleScanException
okhttp3.internal.http2.Http2Connection$Listener
androidx.fragment.app.Fragment$5
okhttp3.internal.platform.android.CloseGuard$Companion
androidx.appcompat.app.AlertController$RecycleListView
com.facebook.react.bridge.DynamicFromMap
com.polidea.rxandroidble2.RxBleConnection$WriteOperationAckStrategy
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideContentResolverFactory
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource
com.facebook.fbreact.specs.NativeI18nManagerSpec
com.facebook.soloader.SoLoader$TestOnlyUtils
com.polidea.rxandroidble2.internal.scan.ExternalScanSettingsExtension
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResultLegacy
androidx.lifecycle.SavedStateHandleController
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$5
com.facebook.react.bridge.ReadableMap
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl_Factory
com.facebook.react.bridge.ReactMethod
okhttp3.internal.connection.RealConnection$connectTls$2
com.facebook.react.bridge.Arguments
com.polidea.rxandroidble2.scan.ScanResult
com.facebook.fbreact.specs.NativeRedBoxSpec
com.polidea.rxandroidble2.helpers.ByteArrayBatchObservable$1
com.facebook.react.modules.image.ImageLoaderModule
com.polidea.rxandroidble2.ClientComponent$BluetoothConstants
com.facebook.react.turbomodule.core.interfaces.NativeMethodCallInvokerHolder
androidx.activity.ComponentActivity$4
okhttp3.OkHttpClient$Builder$addInterceptor$2
com.polidea.rxandroidble2.internal.scan.ExternalScanSettingsExtension$Builder
com.facebook.react.bridge.JSBundleLoader$5
com.facebook.yoga.annotations.DoNotStrip
com.facebook.react.bridge.JSBundleLoaderDelegate
okhttp3.Cookie$Builder
kotlin.jvm.internal.DefaultConstructorMarker
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideFinalizationCloseableFactory
com.facebook.soloader.Elf32_Ehdr
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothInteractionExecutorServiceFactory
okhttp3.EventListener$Companion
com.facebook.soloader.ApkSoSource$ApkUnpacker
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher
com.facebook.hermes.intl.NumberFormat
okhttp3.internal.ws.WebSocketExtensions$Companion
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$3
okhttp3.internal.concurrent.TaskQueue$execute$1
com.polidea.rxandroidble2.internal.scan.EmulatedScanFilterMatcher
com.facebook.hermes.intl.Intl
com.facebook.react.bridge.GuardedAsyncTask
com.facebook.yoga.YogaValue
com.polidea.rxandroidble2.ClientScope
com.polidea.rxandroidble2.internal.util.BleConnectionCompat_Factory
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices
com.facebook.react.uimanager.ComponentNameResolverManager
androidx.appcompat.widget.ButtonBarLayout
com.polidea.rxandroidble2.internal.RxBleLog
androidx.appcompat.widget.ActionMenuView
okhttp3.CipherSuite
okhttp3.internal.http1.Http1ExchangeCodec
com.facebook.react.common.futures.SimpleSettableFuture
com.facebook.react.modules.debug.AnimationsDebugModule
android.support.v4.graphics.drawable.IconCompatParcelizer
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5$3
com.reactnativecommunity.asyncstorage.AsyncStorageModule$4
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23_Factory
okhttp3.internal.connection.RealCall$CallReference
com.reactnativecommunity.asyncstorage.AsyncStoragePackage$1
com.facebook.react.bridge.WritableNativeArray
com.reactnativecommunity.asyncstorage.AsyncStorageErrorUtil
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager$1
com.facebook.soloader.ExoSoSource$FileDso
com.facebook.jni.DestructorThread$Terminus
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl$1
com.facebook.soloader.Elf64_Dyn
com.facebook.common.internal.DoNotStrip
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec
com.polidea.rxandroidble2.internal.DeviceModule$1
com.polidea.rxandroidble2.ClientComponent$NamedExecutors
okhttp3.Interceptor$Companion
com.polidea.rxandroidble2.exceptions.BleServiceNotFoundException
com.facebook.react.bridge.WritableMap
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier
com.facebook.react.modules.systeminfo.AndroidInfoModule
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi21_Factory
androidx.activity.ComponentActivity$5
okhttp3.internal.http2.PushObserver
androidx.activity.result.ActivityResultRegistry$1
okhttp3.Request$Builder
com.facebook.react.bridge.JavaMethodWrapper$9
com.facebook.react.bridge.JavaOnlyMap$2
com.facebook.soloader.ExoSoSource$1
com.facebook.react.bridge.queue.MessageQueueThreadImpl
com.facebook.soloader.UnpackingSoSource
com.facebook.react.common.LifecycleState
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter
com.polidea.rxandroidble2.exceptions.BleDisconnectedException
okhttp3.Cache$CacheResponseBody$1
com.polidea.rxandroidble2.internal.QueueOperation
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$1
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1
com.facebook.yoga.YogaLogLevel
com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider_Factory$InstanceHolder
com.polidea.rxandroidble2.internal.RxBleDeviceImpl
com.facebook.react.bridge.NativeModule$NativeMethod
com.facebook.react.bridge.Inspector$RemoteConnection
com.facebook.react.bridge.Arguments$1
com.facebook.react.uimanager.UIConstantsProvider
com.polidea.rxandroidble2.RxBleDeviceServices$6
okhttp3.internal.http.RealResponseBody
okhttp3.CertificatePinner$Builder
com.facebook.react.bridge.WritableNativeMap
okhttp3.internal.tls.TrustRootIndex
com.facebook.react.modules.permissions.PermissionsModule
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$2
com.facebook.react.defaults.DefaultReactHostDelegate
okhttp3.internal.platform.android.Android10SocketAdapter
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5$2
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec
okhttp3.internal.connection.RealCall$AsyncCall
okhttp3.MultipartReader$Companion
com.facebook.soloader.MinElf$ElfError
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory
com.facebook.soloader.ElfZipFileChannel
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothCallbacksSchedulerFactory
okhttp3.internal.http2.PushObserver$Companion
com.facebook.jni.DestructorThread
com.polidea.rxandroidble2.internal.util.CharacteristicChangedEvent
com.facebook.react.bridge.JSCJavaScriptExecutor
com.facebook.react.bridge.CatalystInstanceImpl$3
com.polidea.rxandroidble2.internal.connection.NoRetryStrategy
okhttp3.internal.ws.RealWebSocket$Close
com.polidea.rxandroidble2.internal.scan.ScanRecordImplNativeWrapper
com.facebook.soloader.NativeDepsUnpacker
com.facebook.react.bridge.RuntimeScheduler
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilder
com.polidea.rxandroidble2.scan.ScanCallbackType
com.facebook.react.modules.core.RCTNativeAppEventEmitter
com.polidea.rxandroidble2.DaggerClientComponent$1
com.polidea.rxandroidble2.HiddenBluetoothGattCallback
com.facebook.react.bridge.ReactContext$RCTDeviceEventEmitter
okhttp3.internal.connection.Exchange
com.facebook.soloader.UnpackingSoSource$Dso
okhttp3.internal.cache.DiskLruCache$Editor
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$10
com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter
okhttp3.Headers
com.facebook.react.bridge.JSIModuleRegistry
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl_Factory
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$6
com.polidea.rxandroidble2.BuildConfig
okhttp3.internal.platform.android.DeferredSocketAdapter
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationServicesOkObservableFactory
androidx.appcompat.widget.ActionBarContextView
com.facebook.react.bridge.ReadableMapKeySetIterator
com.polidea.rxandroidble2.exceptions.BleAdapterDisabledException
com.polidea.rxandroidble2.helpers.AdvertisedServiceUUIDExtractor
okhttp3.internal.cache.DiskLruCache$snapshots$1
com.polidea.rxandroidble2.scan.ScanRecord
okhttp3.internal.io.FileSystem
com.facebook.react.util.RCTLog
okhttp3.Cookie
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$7
androidx.core.widget.NestedScrollView
com.polidea.rxandroidble2.internal.serialization.QueueSemaphore
com.polidea.rxandroidble2.internal.operations.ScanOperationApi18$1
okhttp3.internal.http2.Header
okhttp3.CacheControl$Companion
androidx.appcompat.view.menu.ActionMenuItemView
kotlin.internal.jdk8.JDK8PlatformImplementations
com.facebook.soloader.FileLocker
com.facebook.jni.DestructorThread$DestructorList
okhttp3.internal.http2.Http2Stream$FramingSource
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager_Factory
com.facebook.react.modules.appstate.AppStateModule
com.polidea.rxandroidble2.RxBleDeviceServices
okhttp3.WebSocket$Factory
com.facebook.soloader.Elf64_Phdr
com.polidea.rxandroidble2.RxBleCustomOperation
okhttp3.internal.connection.RealConnection$Companion
com.facebook.react.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$7
com.facebook.react.fabric.BindingImpl
com.facebook.react.bridge.ReactNoCrashSoftException
com.polidea.rxandroidble2.internal.util.ClientStateObservable$3$1
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18$1
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideRecommendedScanRuntimePermissionNamesFactory
com.ghostcommv2.R$drawable
okhttp3.MultipartReader$Part
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder
androidx.appcompat.widget.FitWindowsFrameLayout
com.polidea.rxandroidble2.internal.connection.DisconnectionRouterOutput
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager_Factory
com.facebook.soloader.ExoSoSource$ExoUnpacker
okhttp3.internal.HostnamesKt
com.polidea.rxandroidble2.internal.operations.CharacteristicWriteOperation
com.polidea.rxandroidble2.internal.connection.MtuWatcher$1
com.facebook.react.views.text.ReactTextAnchorViewManager
okhttp3.EventListener
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_NULL_SHA
okhttp3.internal.io.FileSystem$Companion: okhttp3.internal.io.FileSystem$Companion $$INSTANCE
okhttp3.Handshake$peerCertificates$2: kotlin.jvm.functions.Function0 $peerCertificatesFn
com.polidea.rxandroidble2.RxBleAdapterStateObservable$1: android.content.Context val$context
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: okhttp3.internal.cache.DiskLruCache$Editor this$0
okhttp3.Cache: okhttp3.internal.cache.DiskLruCache cache
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_END
com.polidea.rxandroidble2.ClientComponent$PlatformConstants: java.lang.String INT_TARGET_SDK
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: long serialVersionUID
okhttp3.HttpUrl: boolean isHttps
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation: byte[] tempBatchArray
com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker_Factory: bleshadow.javax.inject.Provider resultHandlerProvider
com.polidea.rxandroidble2.scan.ScanSettings: boolean mLegacy
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider suppressOperationChecksProvider
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.polidea.rxandroidble2.internal.connection.ConnectionModule_GattWriteMtuOverheadFactory$InstanceHolder: com.polidea.rxandroidble2.internal.connection.ConnectionModule_GattWriteMtuOverheadFactory INSTANCE
okhttp3.MediaType: okhttp3.MediaType$Companion Companion
com.bleplx.adapter.BleModule: java.lang.String NAME
com.polidea.rxandroidble2.scan.IsConnectable: com.polidea.rxandroidble2.scan.IsConnectable LEGACY_UNKNOWN
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher: com.polidea.rxandroidble2.HiddenBluetoothGattCallback nativeCallbackHidden
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_MOST_RECENT_EVENT_COUNT
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA[] $VALUES
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: java.lang.String NAME
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$sourceURL
okhttp3.internal.cache.CacheInterceptor: okhttp3.Cache cache
com.facebook.soloader.ExoSoSource$FileDso: java.io.File backingFile
com.facebook.react.ReactActivity: com.facebook.react.ReactActivityDelegate mDelegate
okhttp3.internal.http2.Hpack$Writer: int headerCount
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_END
okhttp3.MediaType: java.lang.String TOKEN
com.facebook.react.modules.network.NetworkingModule: java.util.Set mRequestIds
okhttp3.internal.cache2.Relay: okio.Source upstream
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: com.facebook.react.common.futures.SimpleSettableFuture val$dataFuture
io.reactivex.internal.disposables.CancellableDisposable: long serialVersionUID
com.himelbrand.ble.peripheral.RNBLEModule: com.facebook.react.bridge.ReactApplicationContext reactContext
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi21_Factory: bleshadow.javax.inject.Provider scanSettingsEmulatorProvider
okhttp3.internal.http2.Hpack$Writer: okio.Buffer out
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_START
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue pushQueue
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver: long serialVersionUID
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec MODERN_TLS
com.polidea.rxandroidble2.internal.operations.ConnectOperation$5: com.polidea.rxandroidble2.internal.operations.ConnectOperation this$0
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_INVALID_CONTENT
com.polidea.rxandroidble2.RxBleConnection: int GATT_MTU_MAXIMUM
com.polidea.rxandroidble2.ClientComponent$PlatformConstants: java.lang.String STRING_ARRAY_SCAN_PERMISSIONS
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable$FlatMapIterableObserver: long serialVersionUID
com.facebook.soloader.NativeDeps: java.util.Map sPrecomputedDeps
okhttp3.MultipartReader: boolean closed
com.facebook.react.config.ReactFeatureFlags: boolean enableCleanParagraphYogaNode
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_MIXED
com.polidea.rxandroidble2.internal.util.ClientStateObservable: io.reactivex.Observable bleAdapterStateObservable
com.bleplx.BlePlxModule: com.bleplx.converter.CharacteristicToJsObjectConverter characteristicConverter
com.facebook.react.views.view.ReactViewManager: java.lang.String REACT_CLASS
io.reactivex.internal.operators.observable.ObservableRange$RangeDisposable: long serialVersionUID
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_START
com.polidea.rxandroidble2.exceptions.BleDisconnectedException: java.lang.String bluetoothDeviceAddress
com.polidea.rxandroidble2.internal.QueueOperation$1: com.polidea.rxandroidble2.internal.QueueOperation this$0
okhttp3.OkHttpClient$Builder: okhttp3.EventListener$Factory eventListenerFactory
com.polidea.rxandroidble2.internal.util.DisposableUtil$1: io.reactivex.SingleEmitter val$emitter
okhttp3.Request$Builder: java.util.Map tags
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi18_Factory: bleshadow.javax.inject.Provider rxBleAdapterWrapperProvider
com.polidea.rxandroidble2.internal.connection.ConnectorImpl_Factory: bleshadow.javax.inject.Provider connectionComponentBuilderProvider
com.polidea.rxandroidble2.internal.connection.ConnectorImpl: io.reactivex.Scheduler callbacksScheduler
com.facebook.soloader.ExtractFromZipSoSource$ZipDso: int abiScore
io.reactivex.internal.operators.flowable.FlowableCreate$NoOverflowBaseAsyncEmitter: long serialVersionUID
com.polidea.rxandroidble2.internal.util.CheckerScanPermission_Factory: bleshadow.javax.inject.Provider checkerPermissionProvider
com.facebook.react.config.ReactFeatureFlags: boolean enableDefaultAsyncBatchedPriority
com.polidea.rxandroidble2.internal.util.ScanRecordParser: int DATA_TYPE_SERVICE_DATA_128_BIT
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_VISIBLE_PASSWORD
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl_Factory: bleshadow.javax.inject.Provider gattCallbackProvider
okhttp3.internal.ws.RealWebSocket$Close: int code
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: int companyId
io.reactivex.internal.operators.flowable.FlowableCreate$ErrorAsyncEmitter: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: long serialVersionUID
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
com.himelbrand.ble.peripheral.RNBLEModule: java.lang.String name
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi18_Factory$InstanceHolder: com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi18_Factory INSTANCE
com.polidea.rxandroidble2.BuildConfig: java.lang.String BUILD_TYPE
okhttp3.ConnectionSpec: java.lang.String[] cipherSuitesAsString
okhttp3.Authenticator: okhttp3.Authenticator NONE
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation: com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration timeoutConfiguration
okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.Headers trailers
com.facebook.react.bridge.Inspector$Page: int mId
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_END
com.polidea.rxandroidble2.RxBleClientImpl: com.polidea.rxandroidble2.internal.serialization.ClientOperationQueue operationQueue
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_TITLE
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.interop.InteropModuleRegistry mInteropModuleRegistry
io.reactivex.internal.subscribers.BoundedSubscriber: long serialVersionUID
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA ARM
com.facebook.react.uimanager.ViewGroupManager: java.util.WeakHashMap mZIndexHash
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule mTurboModuleManagerJSIModule
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: int $streamId$inlined
okhttp3.internal.http2.Http2Connection: int lastGoodStreamId
okhttp3.internal.connection.RealConnectionPool: okhttp3.internal.connection.RealConnectionPool$Companion Companion
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$1: com.polidea.rxandroidble2.internal.operations.DisconnectOperation this$0
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
okhttp3.HttpUrl$Builder: java.lang.String scheme
okhttp3.MultipartReader: okio.ByteString crlfDashDashBoundary
okhttp3.Response$Builder: okhttp3.Response priorResponse
okhttp3.internal.ws.RealWebSocket$Message: int formatOpcode
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_END
okhttp3.internal.platform.android.Android10SocketAdapter: okhttp3.internal.platform.android.Android10SocketAdapter$Companion Companion
okhttp3.internal.platform.android.AndroidSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory playProviderFactory
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.reflect.Method getAlpnSelectedProtocol
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA
com.facebook.react.uimanager.BaseViewManager: com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext sMatrixDecompositionContext
com.himelbrand.ble.peripheral.RNBLEModule: java.util.HashSet mBluetoothDevices
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: android.content.Context applicationContext
com.ghostcommv2.BuildConfig: java.lang.String APPLICATION_ID
com.facebook.react.config.ReactFeatureFlags: boolean reduceDeleteCreateMutationLayoutAnimation
okhttp3.HttpUrl$Builder: java.lang.String encodedFragment
io.reactivex.internal.operators.flowable.FlowableMaterialize$MaterializeSubscriber: long serialVersionUID
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider notificationAndIndicationManagerProvider
okhttp3.internal.http2.Http2: int TYPE_CONTINUATION
okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Connection this$0
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: java.lang.String $name
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider scanSetupBuilderImplApi18Provider
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_ACTIVE
okhttp3.internal.connection.RealCall: java.lang.Object callStackTrace
com.polidea.rxandroidble2.internal.connection.ThrowingIllegalOperationHandler_Factory: bleshadow.javax.inject.Provider messageCreatorProvider
com.facebook.soloader.UnpackingSoSource: java.lang.String DEPS_FILE_NAME
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider descriptorWriterProvider
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: boolean closed
com.facebook.soloader.ApkSoSource: byte APK_SO_SOURCE_SIGNATURE_VERSION
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$Output readDescriptorOutput
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$fileName
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_UPDATE_LAYOUT_SPECS_END
okhttp3.internal.http2.Settings: okhttp3.internal.http2.Settings$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_START
com.polidea.rxandroidble2.internal.operations.DisconnectOperation: android.bluetooth.BluetoothManager bluetoothManager
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap mMap
com.polidea.rxandroidble2.scan.ScanFilter: android.os.ParcelUuid mServiceDataUuid
okhttp3.RequestBody$Companion$toRequestBody$1: okio.ByteString $this_toRequestBody
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.connection.RealConnection connection
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi23_Factory: bleshadow.javax.inject.Provider androidScanObjectsConverterProvider
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
com.ghostcommv2.R$drawable: int src_assets_images_logo
okio.AsyncTimeout: okio.AsyncTimeout head
okhttp3.internal.connection.Exchange$ResponseBodySource: boolean closed
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$1: int val$batchSize
io.reactivex.internal.operators.observable.ObservableTakeLast$TakeLastObserver: long serialVersionUID
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_MD5
io.reactivex.exceptions.ProtocolViolationException: long serialVersionUID
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: byte[] configEnableIndication
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapDelayed: long serialVersionUID
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_END
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_STRING
com.facebook.soloader.Elf32_Ehdr: int e_shnum
com.facebook.fbreact.specs.NativeVibrationSpec: java.lang.String NAME
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String mAppName
okhttp3.Response: okhttp3.Protocol protocol
okhttp3.internal.http2.Http2Connection$Builder: java.net.Socket socket
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_START
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation: android.bluetooth.BluetoothGatt bluetoothGatt
com.polidea.rxandroidble2.internal.Priority: int priority
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String KEEP_ALIVE
okhttp3.Cache$CacheResponseBody: java.lang.String contentLength
okhttp3.internal.http2.Hpack$Reader: okio.BufferedSource source
com.facebook.soloader.Elf64_Shdr: int sh_name
okhttp3.internal.concurrent.TaskQueue$execute$1: kotlin.jvm.functions.Function0 $block
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider disconnectOperationProvider
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGE_LOADING_START
com.ghostcommv2.R$style: int AppTheme
com.facebook.soloader.UnpackingSoSource: java.lang.String INSTANCE_LOCK_FILE_NAME
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideContentResolverFactory: bleshadow.javax.inject.Provider contextProvider
okhttp3.internal.connection.RouteException: java.io.IOException lastConnectException
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: java.util.List $headerBlock$inlined
okhttp3.Request: okhttp3.CacheControl lazyCacheControl
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor previous
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: long serialVersionUID
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.NativeModuleRegistry mRegistry
com.polidea.rxandroidble2.exceptions.BleScanException: java.util.Date retryDateSuggestion
com.polidea.rxandroidble2.internal.util.ClientStateObservable: io.reactivex.Scheduler timerScheduler
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6: java.nio.ByteBuffer val$byteBuffer
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$2: com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator this$0
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList sDestructorList
com.facebook.react.animated.NativeAnimatedModule: boolean $assertionsDisabled
com.facebook.react.bridge.JavaOnlyMap$1: java.util.Iterator mIterator
com.polidea.rxandroidble2.RxBleClientImpl_Factory: bleshadow.javax.inject.Provider locationServicesStatusProvider
okhttp3.Cookie: java.util.regex.Pattern DAY_OF_MONTH_PATTERN
com.polidea.rxandroidble2.LogOptions: java.lang.Integer uuidLogSetting
okhttp3.internal.connection.RealConnection: int MAX_TUNNEL_ATTEMPTS
com.facebook.react.views.textinput.ReactTextInputManager: int IME_ACTION_ID
com.facebook.react.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: java.lang.String jsiReturnKind
com.polidea.rxandroidble2.internal.RxBleDeviceImpl_Factory: bleshadow.javax.inject.Provider connectionStateRelayProvider
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: long serialVersionUID
io.reactivex.internal.operators.single.SingleToObservable$SingleToObservableObserver: long serialVersionUID
com.polidea.rxandroidble2.RxBleDeviceServices$5: com.polidea.rxandroidble2.RxBleDeviceServices this$0
okhttp3.internal.tls.OkHostnameVerifier: int ALT_DNS_NAME
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: com.facebook.react.bridge.JavaModuleWrapper this$0
com.polidea.rxandroidble2.LogOptions$Builder: java.lang.Integer logLevel
com.facebook.react.fabric.FabricUIManager: long mDispatchViewUpdatesTime
com.polidea.rxandroidble2.internal.operations.ConnectOperation: boolean autoConnect
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider scanSetupBuilderImplApi21Provider
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: long serialVersionUID
com.facebook.react.modules.core.ExceptionsManagerModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
okhttp3.CacheControl$Builder: boolean onlyIfCached
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider loggerUtilBluetoothServicesProvider
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
com.polidea.rxandroidble2.RxBleDeviceServices: java.util.List bluetoothGattServices
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
com.facebook.soloader.ElfZipFileChannel: java.util.zip.ZipFile mZipFile
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$2: com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager this$0
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi18_Factory: bleshadow.javax.inject.Provider locationServicesStatusProvider
okhttp3.internal.http2.Http2Connection: java.lang.String connectionName
com.polidea.rxandroidble2.exceptions.BleScanException: int UNDOCUMENTED_SCAN_THROTTLE
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider provideBluetoothCallbacksSchedulerProvider
okhttp3.internal.http2.Hpack$Reader: int dynamicTableByteCount
okhttp3.Cache$Entry: long receivedResponseMillis
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider bindRxBleClientProvider
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18_Factory: bleshadow.javax.inject.Provider scanSettingsEmulatorProvider
com.polidea.rxandroidble2.internal.util.ScanRecordParser: int DATA_TYPE_SERVICE_SOLICITATION_UUIDS_128_BIT
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String REACT_CLASS
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String UPGRADE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA
com.polidea.rxandroidble2.scan.ScanFilter$Builder: java.lang.String mDeviceName
com.facebook.react.bridge.ModuleHolder: com.facebook.react.module.model.ReactModuleInfo mReactModuleInfo
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: long serialVersionUID
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: boolean inputExhausted
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_ASSETS_MODULE_END
com.facebook.react.modules.permissions.PermissionsModule: android.util.SparseArray mCallbacks
com.facebook.soloader.UnpackingSoSource$Dso: java.lang.String hash
com.polidea.rxandroidble2.internal.operations.DisconnectOperation: com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider bluetoothGattProvider
androidx.fragment.app.FragmentActivity: boolean mCreated
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: byte[] configEnableNotification
com.polidea.rxandroidble2.RxBleDeviceServices$2: java.util.UUID val$characteristicUuid
com.polidea.rxandroidble2.internal.util.ScanRecordParser: int DATA_TYPE_MANUFACTURER_SPECIFIC_DATA
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$6: com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl this$0
okhttp3.OkHttpClient$Builder: boolean followRedirects
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: boolean hasMoreChunks
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber: long serialVersionUID
okhttp3.internal.http1.HeadersReader: long headerLimit
com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration: long timeout
com.facebook.soloader.Elf32_Shdr: int sh_size
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: java.lang.String mMarkerName
com.polidea.rxandroidble2.exceptions.BleGattOperationType: com.polidea.rxandroidble2.exceptions.BleGattOperationType ON_MTU_CHANGED
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl clientComponentImpl
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$6: com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager this$0
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: long serialVersionUID
okhttp3.CookieJar: okhttp3.CookieJar NO_COOKIES
okhttp3.internal.http2.Hpack$Reader: java.util.List headerList
okhttp3.internal.http2.Http2Writer: okio.Buffer hpackBuffer
com.polidea.rxandroidble2.LogOptions$Builder: java.lang.Boolean shouldLogAttributeValues
com.polidea.rxandroidble2.internal.util.DisposableUtil$2: io.reactivex.ObservableEmitter val$emitter
okhttp3.CertificatePinner: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Number
com.facebook.soloader.ElfZipFileChannel: java.io.InputStream mIs
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutFallbackObserver: long serialVersionUID
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5$2: com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5 this$0
okhttp3.internal.http2.Http2Connection: long readBytesAcknowledged
com.facebook.soloader.Elf64_Ehdr: int e_machine
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.Exchange exchange
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.http2.Http2Connection http2Connection
com.facebook.react.modules.appstate.AppStateModule: java.lang.String INITIAL_STATE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.lang.String NAME
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.util.WeakHashMap mMeasuredStyles
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider bluetoothManagerWrapperProvider
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_DECIMAL_PAD
com.facebook.react.animated.NativeAnimatedModule: long mCurrentFrameNumber
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INIT_REACT_RUNTIME_START
com.polidea.rxandroidble2.internal.util.ScanRecordParser: int DATA_TYPE_SERVICE_UUIDS_32_BIT_PARTIAL
com.polidea.rxandroidble2.scan.ScanSettings$Builder: int mNumOfMatchesPerFilter
com.polidea.rxandroidble2.internal.operations.DescriptorReadOperation_Factory: bleshadow.javax.inject.Provider descriptorProvider
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForNonFabric
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl: com.polidea.rxandroidble2.RxBleConnection$WriteOperationRetryStrategy writeOperationRetryStrategy
com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry: java.util.concurrent.atomic.AtomicLong SEQUENCE
okhttp3.internal.ws.WebSocketWriter: boolean noContextTakeover
okhttp3.internal.http.CallServerInterceptor: boolean forWebSocket
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: java.lang.String $name
com.polidea.rxandroidble2.internal.operations.MtuRequestOperation: int mtu
okhttp3.internal.cache.DiskLruCache: okio.BufferedSink journalWriter
com.polidea.rxandroidble2.scan.ScanSettings: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.blob.FileReaderModule: java.lang.String ERROR_INVALID_BLOB
okhttp3.internal.http1.Http1ExchangeCodec: okio.BufferedSink sink
com.facebook.react.bridge.Inspector$LocalConnection: com.facebook.jni.HybridData mHybridData
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$3: com.polidea.rxandroidble2.internal.connection.DisconnectionRouter this$0
okhttp3.internal.http2.Http2Reader: okio.BufferedSource source
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: long serialVersionUID
com.polidea.rxandroidble2.internal.util.ActiveCharacteristicNotification: io.reactivex.Observable notificationObservable
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForFabric
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule mModule
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String DEFAULT_BACKGROUND_COLOR_KEY
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation: io.reactivex.Scheduler bluetoothInteractionScheduler
okhttp3.internal.http2.Http2Reader$ContinuationSource: okio.BufferedSource source
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver$InnerObserver: long serialVersionUID
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$10: com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl this$0
okhttp3.internal.http2.Http2Connection: long writeBytesMaximum
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_PARAGRAPH_ATTRIBUTES
okhttp3.OkHttpClient: int pingIntervalMillis
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi23_Factory: bleshadow.javax.inject.Provider scanSettingsEmulatorProvider
com.facebook.soloader.SoLoader$1: boolean val$hasNativeLoadMethod
com.polidea.rxandroidble2.ClientComponent$NamedSchedulers: java.lang.String BLUETOOTH_INTERACTION
okhttp3.MultipartBody: okhttp3.MediaType PARALLEL
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapImmediate: long serialVersionUID
okhttp3.internal.platform.android.CloseGuard: okhttp3.internal.platform.android.CloseGuard$Companion Companion
com.facebook.soloader.UnpackingSoSource: byte STATE_DIRTY
com.polidea.rxandroidble2.exceptions.BleCannotSetCharacteristicNotificationException: int UNKNOWN
okhttp3.internal.http.RealResponseBody: java.lang.String contentTypeString
com.polidea.rxandroidble2.scan.ScanFilter$Builder: java.lang.String mDeviceAddress
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi24: long EXCESSIVE_SCANNING_PERIOD
io.reactivex.internal.operators.flowable.FlowableSkipLast$SkipLastSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator: long serialVersionUID
okhttp3.internal.http2.Hpack$Reader: int headerTableSizeSetting
com.facebook.soloader.Elf32_Ehdr: int e_phentsize
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String IS_DISABLE_ANIMATIONS
com.facebook.react.bridge.ReactContext: boolean mDestroyed
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18: com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator internalScanResultCreator
com.polidea.rxandroidble2.internal.util.ScanRecordParser: int DATA_TYPE_SERVICE_SOLICITATION_UUIDS_32_BIT
com.facebook.soloader.ApkSoSource$ApkUnpacker: java.io.File mLibDir
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver: long serialVersionUID
okhttp3.MultipartReader$Part: okhttp3.Headers headers
okhttp3.internal.http2.Http2Connection: boolean client
okhttp3.internal.ws.RealWebSocket: int receivedCloseCode
com.facebook.react.bridge.Inspector$Page: java.lang.String mVM
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$11$1: com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$11 this$1
okhttp3.internal.connection.RealConnection: java.lang.String NPE_THROW_WITH_NULL
com.polidea.rxandroidble2.internal.scan.EmulatedScanFilterMatcher: com.polidea.rxandroidble2.internal.scan.ScanFilterInterface[] scanFilters
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber$ConcatMapMaybeObserver: long serialVersionUID
io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver: long serialVersionUID
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_NULL_SHA
okhttp3.internal.ws.RealWebSocket$Streams: boolean client
okhttp3.Response: okhttp3.internal.connection.Exchange exchange
com.himelbrand.ble.peripheral.RNBLEModule: android.bluetooth.BluetoothGattServer mGattServer
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String RECOVERABLE
okhttp3.Dispatcher: int maxRequestsPerHost
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String IS_TESTING
com.polidea.rxandroidble2.internal.util.ScanRecordParser: int DATA_TYPE_FLAGS
okhttp3.internal.ws.RealWebSocket: java.lang.String name
com.facebook.soloader.SoLoader: com.facebook.soloader.SoSource[] sSoSources
okhttp3.Response$Builder: okhttp3.internal.connection.Exchange exchange
com.polidea.rxandroidble2.RxBleClientImpl_Factory: bleshadow.javax.inject.Provider clientComponentFinalizerProvider
com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider: java.util.concurrent.atomic.AtomicReference reference
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_END
com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry: com.polidea.rxandroidble2.internal.operations.Operation operation
okhttp3.Response: okhttp3.Response networkResponse
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider rxBleGattCallbackProvider
okhttp3.internal.concurrent.TaskQueue$execute$1: boolean $cancelable
okhttp3.Response$Builder: okhttp3.ResponseBody body
com.facebook.react.bridge.CxxModuleWrapperBase: com.facebook.jni.HybridData mHybridData
okhttp3.internal.Util$threadFactory$1: boolean $daemon
com.facebook.soloader.DirectApkSoSource: java.util.Map mLibsInApkMap
okhttp3.internal.connection.RealConnection$WhenMappings: int[] $EnumSwitchMapping$0
okhttp3.FormBody: java.util.List encodedNames
com.facebook.react.modules.network.NetworkingModule: okhttp3.OkHttpClient mClient
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: java.lang.String DATABASE_NAME
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi24: com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi18 scanPreconditionVerifierApi18
io.reactivex.internal.subscribers.StrictSubscriber: long serialVersionUID
okio.ByteString: byte[] data
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideFinalizationCloseableFactory: bleshadow.javax.inject.Provider callbacksSchedulerProvider
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager$1: int[] $SwitchMap$com$polidea$rxandroidble2$NotificationSetupMode
com.polidea.rxandroidble2.internal.operations.ScanOperationApi21: io.reactivex.ObservableEmitter scanEmitter
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: com.polidea.rxandroidble2.internal.operations.OperationsProvider operationsProvider
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
okhttp3.internal.http2.Http2Reader$ContinuationSource: int left
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider throwingIllegalOperationHandlerProvider
okhttp3.internal.ws.WebSocketReader: long frameLength
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: boolean cacheRequestClosed
okhttp3.HttpUrl: java.lang.String QUERY_COMPONENT_REENCODE_SET
okhttp3.internal.cache2.FileOperator: java.nio.channels.FileChannel fileChannel
io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber: long serialVersionUID
com.facebook.soloader.Elf64_Phdr: int p_align
okhttp3.internal.ws.WebSocketProtocol: int CLOSE_NO_STATUS_CODE
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl$2$1: com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry val$entry
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_END
com.polidea.rxandroidble2.internal.scan.ScanSetup: io.reactivex.ObservableTransformer scanOperationBehaviourEmulatorTransformer
okhttp3.internal.http2.Http2: int TYPE_DATA
okhttp3.internal.connection.Exchange$ResponseBodySource: long contentLength
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$2: com.polidea.rxandroidble2.internal.connection.DisconnectionRouter this$0
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_ATTRIBUTED_STRING
okhttp3.internal.concurrent.TaskQueue$schedule$2: java.lang.String $name
okhttp3.internal.connection.RealCall: boolean responseBodyOpen
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices_Factory: bleshadow.javax.inject.Provider characteristicPropertiesParserProvider
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider connectionOperationQueueImplProvider
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver: long serialVersionUID
com.polidea.rxandroidble2.internal.operations.CharacteristicWriteOperation: byte[] data
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.Binding mBinding
okhttp3.internal.ws.WebSocketReader: okhttp3.internal.ws.WebSocketReader$FrameCallback frameCallback
com.reactnativecommunity.asyncstorage.AsyncStorageModule$4: com.facebook.react.bridge.Callback val$callback
com.polidea.rxandroidble2.scan.ScanFilter$Builder: android.os.ParcelUuid mServiceUuid
com.bleplx.BlePlxModule: com.bleplx.adapter.BleAdapter bleAdapter
io.reactivex.internal.operators.flowable.FlowableFromArray$ArraySubscription: long serialVersionUID
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA256
okhttp3.OkHttpClient$Builder: javax.net.ssl.HostnameVerifier hostnameVerifier
okhttp3.internal.connection.RealConnection: java.net.Socket rawSocket
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.bridge.ReactApplicationContext mReactContext
okhttp3.OkHttpClient: okhttp3.Cache cache
com.ghostcommv2.MainApplication$reactNativeHost$1: boolean isNewArchEnabled
okhttp3.internal.connection.RouteSelector: okhttp3.Address address
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
okhttp3.OkHttp: java.lang.String VERSION
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver: long serialVersionUID
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl_Factory: bleshadow.javax.inject.Provider rxBleConnectionProvider
com.polidea.rxandroidble2.internal.RxBleLog: int ERROR
okhttp3.internal.cache.DiskLruCache: int valueCount
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.reflect.Method removeMethod
okhttp3.internal.http2.Header: java.lang.String RESPONSE_STATUS_UTF8
com.facebook.soloader.ExtractFromZipSoSource: java.io.File mZipFileName
okhttp3.OkHttpClient$Builder: okhttp3.Dns dns
com.polidea.rxandroidble2.scan.ScanFilter$Builder: byte[] mManufacturerDataMask
com.facebook.react.fabric.FabricUIManager: long mFinishTransactionTime
okhttp3.CertificatePinner$Builder: java.util.List pins
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter: io.reactivex.Observable firstDisconnectionExceptionObs
io.reactivex.internal.operators.flowable.FlowableCreate$BufferAsyncEmitter: long serialVersionUID
com.facebook.react.fabric.FabricUIManager: boolean mDestroyed
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] mLocalArray
com.polidea.rxandroidble2.internal.operations.ConnectOperation$2: com.polidea.rxandroidble2.internal.operations.ConnectOperation this$0
com.facebook.react.uimanager.UIManagerModule: java.util.Map mCustomDirectEvents
kotlin.collections.EmptySet: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: long serialVersionUID
okhttp3.MediaType: java.lang.String[] parameterNamesAndValues
com.polidea.rxandroidble2.internal.util.ScanRecordParser: int DATA_TYPE_SERVICE_SOLICITATION_UUIDS_16_BIT
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6: com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$IntSupplier val$previousBatchIndexSupplier
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: byte[] configDisable
okhttp3.internal.platform.AndroidPlatform: boolean isSupported
com.polidea.rxandroidble2.RxBleAdapterStateObservable: io.reactivex.Observable bleAdapterStateObservable
com.polidea.rxandroidble2.scan.ScanFilter: byte[] mManufacturerData
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnConfigurationChangedListeners
com.facebook.soloader.ApkSoSource$ApkUnpacker: com.facebook.soloader.ApkSoSource this$0
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.SerialExecutor executor
okhttp3.internal.http2.Hpack$Writer: int headerTableSizeSetting
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23: boolean isAndroidWear
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation: com.polidea.rxandroidble2.RxBleConnection$WriteOperationRetryStrategy writeOperationRetryStrategy
com.polidea.rxandroidble2.internal.util.ScanRecordParser: int DATA_TYPE_LOCAL_NAME_SHORT
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl: com.polidea.rxandroidble2.internal.connection.RxBleGattCallback rxBleGattCallback
com.facebook.react.bridge.JSBundleLoader$1: android.content.Context val$context
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray mArray
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$10: java.util.UUID val$characteristicUuid
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_DES40_CBC_SHA
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_START
com.facebook.react.uimanager.BaseViewManager: int PERSPECTIVE_ARRAY_INVERTED_CAMERA_DISTANCE_INDEX
com.facebook.soloader.Elf32_Ehdr: int e_shentsize
androidx.core.app.ComponentActivity: androidx.collection.SimpleArrayMap mExtraDataMap
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: java.lang.String NAME
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_GCM_SHA256
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
okhttp3.internal.platform.Jdk9Platform: boolean isAvailable
okhttp3.MultipartBody: java.util.List parts
com.facebook.soloader.UnpackingSoSource: java.lang.String MANIFEST_FILE_NAME
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider provideRecommendedScanRuntimePermissionNamesProvider
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String ENCODING
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory_Factory: bleshadow.javax.inject.Provider locationServicesStatusProvider
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$ReaderRunnable readerRunnable
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl_Factory: bleshadow.javax.inject.Provider operationProvider
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Scheduler callbackScheduler
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.concurrent.atomic.AtomicBoolean listRead
com.facebook.react.views.switchview.ReactSwitchManager: android.widget.CompoundButton$OnCheckedChangeListener ON_CHECKED_CHANGE_LISTENER
io.reactivex.internal.util.NotificationLite$DisposableNotification: long serialVersionUID
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult: long timestampNanos
okhttp3.internal.ws.RealWebSocket: java.util.List ONLY_HTTP1
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_START
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$0
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_TYPE_HEADER_NAME
com.facebook.soloader.UnpackingSoSource: byte MANIFEST_VERSION
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mWindowFocusEventListeners
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ATTACH_TO_REACT_INSTANCE_MANAGER_END
okhttp3.HttpUrl: java.lang.String host
okhttp3.internal.connection.Exchange$RequestBodySink: boolean closed
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideScanSetupProviderFactory: bleshadow.javax.inject.Provider deviceSdkProvider
okhttp3.internal.http2.Http2: int FLAG_END_HEADERS
okhttp3.internal.cache.DiskLruCache: boolean initialized
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.Request request
io.reactivex.internal.operators.observable.ObservableTimer$TimerObserver: long serialVersionUID
okhttp3.internal.http2.Http2Stream: long EMIT_BUFFER_SIZE
io.reactivex.internal.operators.observable.ObservableFlatMap$InnerObserver: long serialVersionUID
com.facebook.react.config.ReactFeatureFlags: boolean enableTextSpannableCache
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.Response cacheResponse
com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper_Factory: bleshadow.javax.inject.Provider bluetoothAdapterProvider
okhttp3.Cache: int writeSuccessCount
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory$1$2: android.content.BroadcastReceiver val$broadcastReceiver
com.polidea.rxandroidble2.exceptions.BleScanException: int BLUETOOTH_CANNOT_START
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver$InnerObserver: long serialVersionUID
okhttp3.internal.cache2.Relay: okio.Buffer buffer
com.bleplx.adapter.BleModule: android.util.SparseArray discoveredServices
okhttp3.internal.concurrent.TaskRunner: int nextQueueName
okhttp3.internal.http2.Http2Writer: int maxFrameSize
okhttp3.Cookie$Builder: boolean httpOnly
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory$1$2: com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory$1 this$1
com.polidea.rxandroidble2.RxBleClientImpl_Factory: bleshadow.javax.inject.Provider clientStateObservableProvider
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
com.facebook.react.uimanager.ComponentNameResolverManager: com.facebook.jni.HybridData mHybridData
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$3: io.reactivex.Observable val$onCharacteristicWrite
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider provideBluetoothInteractionSchedulerProvider
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack sDestructorStack
okhttp3.internal.cache.DiskLruCache: int appVersion
com.facebook.react.runtime.BindingsInstaller: com.facebook.jni.HybridData mHybridData
com.facebook.soloader.UnpackingSoSource: java.lang.String STATE_FILE_NAME
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$7: java.util.UUID val$characteristicUuid
okhttp3.ResponseBody$BomAwareReader: okio.BufferedSource source
okhttp3.internal.http2.Settings: int set
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleRegistry mNativeModuleRegistry
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
com.facebook.soloader.ApplicationSoSource: android.content.Context applicationContext
com.facebook.soloader.ApkSoSource: byte LIBS_DIR_DOESNT_EXIST
okhttp3.Challenge: java.lang.String scheme
com.polidea.rxandroidble2.ConnectionSetup$Builder: boolean suppressOperationCheck
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSubscriber: long serialVersionUID
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1$3: com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1 this$1
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory$1$1: com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory$1 this$1
okhttp3.Protocol: okhttp3.Protocol H2_PRIOR_KNOWLEDGE
com.bleplx.BlePlxModule: com.facebook.react.bridge.ReactApplicationContext reactContext
com.polidea.rxandroidble2.RxBleConnection: int GATT_READ_MTU_OVERHEAD
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaModuleWrapper mModuleWrapper
kotlin.jvm.internal.CallableReference: boolean isTopLevel
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider provideIsConnectableCheckerProvider
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier sReactDatabaseSupplierInstance
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Boolean
okhttp3.Cookie: boolean hostOnly
com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation_Factory: bleshadow.javax.inject.Provider rxBleGattCallbackProvider
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.database.ContentObserver animationScaleObserver
com.polidea.rxandroidble2.internal.operations.DisconnectOperation_Factory: bleshadow.javax.inject.Provider connectionStateChangeListenerProvider
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: io.reactivex.functions.Function errorMapper
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl: io.reactivex.Scheduler timeoutScheduler
kotlin.collections.EmptyList: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver$OtherObserver: long serialVersionUID
okhttp3.HttpUrl: java.lang.String QUERY_COMPONENT_ENCODE_SET
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_UPDATE_LAYOUT_SPECS_START
okhttp3.internal.http2.Http2: int FLAG_COMPRESSED
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.connection.RealConnection connection
okhttp3.internal.connection.RealCall: okhttp3.Request originalRequest
com.facebook.soloader.NativeDepsUnpacker: java.lang.String NATIVE_DEPS_DIR_NAME
com.facebook.react.config.ReactFeatureFlags: boolean enableCppPropsIteratorSetter
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
com.facebook.react.bridge.ReactContext: java.lang.String EARLY_JS_ACCESS_EXCEPTION_MESSAGE
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: java.util.Hashtable mAdvertiserCallbackList
com.facebook.soloader.Elf64_Ehdr: int e_phnum
okhttp3.internal.platform.Android10Platform: java.util.List socketAdapters
com.facebook.react.config.ReactFeatureFlags: boolean enableEarlyScheduledMountItemExecution
com.bleplx.adapter.BleModule: com.bleplx.adapter.utils.DisposableMap pendingTransactions
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentBuilder: java.lang.Boolean autoConnect
com.facebook.react.bridge.DynamicFromObject: java.lang.Object mObject
com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl: com.polidea.rxandroidble2.internal.scan.InternalToExternalScanResultConverter internalToExternalScanResultConverter
okhttp3.internal.connection.RealConnection: long idleAtNs
okhttp3.OkHttpClient: int writeTimeoutMillis
com.polidea.rxandroidble2.internal.DeviceModule: int DEFAULT_DISCONNECT_TIMEOUT
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_START
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1$1 this$2
okhttp3.internal.http2.Http2Writer: okhttp3.internal.http2.Hpack$Writer hpackWriter
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationServicesStatusFactory: bleshadow.javax.inject.Provider deviceSdkProvider
okhttp3.internal.cache2.Relay: long bufferMaxSize
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$0
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_RSV3
okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator
okhttp3.internal.cache.CacheStrategy: okhttp3.Request networkRequest
com.facebook.react.modules.i18nmanager.I18nManagerModule: com.facebook.react.modules.i18nmanager.I18nUtil sharedI18nUtilInstance
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.JSInstance mJSInstance
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber$SwitchMapMaybeObserver: long serialVersionUID
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$2: com.polidea.rxandroidble2.internal.operations.Operation val$operation
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_START
com.polidea.rxandroidble2.exceptions.BleScanException: int SCAN_FAILED_FEATURE_UNSUPPORTED
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.String[] val$iteratorKeys
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int OPEN_DRAWER
okhttp3.internal.ws.WebSocketExtensions: boolean unknownValues
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskRunner$Companion Companion
okhttp3.internal.http2.Huffman$Node: int terminalBitCount
okhttp3.OkHttpClient$Builder: okhttp3.ConnectionPool connectionPool
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.http1.Http1ExchangeCodec$Companion Companion
com.polidea.rxandroidble2.RxBleConnection$WriteOperationRetryStrategy$LongWriteFailure: int batchIndex
kotlin.text.Regex$Serialized: long serialVersionUID
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.BatchEventDispatchedListener mBatchEventDispatchedListener
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType String
com.polidea.rxandroidble2.internal.util.CharacteristicChangedEvent: byte[] data
okhttp3.internal.ws.WebSocketReader: byte[] maskKey
io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableRetryWhen$RetryWhenSubscriber: long serialVersionUID
com.polidea.rxandroidble2.helpers.ValueInterpreter: int FORMAT_SINT32
com.polidea.rxandroidble2.internal.RxBleDeviceImpl: com.polidea.rxandroidble2.internal.connection.Connector connector
okhttp3.internal.http2.Settings: int HEADER_TABLE_SIZE
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode HTTP_1_1_REQUIRED
okhttp3.Cookie: java.util.regex.Pattern MONTH_PATTERN
com.facebook.react.bridge.Inspector: com.facebook.jni.HybridData mHybridData
com.polidea.rxandroidble2.internal.Priority: com.polidea.rxandroidble2.internal.Priority NORMAL
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NEVER_ASK_AGAIN
com.polidea.rxandroidble2.exceptions.BleCannotSetCharacteristicNotificationException: int CANNOT_SET_LOCAL_NOTIFICATION
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
com.polidea.rxandroidble2.utils.StandardUUIDsParser: java.util.Map CHARACTERISTIC_UUIDS
com.polidea.rxandroidble2.internal.util.ScanRecordParser: java.util.UUID BASE_UUID
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl: io.reactivex.Single writtenCharacteristicObservable
okhttp3.CacheControl: boolean isPrivate
okhttp3.OkHttpClient$Builder: java.net.Proxy proxy
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideIllegalOperationHandlerFactory: bleshadow.javax.inject.Provider loggingIllegalOperationHandlerProvider
okhttp3.internal.concurrent.Task: long nextExecuteNanoTime
com.facebook.soloader.SoSource: int PREPARE_FLAG_FORCE_REFRESH
okio.AsyncTimeout: long IDLE_TIMEOUT_MILLIS
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
okhttp3.internal.ws.WebSocketWriter: boolean isClient
io.reactivex.internal.util.ExceptionHelper$Termination: long serialVersionUID
okhttp3.internal.ws.RealWebSocket$Close: okio.ByteString reason
io.reactivex.internal.schedulers.ScheduledRunnable: long serialVersionUID
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideTargetSdkFactory: bleshadow.javax.inject.Provider contextProvider
com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState: com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState[] $VALUES
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.RealWebSocket$Streams streams
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider provideContentResolverProvider
com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState: com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState STATE_TURNING_ON
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.RealCall call
kotlin.jvm.internal.CallableReference: java.lang.String name
com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl: int NO_ERROR
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountItemDispatcher mMountItemDispatcher
androidx.core.app.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
com.polidea.rxandroidble2.exceptions.BleGattOperationType: com.polidea.rxandroidble2.exceptions.BleGattOperationType CONNECTION_STATE
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $readerToClose$inlined
com.polidea.rxandroidble2.ClientComponent$PlatformConstants: java.lang.String STRING_ARRAY_CONNECT_PERMISSIONS
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager_Factory: bleshadow.javax.inject.Provider gattCallbackProvider
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.facebook.react.modules.blob.BlobModule: java.util.Map mBlobs
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
com.polidea.rxandroidble2.LogConstants: int NONE
com.facebook.react.views.textinput.ReactTextInputManager: int BLUR_TEXT_INPUT
okhttp3.MultipartBody$Part: okhttp3.Headers headers
com.facebook.soloader.NativeLibrary: java.lang.Boolean mLoadLibraries
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl_Factory: bleshadow.javax.inject.Provider operationsProvider
com.facebook.soloader.SoLoader: java.util.Set sLoadedAndMergedLibraries
okhttp3.internal.platform.android.ConscryptSocketAdapter: okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion Companion
okhttp3.ResponseBody$BomAwareReader: java.io.Reader delegate
com.facebook.soloader.Elf64_Dyn: int d_tag
com.facebook.react.bridge.ReactMarker: java.util.Queue sNativeReactMarkerQueue
com.facebook.react.bridge.JavaScriptModuleRegistry: java.util.HashMap mModuleInstances
okhttp3.internal.connection.Exchange: boolean isDuplex
com.polidea.rxandroidble2.internal.util.DisposableUtil$3: io.reactivex.ObservableEmitter val$emitter
com.facebook.soloader.nativeloader.NativeLoaderDelegate: int SKIP_MERGED_JNI_ONLOAD
com.facebook.react.config.ReactFeatureFlags: boolean dispatchPointerEvents
com.facebook.react.modules.dialog.DialogModule: boolean mIsInForeground
okhttp3.internal.concurrent.TaskRunner: long coordinatorWakeUpAt
com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry: io.reactivex.ObservableEmitter operationResultObserver
com.facebook.react.bridge.JavaMethodWrapper: boolean DEBUG
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter: long serialVersionUID
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: long $unacknowledgedBytesRead$inlined
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_RESOURCE
com.polidea.rxandroidble2.RxBleClientImpl: com.polidea.rxandroidble2.ClientComponent$ClientComponentFinalizer clientComponentFinalizer
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$1: com.polidea.rxandroidble2.internal.connection.DisconnectionRouter this$0
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_256_GCM_SHA384
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$11: com.polidea.rxandroidble2.RxBleCustomOperation val$operation
okhttp3.Response$Builder: okhttp3.Response networkResponse
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_END
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean mShuttingDown
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: long serialVersionUID
com.facebook.react.bridge.ColorPropConverter: java.lang.String PATH_DELIMITER
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber$OtherSubscriber: long serialVersionUID
okhttp3.ConnectionSpec: java.lang.String[] tlsVersionsAsString
okhttp3.Authenticator$Companion: okhttp3.Authenticator$Companion $$INSTANCE
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$5: com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager this$0
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation: android.bluetooth.BluetoothGattCharacteristic bluetoothGattCharacteristic
com.polidea.rxandroidble2.scan.ScanFilter: android.os.ParcelUuid mServiceUuid
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String NAME
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ATTR
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider scanPreconditionsVerifierApi18Provider
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl: com.polidea.rxandroidble2.RxBleConnection$WriteOperationAckStrategy writeOperationAckStrategy
com.polidea.rxandroidble2.scan.ScanSettings: int mScanMode
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallback
okhttp3.Request: okhttp3.RequestBody body
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$0
okhttp3.CacheControl: okhttp3.CacheControl FORCE_CACHE
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl: com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration timeoutConfiguration
com.polidea.rxandroidble2.internal.operations.CharacteristicWriteOperation: android.bluetooth.BluetoothGattCharacteristic bluetoothGattCharacteristic
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType mThreadType
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi31: com.polidea.rxandroidble2.internal.util.CheckerLocationProvider checkerLocationProvider
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl_Factory: bleshadow.javax.inject.Provider bleServicesLoggerProvider
okhttp3.MediaType: java.util.regex.Pattern TYPE_SUBTYPE
okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory
com.facebook.fbreact.specs.NativeShareModuleSpec: java.lang.String NAME
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_FORMDATA
com.facebook.react.config.ReactFeatureFlags: boolean enableClonelessStateProgression
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode FLOW_CONTROL_ERROR
com.polidea.rxandroidble2.exceptions.BleGattOperationType: com.polidea.rxandroidble2.exceptions.BleGattOperationType RELIABLE_WRITE_COMPLETED
io.reactivex.internal.operators.observable.ObservableCreate$CreateEmitter: long serialVersionUID
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure UI_HIDDEN
okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorServiceOrNull
okhttp3.internal.ws.WebSocketReader: boolean perMessageDeflate
okhttp3.internal.connection.ExchangeFinder: int refusedStreamCount
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$3: com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager this$0
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner: long serialVersionUID
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_ATTR
okhttp3.internal.cache.DiskLruCache: java.lang.String REMOVE
okhttp3.ResponseBody$BomAwareReader: boolean closed
com.polidea.rxandroidble2.internal.util.ActiveCharacteristicNotification: boolean isIndication
com.facebook.react.fabric.FabricUIManager: long mCommitStartTime
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: boolean mIsDoneCreatingModule
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
okhttp3.internal.ws.WebSocketReader: boolean isControlFrame
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mAssertionErrorMessage
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mNativeModulesQueueThread
okhttp3.internal.platform.android.DeferredSocketAdapter: okhttp3.internal.platform.android.SocketAdapter delegate
okhttp3.internal.http.StatusLine: int HTTP_CONTINUE
okhttp3.internal.http2.Http2: java.lang.String[] BINARY
com.polidea.rxandroidble2.internal.operations.ScanOperation$1: java.lang.Object val$scanCallback
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
com.polidea.rxandroidble2.internal.util.ObservableUtil: io.reactivex.ObservableTransformer IDENTITY_TRANSFORMER
com.himelbrand.ble.peripheral.RNBLEModule: boolean advertising
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl$1: java.util.UUID val$uuid
com.polidea.rxandroidble2.scan.ScanFilter: byte[] mServiceDataMask
okhttp3.internal.http2.Settings: int MAX_HEADER_LIST_SIZE
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: long serialVersionUID
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketExtensions extensions
com.facebook.react.devsupport.LogBoxModule: java.lang.String NAME
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: java.lang.String NAME
com.polidea.rxandroidble2.internal.connection.MtuWatcher_Factory: bleshadow.javax.inject.Provider rxBleGattCallbackProvider
com.facebook.soloader.SoLoader: com.facebook.soloader.SoFileLoader sSoFileLoader
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_SHA
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String signature
com.facebook.soloader.Elf64_Shdr: int sh_addralign
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6$2: com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6 this$0
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver: long serialVersionUID
okhttp3.internal.concurrent.TaskQueue$schedule$2: kotlin.jvm.functions.Function0 $block
com.polidea.rxandroidble2.RxBleScanResult: int rssi
okhttp3.RequestBody$Companion$asRequestBody$1: okhttp3.MediaType $contentType
com.facebook.soloader.SoLoader$AppType: int UNSET
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.ReactContext this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_END
okhttp3.internal.cache.DiskLruCache$Editor: boolean[] written
com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation: com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration successTimeoutConfiguration
com.facebook.jni.IteratorHelper: java.lang.Object mElement
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA
com.facebook.jni.MapIteratorHelper: java.util.Iterator mIterator
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueue operationQueue
com.bleplx.adapter.BleModule: int currentLogLevel
io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription: long serialVersionUID
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.Map mModuleHolders
com.facebook.react.config.ReactFeatureFlags: boolean unstable_useRuntimeSchedulerAlways
com.facebook.react.bridge.CatalystInstanceImpl$5: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.facebook.react.config.ReactFeatureFlags: boolean fixStoppedSurfaceTagSetLeak
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: java.lang.String NAME
okhttp3.internal.ws.WebSocketProtocol: int PAYLOAD_LONG
com.facebook.react.fabric.FabricUIManager: java.util.concurrent.CopyOnWriteArrayList mListeners
okhttp3.internal.http2.Settings: int[] values
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker$1: com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker this$0
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.TurboModuleManagerDelegate mDelegate
okhttp3.internal.cache.DiskLruCache$snapshots$1: okhttp3.internal.cache.DiskLruCache$Snapshot nextSnapshot
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult: int rssi
okhttp3.internal.platform.BouncyCastlePlatform: okhttp3.internal.platform.BouncyCastlePlatform$Companion Companion
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: java.lang.String selected
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager: io.reactivex.subjects.Subject timeoutBehaviorSubject
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mCallerContext
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: long serialVersionUID
com.polidea.rxandroidble2.internal.connection.DescriptorWriter_Factory: bleshadow.javax.inject.Provider operationQueueProvider
com.facebook.react.bridge.ReactBridge: boolean sDidInit
com.facebook.soloader.SoLoader$AppType: int SYSTEM_APP
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_END
okhttp3.internal.cache.DiskLruCache$snapshots$1: java.util.Iterator delegate
okhttp3.internal.connection.Exchange$RequestBodySink: okhttp3.internal.connection.Exchange this$0
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: boolean $inFinished$inlined
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: java.lang.String NAME
com.facebook.soloader.DirectorySoSource: int RESOLVE_DEPENDENCIES
okhttp3.internal.http2.Http2Connection: long intervalPingsSent
io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber: long serialVersionUID
com.reactnativecommunity.asyncstorage.AsyncStorageModule$2: com.reactnativecommunity.asyncstorage.AsyncStorageModule this$0
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapInnerSubscriber: long serialVersionUID
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: java.lang.String VALUE_COLUMN
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Settings $settings$inlined
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$2: long val$delayToNextWindow
com.facebook.react.uimanager.UIManagerModule: boolean $assertionsDisabled
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl: com.polidea.rxandroidble2.internal.connection.DisconnectionRouterOutput disconnectionRouterOutput
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: long serialVersionUID
com.facebook.soloader.SoLoader: int SOLOADER_ENABLE_EXOPACKAGE
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: android.net.http.X509TrustManagerExtensions x509TrustManagerExtensions
okhttp3.internal.http2.Http2Writer: boolean closed
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider backgroundScannerImplProvider
com.facebook.yoga.YogaNodeJNIBase: float[] arr
okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Reader reader
com.polidea.rxandroidble2.exceptions.BleGattOperationType: com.polidea.rxandroidble2.exceptions.BleGattOperationType SERVICE_DISCOVERY
com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState: com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState DISCONNECTED
okhttp3.internal.connection.RealConnection: okhttp3.Route route
com.polidea.rxandroidble2.exceptions.BleConflictingNotificationAlreadySetException: boolean alreadySetIsIndication
okhttp3.ConnectionSpec: okhttp3.CipherSuite[] APPROVED_CIPHER_SUITES
com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl: com.facebook.jni.HybridData mHybridData
io.reactivex.internal.operators.observable.ObservablePublishAlt$PublishConnection: long serialVersionUID
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_START
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideComputationSchedulerFactory$InstanceHolder: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideComputationSchedulerFactory INSTANCE
okhttp3.Dns: okhttp3.Dns SYSTEM
com.facebook.react.modules.network.NetworkingModule: java.util.List mRequestBodyHandlers
io.reactivex.internal.operators.flowable.FlowableLimit$LimitSubscriber: long serialVersionUID
com.polidea.rxandroidble2.NotificationSetupMode: com.polidea.rxandroidble2.NotificationSetupMode DEFAULT
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler mExceptionHandlerWrapper
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_END
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType NEW_BACKGROUND
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: okhttp3.internal.ws.WebSocketWriter $writer$inlined
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber$InnerObserver: long serialVersionUID
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver: long serialVersionUID
com.facebook.soloader.ApkSoSource$ApkUnpacker: int mFlags
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_DECIMAL_PAD
okhttp3.internal.http2.Http2Stream$StreamTimeout: okhttp3.internal.http2.Http2Stream this$0
com.facebook.soloader.SoLoader$AppType: int UPDATED_SYSTEM_APP
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator_Factory: bleshadow.javax.inject.Provider schedulerProvider
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi24: int SCANS_LENGTH
okhttp3.internal.http2.Http2: java.lang.String[] FRAME_NAMES
com.facebook.react.views.text.ReactTextAnchorViewManager: int[] SPACING_TYPES
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date servedDate
com.facebook.soloader.DirectApkSoSource: java.io.File mApkFile
io.reactivex.internal.operators.observable.ObservableReplay$UnboundedReplayBuffer: long serialVersionUID
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
io.reactivex.internal.operators.flowable.FlowableAny$AnySubscriber: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableReplay$Node: long serialVersionUID
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_START
com.polidea.rxandroidble2.internal.connection.MtuWatcher$1: com.polidea.rxandroidble2.internal.connection.MtuWatcher this$0
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: com.polidea.rxandroidble2.internal.connection.DisconnectionRouter disconnectionRouter
com.facebook.react.uimanager.UIManagerModule: int mBatchId
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableIndicationValueFactory$InstanceHolder: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableIndicationValueFactory INSTANCE
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$3: com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl this$0
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueThreadSpec
com.polidea.rxandroidble2.helpers.LocationServicesOkObservable_Factory: bleshadow.javax.inject.Provider locationServicesOkObsImplProvider
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper mLooper
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher: android.bluetooth.BluetoothGattCallback nativeCallback
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_SYNC
com.facebook.react.views.image.ReactImageManager: java.lang.String REACT_CLASS
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferCloseSubscriber: long serialVersionUID
com.facebook.react.modules.network.NetworkingModule: java.util.List mUriHandlers
com.polidea.rxandroidble2.internal.util.CharacteristicPropertiesParser: int propertyWriteNoResponse
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTROL_PONG
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory$1: com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory this$0
com.facebook.react.bridge.CatalystInstanceImpl$2: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23: com.polidea.rxandroidble2.internal.util.CheckerLocationProvider checkerLocationProvider
com.facebook.soloader.Elf32_Ehdr: int e_version
okhttp3.internal.ws.WebSocketReader: boolean isClient
com.facebook.soloader.ElfZipFileChannel: java.util.zip.ZipEntry mZipEntry
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: java.util.List $requestHeaders$inlined
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.JavaModuleWrapper: java.lang.String TAG
com.polidea.rxandroidble2.helpers.ValueInterpreter: int FORMAT_UINT32
com.reactnativecommunity.asyncstorage.AsyncStorageModule$3: com.facebook.react.bridge.ReadableArray val$keys
okhttp3.Cache: int networkCount
com.polidea.rxandroidble2.internal.RxBleDeviceImpl: com.jakewharton.rxrelay2.BehaviorRelay connectionStateRelay
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$3: java.nio.ByteBuffer val$byteBuffer
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
okio.AsyncTimeout: okio.AsyncTimeout next
com.polidea.rxandroidble2.internal.scan.InternalToExternalScanResultConverter: com.polidea.rxandroidble2.internal.RxBleDeviceProvider deviceProvider
com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation_Factory: bleshadow.javax.inject.Provider connectionPriorityProvider
okhttp3.MultipartReader$Part: okio.BufferedSource body
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_RC4_40_MD5
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapInnerObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber: long serialVersionUID
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl: com.polidea.rxandroidble2.internal.serialization.OperationPriorityFifoBlockingQueue queue
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_RSV2
com.facebook.soloader.UnpackingSoSource$DsoManifest: com.facebook.soloader.UnpackingSoSource$Dso[] dsos
okhttp3.internal.io.FileSystem: okhttp3.internal.io.FileSystem SYSTEM
com.reactnativecommunity.asyncstorage.BuildConfig: boolean AsyncStorage_useNextStorage
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber: long serialVersionUID
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher_Factory$InstanceHolder: com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher_Factory INSTANCE
io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver: long serialVersionUID
okhttp3.TlsVersion: okhttp3.TlsVersion[] $VALUES
com.polidea.rxandroidble2.exceptions.BleScanException: int SCAN_FAILED_OUT_OF_HARDWARE_RESOURCES
okhttp3.ResponseBody$Companion$asResponseBody$1: okio.BufferedSource $this_asResponseBody
com.facebook.react.common.mapbuffer.ReadableMapBuffer: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.NativeModuleRegistry: java.lang.String TAG
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.ErrorCode errorCode
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber: long serialVersionUID
okhttp3.ResponseBody$Companion$asResponseBody$1: okhttp3.MediaType $contentType
com.facebook.soloader.Elf32_Phdr: int p_filesz
okhttp3.internal.ws.WebSocketReader: boolean closed
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver$ConcatMapSingleObserver: long serialVersionUID
okhttp3.OkHttpClient: java.util.List DEFAULT_PROTOCOLS
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: java.lang.reflect.Method findByIssuerAndSignatureMethod
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_START
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Object[] mArguments
okhttp3.MultipartBody$Builder: okio.ByteString boundary
com.facebook.soloader.Elf64_Ehdr: int e_phentsize
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
okhttp3.internal.cache2.Relay: java.io.RandomAccessFile file
com.facebook.soloader.Elf32_Phdr: int p_memsz
com.facebook.react.bridge.CatalystInstanceImpl$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1 this$1
okhttp3.internal.ws.RealWebSocket: long MAX_QUEUE_SIZE
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl$1: com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl this$0
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideIllegalOperationHandlerFactory: bleshadow.javax.inject.Provider throwingIllegalOperationHandlerProvider
com.facebook.react.bridge.ModuleHolder: boolean mIsCreating
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$2: com.polidea.rxandroidble2.internal.connection.RxBleGattCallback this$0
okhttp3.OkHttpClient$Builder: boolean followSslRedirects
com.facebook.soloader.NativeDepsUnpacker: java.lang.String NATIVE_DEPS_FILE_APK_PATH
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: java.lang.ref.WeakReference mOuter
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentBuilder: java.lang.Boolean suppressOperationChecks
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: boolean mIsTryingToCreate
com.polidea.rxandroidble2.scan.ScanResult: com.polidea.rxandroidble2.RxBleDevice bleDevice
com.himelbrand.ble.peripheral.RNBLEModule: java.util.HashMap servicesMap
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion Companion
okio.AsyncTimeout: int TIMEOUT_WRITE_SIZE
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$realSourceURL
com.facebook.react.modules.devloading.DevLoadingModule: com.facebook.react.devsupport.interfaces.DevLoadingViewManager mDevLoadingViewManager
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: bleshadow.javax.inject.Provider providesDisconnectTimeoutConfProvider
com.polidea.rxandroidble2.RxBleConnection$WriteOperationRetryStrategy$LongWriteFailure: com.polidea.rxandroidble2.exceptions.BleGattException cause
com.facebook.react.uimanager.RootViewManager: java.lang.String REACT_CLASS
com.polidea.rxandroidble2.internal.DeviceModule: int DEFAULT_OPERATION_TIMEOUT
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.interfaces.DeveloperSettings mCatalystSettings
okio.ByteString: long serialVersionUID
okhttp3.Cache$Entry: long sentRequestMillis
com.polidea.rxandroidble2.LogConstants: int MAC_ADDRESS_FULL
okhttp3.internal.concurrent.Task: java.lang.String name
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: boolean $clearPrevious$inlined
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager: io.reactivex.Single deviceServicesObservable
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_START
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: int $index$inlined
com.facebook.soloader.Elf32_Ehdr: int e_ident
io.reactivex.internal.operators.completable.CompletableAndThenCompletable$SourceObserver: long serialVersionUID
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSink sink
okhttp3.internal.http2.Header: java.lang.String TARGET_METHOD_UTF8
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.AndroidPlatform$Companion Companion
io.reactivex.internal.operators.observable.ObservableBuffer$BufferSkipObserver: long serialVersionUID
com.polidea.rxandroidble2.ClientComponent$PlatformConstants: java.lang.String BOOL_IS_NEARBY_PERMISSION_NEVER_FOR_LOCATION
com.facebook.react.bridge.JavaMethodWrapper: boolean mArgumentsProcessed
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.LifecycleEventListener val$listener
com.facebook.react.modules.network.NetworkingModule: boolean mShuttingDown
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$4: android.bluetooth.BluetoothGattCharacteristic val$bluetoothGattCharacteristic
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date expires
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_END
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] $VALUES
io.reactivex.internal.util.VolatileSizeArrayList: long serialVersionUID
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainNoLast: long serialVersionUID
io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode: long serialVersionUID
com.polidea.rxandroidble2.internal.util.ScanRecordParser: int DATA_TYPE_LOCAL_NAME_COMPLETE
com.facebook.soloader.Elf32_Dyn: int d_tag
okhttp3.MultipartReader: okhttp3.MultipartReader$PartSource currentPart
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualCoordinator: long serialVersionUID
com.facebook.soloader.Elf32_Phdr: int p_type
com.reactnativecommunity.asyncstorage.BuildConfig: java.lang.String BUILD_TYPE
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi31_Factory: bleshadow.javax.inject.Provider checkerLocationProvider
okhttp3.OkHttpClient: int callTimeoutMillis
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion Companion
okhttp3.CacheControl$Builder: boolean noCache
io.reactivex.observers.DisposableSingleObserver: java.util.concurrent.atomic.AtomicReference upstream
com.polidea.rxandroidble2.internal.util.ClientStateObservable: com.polidea.rxandroidble2.internal.util.LocationServicesStatus locationServicesStatus
com.polidea.rxandroidble2.internal.operations.ConnectOperation_Factory: bleshadow.javax.inject.Provider connectTimeoutProvider
okhttp3.internal.cache.DiskLruCache$Snapshot: okhttp3.internal.cache.DiskLruCache this$0
okhttp3.FormBody$Builder: java.util.List values
com.polidea.rxandroidble2.scan.ScanSettings: boolean mShouldCheckLocationProviderState
okhttp3.Cookie$Builder: boolean secure
com.facebook.soloader.SoLoader: java.util.Map sLoadingLibraries
io.reactivex.internal.operators.observable.ObservableGroupBy$State: long serialVersionUID
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResultLegacy: int rssi
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INADEQUATE_SECURITY
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Null
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.ExchangeFinder exchangeFinder
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: com.facebook.react.bridge.CatalystInstance mCatalystInstance
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: okhttp3.internal.ws.RealWebSocket this$0
okhttp3.internal.Util: java.util.TimeZone UTC
okhttp3.internal.platform.OpenJSSEPlatform: okhttp3.internal.platform.OpenJSSEPlatform$Companion Companion
com.facebook.react.bridge.JavaOnlyMap$1: com.facebook.react.bridge.JavaOnlyMap this$0
okhttp3.internal.connection.ExchangeFinder: okhttp3.Route nextRouteToTry
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings okHttpSettings
com.polidea.rxandroidble2.internal.operations.ReadRssiOperation_Factory: bleshadow.javax.inject.Provider timeoutConfigurationProvider
okhttp3.internal.http2.Http2: int TYPE_RST_STREAM
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentBuilder: com.polidea.rxandroidble2.Timeout operationTimeout
com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry$1: com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry this$0
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String HEIGHT_KEY
com.polidea.rxandroidble2.RxBleClientImpl_Factory: bleshadow.javax.inject.Provider checkerConnectPermissionProvider
com.ghostcommv2.BuildConfig: boolean IS_NEW_ARCHITECTURE_ENABLED
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager_Factory: bleshadow.javax.inject.Provider configEnableIndicationProvider
io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver: long serialVersionUID
com.facebook.react.bridge.DynamicFromArray: androidx.core.util.Pools$SimplePool sPool
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Http2Stream $newStream$inlined
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_1
com.polidea.rxandroidble2.internal.util.CheckerLocationProvider: android.location.LocationManager locationManager
okhttp3.internal.ws.WebSocketProtocol: java.lang.String ACCEPT_MAGIC
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation: byte[] bytesToWrite
com.facebook.soloader.SoSource: int LOAD_RESULT_IMPLICITLY_PROVIDED
okio.Timeout: long timeoutNanos
com.facebook.soloader.SoLoader: int SOLOADER_ALLOW_ASYNC_INIT
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5: int[] $SwitchMap$com$facebook$react$bridge$queue$MessageQueueThreadSpec$ThreadType
okhttp3.Handshake$Companion$handshake$1: java.util.List $peerCertificatesCopy
okhttp3.internal.http2.Http2Writer: okhttp3.internal.http2.Http2Writer$Companion Companion
com.bleplx.adapter.BleModule: android.util.SparseArray discoveredDescriptors
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSource source
okhttp3.Cookie: boolean secure
com.facebook.fbreact.specs.NativeImageEditorSpec: java.lang.String NAME
com.facebook.react.animated.NativeAnimatedModule: boolean mBatchingControlledByJS
androidx.activity.ComponentActivity: java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode
com.polidea.rxandroidble2.internal.operations.DisconnectOperation_Factory: bleshadow.javax.inject.Provider bluetoothGattProvider
com.bleplx.BlePlxModule: com.bleplx.converter.DescriptorToJsObjectConverter descriptorConverter
okhttp3.HttpUrl$Builder: java.lang.String host
okhttp3.CacheControl: int sMaxAgeSeconds
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: long serialVersionUID
com.facebook.jni.HybridData$Destructor: long mNativePointer
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory
okhttp3.ConnectionSpec$Builder: boolean supportsTlsExtensions
com.polidea.rxandroidble2.scan.ScanFilter: android.os.Parcelable$Creator CREATOR
okhttp3.internal.platform.ConscryptPlatform: boolean isSupported
com.polidea.rxandroidble2.internal.util.CheckerConnectPermission: com.polidea.rxandroidble2.internal.util.CheckerPermission checkerPermission
com.facebook.soloader.Elf32_Ehdr: int e_shoff
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String ACCESSIBILITY_SERVICE_EVENT_NAME
okhttp3.Cookie: java.lang.String domain
okhttp3.internal.cache.DiskLruCache$Entry: int lockingSourceCount
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_END
io.reactivex.disposables.ActionDisposable: long serialVersionUID
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$Output writeCharacteristicOutput
com.polidea.rxandroidble2.internal.scan.ScanRecordImplCompat: java.util.List serviceSolicitationUuids
com.facebook.react.uimanager.events.ReactEventEmitter: boolean $assertionsDisabled
okhttp3.Cache$RealCacheRequest$1: okhttp3.Cache$RealCacheRequest this$0
okhttp3.internal.http2.Http2Stream$FramingSource: okhttp3.internal.http2.Http2Stream this$0
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.jni.HybridData mHybridData
okhttp3.Interceptor$Companion: okhttp3.Interceptor$Companion $$INSTANCE
com.polidea.rxandroidble2.RxBleDeviceServices$6: com.polidea.rxandroidble2.RxBleDeviceServices this$0
com.facebook.react.views.view.ReactViewManager: java.lang.String HOTSPOT_UPDATE_KEY
com.facebook.react.bridge.CallbackImpl: int mCallbackId
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: java.lang.String $name
com.polidea.rxandroidble2.Timeout: java.util.concurrent.TimeUnit timeUnit
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnPictureInPictureModeChangedListeners
okhttp3.internal.cache.DiskLruCache: java.lang.String READ
okhttp3.internal.connection.RouteSelector: okhttp3.EventListener eventListener
com.polidea.rxandroidble2.internal.logger.LoggerSetup: int macAddressLogSetting
com.facebook.fbreact.specs.NativeModalManagerSpec: java.lang.String NAME
com.facebook.react.runtime.ReactInstance: com.facebook.react.uimanager.UIConstantsProviderManager mUIConstantsProviderManager
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_GCM_SHA256
com.facebook.soloader.SoLoader: boolean SYSTRACE_LIBRARY_LOADING
com.facebook.react.ReactNativeHost: com.facebook.react.ReactInstanceManager mReactInstanceManager
okhttp3.internal.connection.RealConnectionPool: okhttp3.internal.concurrent.TaskQueue cleanupQueue
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory$1$1: io.reactivex.ObservableEmitter val$emitter
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider scanPreconditionsVerifierApi24Provider
com.polidea.rxandroidble2.RxBleScanResult: byte[] scanRecord
io.reactivex.internal.operators.flowable.FlowableRange$RangeConditionalSubscription: long serialVersionUID
com.polidea.rxandroidble2.internal.connection.MtuWatcher_Factory: bleshadow.javax.inject.Provider initialValueProvider
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver: long serialVersionUID
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState mLifecycleState
com.facebook.react.bridge.GuardedResultAsyncTask: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer: long serialVersionUID
com.facebook.soloader.NativeDeps: float HASHMAP_LOAD_FACTOR
com.facebook.react.uimanager.UIManagerModule: java.lang.String TAG
okhttp3.internal.cache.DiskLruCache: java.lang.String CLEAN
okhttp3.internal.http2.Http2: int FLAG_ACK
kotlinx.coroutines.DefaultExecutor: int debugStatus
okhttp3.FormBody$Builder: java.util.List names
com.facebook.soloader.SoLoader$1: java.lang.reflect.Method val$nativeLoadRuntimeMethod
okhttp3.Cache$Entry: java.lang.String url
okhttp3.internal.cache.DiskLruCache$Entry: boolean readable
com.polidea.rxandroidble2.internal.util.CheckerScanPermission: com.polidea.rxandroidble2.internal.util.CheckerPermission checkerPermission
okhttp3.OkHttpClient$Builder: javax.net.SocketFactory socketFactory
com.facebook.react.bridge.GuardedRunnable: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver: long serialVersionUID
com.polidea.rxandroidble2.scan.ScanResult: com.polidea.rxandroidble2.scan.ScanCallbackType callbackType
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.react.views.image.ReactCallerContextFactory mCallerContextFactory
okhttp3.MultipartBody$Builder: java.util.List parts
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.lang.String NAME
okhttp3.internal.cache.DiskLruCache$Snapshot: long[] lengths
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$IntRef $receivedCloseCode$inlined
okhttp3.OkHttpClient$Builder: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion Companion
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainEmitLast: long serialVersionUID
com.polidea.rxandroidble2.utils.StandardUUIDsParser: java.util.Map SERVICE_UUIDS
com.polidea.rxandroidble2.exceptions.BleScanException: int UNKNOWN_ERROR_CODE
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String TAG
okhttp3.internal.connection.RealCall: okhttp3.OkHttpClient client
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: okio.ForwardingTimeout timeout
okhttp3.Request$Builder: java.lang.String method
com.facebook.react.fabric.interop.InteropEventEmitter: com.facebook.react.bridge.ReactContext mReactContext
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants APP_STARTUP_END
com.facebook.react.bridge.ReadableNativeMap$2: java.lang.String[] val$iteratorKeys
com.polidea.rxandroidble2.internal.connection.ConnectionParametersImpl: int latency
okhttp3.internal.cache.DiskLruCache$Snapshot: long sequenceNumber
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23_Factory: bleshadow.javax.inject.Provider isAndroidWearProvider
okhttp3.internal.cache.DiskLruCache: java.util.LinkedHashMap lruEntries
com.bleplx.adapter.BleModule: java.util.HashMap activeConnections
io.reactivex.internal.operators.observable.ObservableRefCount$RefConnection: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastSubscription: long serialVersionUID
com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation_Factory: bleshadow.javax.inject.Provider timeoutConfigurationProvider
okhttp3.internal.http.RetryAndFollowUpInterceptor: int MAX_FOLLOW_UPS
com.polidea.rxandroidble2.internal.operations.MtuRequestOperation_Factory: bleshadow.javax.inject.Provider timeoutConfigurationProvider
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback mMemoryTrimCallback
com.polidea.rxandroidble2.scan.ScanSettings: int MATCH_MODE_AGGRESSIVE
com.facebook.react.uimanager.UIManagerModule: java.lang.String NAME
com.facebook.react.bridge.CatalystInstanceImpl: java.util.ArrayList mJSCallsPendingInit
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_END
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] $VALUES
okhttp3.Cookie: java.lang.String value
com.polidea.rxandroidble2.internal.util.ScanRecordParser: int DATA_TYPE_SERVICE_UUIDS_16_BIT_PARTIAL
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.systrace.TraceListener mTraceListener
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_MD5
okhttp3.Handshake$Companion$get$1: java.util.List $peerCertificatesCopy
com.polidea.rxandroidble2.exceptions.BleGattException: int status
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl_Factory: bleshadow.javax.inject.Provider rssiReadOperationProvider
io.reactivex.internal.util.NotificationLite$ErrorNotification: long serialVersionUID
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_END
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl connectionComponentImpl
okhttp3.internal.authenticator.JavaNetAuthenticator$WhenMappings: int[] $EnumSwitchMapping$0
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider internalScanResultCreatorProvider
com.polidea.rxandroidble2.RxBleClientImpl: com.polidea.rxandroidble2.internal.scan.ScanSetupBuilder scanSetupBuilder
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_CLOSED
com.facebook.react.modules.appstate.AppStateModule: java.lang.String mAppState
com.reactnativecommunity.asyncstorage.SerialExecutor$1: java.lang.Runnable val$r
io.reactivex.internal.operators.single.SingleDoOnDispose$DoOnDisposeObserver: long serialVersionUID
com.facebook.soloader.Elf64_Ehdr: int e_shnum
com.facebook.react.uimanager.ViewManager: java.lang.String NAME
okhttp3.internal.http2.Http2: okio.ByteString CONNECTION_PREFACE
com.polidea.rxandroidble2.helpers.ByteArrayBatchObservable: java.nio.ByteBuffer byteBuffer
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$Output readRssiOutput
com.facebook.soloader.Elf64_Ehdr: int e_version
okhttp3.Handshake: okhttp3.CipherSuite cipherSuite
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightEndObserver: long serialVersionUID
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: int $streamId$inlined
okhttp3.internal.cache.DiskLruCache: long nextSequenceNumber
com.facebook.react.bridge.ReadableNativeMap$2: com.facebook.react.bridge.ReadableNativeMap this$0
androidx.lifecycle.ProcessLifecycleOwner$3: androidx.lifecycle.ProcessLifecycleOwner this$0
com.facebook.soloader.MinElf: int DT_NULL
io.reactivex.internal.operators.observable.ObservablePublishAlt$InnerDisposable: long serialVersionUID
com.polidea.rxandroidble2.internal.util.QueueReleasingEmitterWrapper: com.polidea.rxandroidble2.internal.serialization.QueueReleaseInterface queueReleaseInterface
okhttp3.internal.http2.Huffman$Node: int symbol
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$5: com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator this$0
com.polidea.rxandroidble2.exceptions.BleGattException: android.bluetooth.BluetoothGatt gatt
com.facebook.jni.CppSystemErrorException: int errorCode
okhttp3.Cookie$Builder: java.lang.String path
com.facebook.soloader.Elf64_Phdr: int p_vaddr
com.polidea.rxandroidble2.exceptions.BleScanException: int BLUETOOTH_NOT_AVAILABLE
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl_Factory: bleshadow.javax.inject.Provider timeoutSchedulerProvider
okhttp3.internal.http1.Http1ExchangeCodec: okio.BufferedSource source
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider rxBleClientImplProvider
com.polidea.rxandroidble2.scan.ScanCallbackType: com.polidea.rxandroidble2.scan.ScanCallbackType CALLBACK_TYPE_MATCH_LOST
com.polidea.rxandroidble2.RxBleDeviceServices$4: java.util.UUID val$descriptorUuid
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.Class clientProviderClass
com.polidea.rxandroidble2.RxBleClientImpl: io.reactivex.Scheduler bluetoothInteractionScheduler
com.polidea.rxandroidble2.internal.operations.ConnectOperation_Factory: bleshadow.javax.inject.Provider connectionStateChangedActionProvider
com.facebook.soloader.Elf32_Shdr: int sh_addr
okhttp3.Cache$Entry: java.lang.String requestMethod
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber: long serialVersionUID
com.polidea.rxandroidble2.internal.RxBleDeviceImpl: java.util.concurrent.atomic.AtomicBoolean isConnected
okhttp3.internal.connection.Exchange: okhttp3.internal.http.ExchangeCodec codec
com.facebook.react.bridge.CatalystInstanceImpl: boolean mAcceptCalls
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_ARRAY
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: long serialVersionUID
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: java.lang.String TABLE_CATALYST
com.facebook.soloader.NativeDepsUnpacker: java.lang.String APK_IDENTIFIER_FILE_NAME
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl_Factory: bleshadow.javax.inject.Provider bluetoothInteractionSchedulerProvider
okhttp3.internal.http2.Hpack: int PREFIX_5_BITS
com.polidea.rxandroidble2.internal.util.ScanRecordParser: int DATA_TYPE_SERVICE_UUIDS_128_BIT_COMPLETE
io.reactivex.internal.operators.observable.ObservableReplay$SizeBoundReplayBuffer: long serialVersionUID
okhttp3.internal.ws.WebSocketReader: boolean isFinalFrame
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl_Factory: bleshadow.javax.inject.Provider defaultMaxBatchSizeProvider
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: com.facebook.react.bridge.NativeModule mModule
okhttp3.HttpUrl$Builder: java.util.List encodedQueryNamesAndValues
com.facebook.soloader.ApkSoSource: byte LIBS_DIR_SNAPSHOT
okhttp3.Interceptor: okhttp3.Interceptor$Companion Companion
okhttp3.FormBody: okhttp3.MediaType CONTENT_TYPE
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
okhttp3.internal.http.RealInterceptorChain: int writeTimeoutMillis
com.polidea.rxandroidble2.scan.ScanResult: long timestampNanos
okhttp3.internal.cache.DiskLruCache: boolean hasJournalErrors
com.polidea.rxandroidble2.internal.connection.IllegalOperationMessageCreator_Factory: bleshadow.javax.inject.Provider propertiesParserProvider
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1: io.reactivex.functions.Function toFirstMatchFunc
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult: com.polidea.rxandroidble2.scan.IsConnectable isConnectable
com.polidea.rxandroidble2.scan.ScanSettings$Builder: int mCallbackType
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_ASSETS_MODULE_START
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.Exchange exchange
com.polidea.rxandroidble2.exceptions.BleServiceNotFoundException: java.util.UUID serviceUUID
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: long serialVersionUID
okhttp3.internal.cache2.Relay: boolean complete
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.modules.network.CustomClientBuilder customClientBuilder
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$4: com.polidea.rxandroidble2.internal.connection.DisconnectionRouter this$0
okhttp3.internal.ws.RealWebSocket$Close: long cancelAfterCloseMillis
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_EMPTY_RENEGOTIATION_INFO_SCSV
com.facebook.soloader.UnpackingSoSource$1: com.facebook.soloader.UnpackingSoSource this$0
com.polidea.rxandroidble2.internal.logger.LoggerSetup: com.polidea.rxandroidble2.LogOptions$Logger logger
io.reactivex.internal.operators.flowable.FlowableRetryPredicate$RetrySubscriber: long serialVersionUID
com.polidea.rxandroidble2.internal.operations.ConnectOperation$4$1: com.polidea.rxandroidble2.internal.operations.ConnectOperation$4 this$1
com.ghostcommv2.R$integer: int react_native_inspector_proxy_port
com.reactnativecommunity.asyncstorage.AsyncStorageModule: int MAX_SQL_KEYS
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256
com.polidea.rxandroidble2.ClientComponent$ClientModule$1: java.util.concurrent.ExecutorService val$connectionQueueExecutorService
com.facebook.jni.IteratorHelper: java.util.Iterator mIterator
okhttp3.Cache$RealCacheRequest: okio.Sink body
com.facebook.soloader.SoLoader: int SOLOADER_DISABLE_FS_SYNC_JOB
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance mCatalystInstance
io.reactivex.internal.operators.flowable.FlowableRepeat$RepeatSubscriber: long serialVersionUID
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesQueueThread
okhttp3.OkHttpClient: boolean followSslRedirects
com.bleplx.adapter.BleModule: com.bleplx.adapter.utils.ServiceFactory serviceFactory
com.polidea.rxandroidble2.internal.logger.LoggerUtil$AttributeLogWrapper: java.util.UUID uuid
com.reactnativecommunity.asyncstorage.BuildConfig: boolean AsyncStorage_useDedicatedExecutor
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_RUN_JS_BUNDLE_START
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableAmb$AmbInnerSubscriber: long serialVersionUID
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map REACT_PROPS_AUTOFILL_HINTS_MAP
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalMap
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilOtherSubscriber: long serialVersionUID
com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation_Factory: bleshadow.javax.inject.Provider bluetoothGattProvider
kotlin.jvm.internal.CallableReference: java.lang.String signature
okhttp3.internal.cache.CacheInterceptor: okhttp3.internal.cache.CacheInterceptor$Companion Companion
com.facebook.react.fabric.BindingImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.modules.permissions.PermissionsModule: int mRequestCode
com.polidea.rxandroidble2.internal.util.UUIDUtil: int UUID_BYTES_128_BIT
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion Companion
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
okhttp3.internal.http2.Hpack$Reader: int maxDynamicTableByteCount
com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState: com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState DISCONNECTING
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: com.polidea.rxandroidble2.internal.connection.DescriptorWriter descriptorWriter
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: io.reactivex.Scheduler callbackScheduler
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_END
com.polidea.rxandroidble2.scan.ScanSettings: int SCAN_MODE_BALANCED
com.polidea.rxandroidble2.RxBleDeviceServices$1: com.polidea.rxandroidble2.RxBleDeviceServices this$0
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
com.polidea.rxandroidble2.ClientComponent$NamedSchedulers: java.lang.String TIMEOUT
okhttp3.internal.ws.RealWebSocket: int receivedPingCount
com.facebook.react.animated.EventAnimationDriver: int mViewTag
com.facebook.soloader.SoLoader: boolean isEnabled
io.reactivex.internal.operators.flowable.FlowableTakeLast$TakeLastSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableZip$ZipCoordinator: long serialVersionUID
com.facebook.soloader.Elf64_Phdr: int p_flags
com.polidea.rxandroidble2.RxBleAdapterStateObservable$1$1: io.reactivex.ObservableEmitter val$emitter
okhttp3.OkHttpClient: okhttp3.OkHttpClient$Companion Companion
okhttp3.OkHttpClient$Builder: java.util.List networkInterceptors
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String REACT_CLASS
okhttp3.internal.http2.Hpack$Writer: int nextHeaderIndex
com.polidea.rxandroidble2.internal.util.ClientStateObservable: io.reactivex.Observable locationServicesOkObservable
com.facebook.react.bridge.NativeMap: com.facebook.jni.HybridData mHybridData
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.reflect.Method getMethod
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mJSMessageQueueThread
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23: com.polidea.rxandroidble2.internal.util.CheckerScanPermission checkerScanPermission
com.polidea.rxandroidble2.internal.connection.ConnectionComponent$NamedBooleans: java.lang.String SUPPRESS_OPERATION_CHECKS
com.facebook.react.views.image.ReactImageManager: java.lang.Object mCallerContext
com.polidea.rxandroidble2.helpers.ValueInterpreter: int FORMAT_SINT16
okhttp3.CipherSuite: java.util.Comparator ORDER_BY_NAME
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable: com.polidea.rxandroidble2.internal.connection.RxBleGattCallback rxBleGattCallback
kotlin.jvm.internal.Lambda: int arity
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$1: com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl this$0
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue sReferenceQueue
com.polidea.rxandroidble2.scan.ScanFilter: int mManufacturerId
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue mOperations
io.reactivex.internal.operators.single.SingleUsing$UsingSingleObserver: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableConcatWithSingle$ConcatWithObserver: long serialVersionUID
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_START
okhttp3.internal.tls.BasicCertificateChainCleaner: okhttp3.internal.tls.TrustRootIndex trustRootIndex
okhttp3.internal.connection.Exchange$ResponseBodySource: boolean invokeStartEvent
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier
com.polidea.rxandroidble2.scan.ScanFilter$Builder: byte[] mServiceData
com.facebook.soloader.UnpackingSoSource: java.util.Map mLibsBeingLoaded
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] mLocalTypeArray
okhttp3.internal.ws.WebSocketReader: okhttp3.internal.ws.MessageInflater messageInflater
com.facebook.react.bridge.ModuleHolder: int mInstanceKey
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
okhttp3.internal.http2.Settings: int DEFAULT_INITIAL_WINDOW_SIZE
com.polidea.rxandroidble2.scan.ScanFilter$Builder: int mManufacturerId
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mAccessibilityServiceEnabled
okhttp3.internal.http2.Http2ExchangeCodec: boolean canceled
com.polidea.rxandroidble2.helpers.ByteArrayBatchObservable$1: com.polidea.rxandroidble2.helpers.ByteArrayBatchObservable this$0
okhttp3.OkHttpClient$Builder: java.util.List connectionSpecs
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_END
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider providesOperationTimeoutConfProvider
io.reactivex.internal.operators.single.SingleDelayWithObservable$OtherSubscriber: long serialVersionUID
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18$1: com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18 this$0
com.polidea.rxandroidble2.ClientComponent$ClientModule$1: java.util.concurrent.ExecutorService val$interactionExecutorService
com.facebook.soloader.SoLoader: com.facebook.soloader.SystemLoadLibraryWrapper sSystemLoadLibraryWrapper
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String PUBLIC_SUFFIX_RESOURCE
com.reactnativecommunity.asyncstorage.AsyncStorageModule$1: com.facebook.react.bridge.Callback val$callback
com.facebook.soloader.Elf64_Ehdr: int e_ident
com.polidea.rxandroidble2.scan.ScanFilter$Builder: android.os.ParcelUuid mServiceUuidMask
okhttp3.CacheControl: okhttp3.CacheControl FORCE_NETWORK
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_CODE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_256_CBC_SHA
okio.ForwardingSource: okio.Source delegate
okhttp3.internal.Util: okhttp3.RequestBody EMPTY_REQUEST
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mJSQueueThread
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String APPEARANCE_CHANGED_EVENT_NAME
com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry$1: com.polidea.rxandroidble2.internal.serialization.QueueSemaphore val$semaphore
okhttp3.internal.cache.DiskLruCache: java.io.File journalFileBackup
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE_TEMP
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$WithLatestFromSubscriber: long serialVersionUID
okhttp3.internal.http2.Http2Connection$Listener: okhttp3.internal.http2.Http2Connection$Listener$Companion Companion
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_CCM_SHA256
okhttp3.MultipartBody: okhttp3.MediaType type
com.polidea.rxandroidble2.exceptions.BleGattOperationType: java.lang.String description
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer: long serialVersionUID
com.polidea.rxandroidble2.RxBleAdapterStateObservable$1$1: com.polidea.rxandroidble2.RxBleAdapterStateObservable$1 this$1
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_3
com.facebook.soloader.SoLoader: int SOLOADER_ENABLE_DIRECT_SOSOURCE
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: com.facebook.jni.HybridData mHybridData
okhttp3.internal.ws.WebSocketProtocol: okhttp3.internal.ws.WebSocketProtocol INSTANCE
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationServicesOkObservableFactory: bleshadow.javax.inject.Provider locationServicesOkObservableApi23FactoryProvider
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ATTACH_TO_REACT_INSTANCE_MANAGER_START
com.facebook.soloader.DirectorySoSource: int ON_LD_LIBRARY_PATH
com.facebook.react.bridge.ReadableNativeMap$3: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
okhttp3.internal.connection.RealCall: java.util.concurrent.atomic.AtomicBoolean executed
com.polidea.rxandroidble2.internal.operations.ScanOperationApi21: com.polidea.rxandroidble2.scan.ScanSettings scanSettings
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_MESSAGE
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: okhttp3.internal.http2.Http2Connection this$0
com.polidea.rxandroidble2.scan.ScanSettings: int SCAN_MODE_OPPORTUNISTIC
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$2: com.polidea.rxandroidble2.internal.util.QueueReleasingEmitterWrapper val$emitterWrapper
com.polidea.rxandroidble2.internal.connection.MtuWatcher: io.reactivex.disposables.SerialDisposable serialSubscription
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_0
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSource source
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: int $streamId$inlined
com.facebook.react.bridge.ReactContext: android.view.LayoutInflater mInflater
okhttp3.internal.http2.Settings: int MAX_CONCURRENT_STREAMS
okhttp3.internal.connection.RealCall$timeout$1: okhttp3.internal.connection.RealCall this$0
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothInteractionSchedulerFactory: bleshadow.javax.inject.Provider serviceProvider
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String NAME
com.facebook.soloader.UnpackingSoSource: java.lang.String mCorruptedLib
com.polidea.rxandroidble2.internal.util.ScanRecordParser: int DATA_TYPE_TX_POWER_LEVEL
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_SHORT_KEY
okhttp3.Address: java.net.ProxySelector proxySelector
com.polidea.rxandroidble2.internal.scan.ScanRecordImplCompat: java.util.List serviceUuids
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: long serialVersionUID
okhttp3.OkHttpClient: okhttp3.internal.connection.RouteDatabase routeDatabase
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$1: java.util.UUID val$characteristicUuid
io.reactivex.internal.operators.observable.ObservableWindow$WindowExactObserver: long serialVersionUID
okhttp3.OkHttpClient: java.net.Proxy proxy
io.reactivex.internal.operators.single.SingleDelayWithSingle$OtherObserver: long serialVersionUID
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_END
io.reactivex.internal.operators.flowable.FlowableReduce$ReduceSubscriber: long serialVersionUID
com.polidea.rxandroidble2.internal.RxBleLog: int VERBOSE
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec RESTRICTED_TLS
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.Protocol protocol
okhttp3.internal.connection.ExchangeFinder: int connectionShutdownCount
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl: bleshadow.javax.inject.Provider rssiReadOperationProvider
okhttp3.RequestBody$Companion$toRequestBody$2: okhttp3.MediaType $contentType
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightObserver: long serialVersionUID
com.ghostcommv2.MainApplication: com.facebook.react.ReactNativeHost reactNativeHost
com.polidea.rxandroidble2.internal.RxBleDeviceImpl: android.bluetooth.BluetoothDevice bluetoothDevice
okhttp3.OkHttpClient: boolean followRedirects
com.facebook.soloader.DirectorySoSource: java.util.List denyList
com.polidea.rxandroidble2.internal.util.ClientStateObservable_Factory: bleshadow.javax.inject.Provider timerSchedulerProvider
okhttp3.internal.cache.CacheStrategy$Factory: long receivedResponseMillis
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator proxyAuthenticator
com.polidea.rxandroidble2.internal.DeviceModule_ProvidesConnectTimeoutConfFactory: bleshadow.javax.inject.Provider timeoutSchedulerProvider
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_MAPBUFFER_SO_FILE_START
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] $VALUES
androidx.fragment.app.FragmentActivity: java.lang.String FRAGMENTS_TAG
okhttp3.internal.http1.Http1ExchangeCodec: int state
io.reactivex.internal.schedulers.ScheduledDirectTask: long serialVersionUID
com.polidea.rxandroidble2.LogOptions: java.lang.Integer logLevel
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult: com.polidea.rxandroidble2.scan.ScanCallbackType scanCallbackType
io.reactivex.internal.operators.observable.ObservableRepeatUntil$RepeatUntilObserver: long serialVersionUID
okhttp3.internal.ws.WebSocketWriter: okio.Buffer sinkBuffer
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_DES_CBC_SHA
com.facebook.soloader.Elf32_Ehdr: int e_machine
com.facebook.soloader.UnpackingSoSource$1: byte[] val$deps
okhttp3.CacheControl$Builder: int maxStaleSeconds
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator authenticator
com.facebook.soloader.MinElf: int ELF_MAGIC
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_SEED_CBC_SHA
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_END
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.OkHttpClient client
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber: long serialVersionUID
io.reactivex.internal.operators.single.SingleTimer$TimerDisposable: long serialVersionUID
com.polidea.rxandroidble2.internal.RxBleLog: int DEBUG
com.polidea.rxandroidble2.internal.logger.LoggerUtil$AttributeLogWrapper: boolean valueMatters
com.facebook.react.views.text.ReactRawTextManager: java.lang.String REACT_CLASS
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.polidea.rxandroidble2.internal.SingleResponseOperation: com.polidea.rxandroidble2.internal.connection.RxBleGattCallback rxBleGattCallback
com.polidea.rxandroidble2.internal.util.ScanRecordParser: int UUID_BYTES_32_BIT
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ON_MEASURE_END
okhttp3.internal.platform.Jdk9Platform: okhttp3.internal.platform.Jdk9Platform$Companion Companion
com.polidea.rxandroidble2.scan.ScanSettings: int CALLBACK_TYPE_MATCH_LOST
okhttp3.Response$Builder: okhttp3.Protocol protocol
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager: android.bluetooth.BluetoothGatt bluetoothGatt
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.facebook.soloader.Elf64_Ehdr: int e_entry
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$Output changedMtuOutput
com.facebook.soloader.NativeDeps: java.util.List sPrecomputedLibs
com.polidea.rxandroidble2.internal.BleIllegalOperationException: java.util.UUID characteristicUUID
okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar
io.reactivex.internal.operators.flowable.FlowableRepeatUntil$RepeatSubscriber: long serialVersionUID
okhttp3.internal.connection.RealConnection$connectTls$2: okhttp3.internal.connection.RealConnection this$0
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
okhttp3.OkHttpClient$Builder: int callTimeout
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl deviceComponentImpl
okhttp3.RequestBody$Companion$toRequestBody$1: okhttp3.MediaType $contentType
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedEmitLast: long serialVersionUID
com.facebook.react.views.scroll.ReactScrollViewManager: int[] SPACING_TYPES
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_ASYNC
okhttp3.internal.concurrent.TaskQueue: java.util.List futureTasks
com.polidea.rxandroidble2.internal.util.CheckerPermission_Factory: bleshadow.javax.inject.Provider contextProvider
okhttp3.internal.http2.Http2Connection: int OKHTTP_CLIENT_WINDOW_SIZE
io.reactivex.internal.operators.flowable.FlowableReplay$Node: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceTimedSubscriber: long serialVersionUID
com.polidea.rxandroidble2.internal.DeviceModule_ProvidesDisconnectTimeoutConfFactory: bleshadow.javax.inject.Provider timeoutSchedulerProvider
okhttp3.internal.ws.WebSocketProtocol: int B0_MASK_OPCODE
io.reactivex.internal.subscribers.SubscriberResourceWrapper: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowablePublishAlt$InnerSubscription: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableRangeLong$RangeSubscription: long serialVersionUID
com.facebook.soloader.Elf32_Phdr: int p_flags
com.facebook.react.bridge.interop.InteropModuleRegistry: java.util.HashMap supportedModules
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_READING_RESPONSE_BODY
okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier
com.polidea.rxandroidble2.internal.SingleResponseOperation: android.bluetooth.BluetoothGatt bluetoothGatt
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_END
com.polidea.rxandroidble2.RxBleClientImpl: com.polidea.rxandroidble2.internal.util.CheckerConnectPermission checkerConnectPermission
com.facebook.jni.MapIteratorHelper: java.lang.Object mValue
okhttp3.internal.http2.Hpack: okhttp3.internal.http2.Hpack INSTANCE
okhttp3.internal.ws.MessageInflater: java.util.zip.Inflater inflater
okhttp3.internal.connection.RouteDatabase: java.util.Set failedRoutes
com.himelbrand.ble.peripheral.RNBLEModule: android.bluetooth.BluetoothManager mBluetoothManager
com.facebook.react.bridge.JavaMethodWrapper: int mJSArgumentsNeeded
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainEmitLast: long serialVersionUID
okhttp3.MultipartReader$PartSource: okhttp3.MultipartReader this$0
com.polidea.rxandroidble2.scan.ScanFilter: android.os.ParcelUuid mServiceSolicitationUuid
com.polidea.rxandroidble2.internal.RxBleLog: java.lang.ThreadLocal NEXT_TAG
okhttp3.internal.concurrent.TaskRunner: boolean coordinatorWaiting
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger mPendingJSCalls
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$3: com.polidea.rxandroidble2.NotificationSetupMode val$setupMode
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_EXTRACTED
okhttp3.internal.platform.OpenJSSEPlatform: boolean isSupported
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideFinalizationCloseableFactory: bleshadow.javax.inject.Provider connectionQueueExecutorServiceProvider
okhttp3.HttpUrl: java.lang.String FRAGMENT_ENCODE_SET
com.polidea.rxandroidble2.scan.ScanSettings: int MATCH_MODE_STICKY
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider internalToExternalScanResultConverterProvider
okhttp3.internal.http2.Http2Connection: boolean isShutdown
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi31_Factory: bleshadow.javax.inject.Provider isNearbyPermissionNeverForLocProvider
io.reactivex.internal.operators.flowable.FlowableCollect$CollectSubscriber: long serialVersionUID
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider locationServicesOkObservableApi23FactoryProvider
com.polidea.rxandroidble2.exceptions.BleScanException: int LOCATION_SERVICES_DISABLED
okhttp3.MultipartReader$PartSource: okio.Timeout timeout
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber$OtherObserver: long serialVersionUID
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider disconnectionRouterProvider
com.facebook.soloader.Elf64_Shdr: int sh_info
okhttp3.internal.ws.RealWebSocket: int sentPingCount
com.ghostcommv2.R$integer: int react_native_dev_server_port
com.facebook.soloader.SoLoader$AppType: int THIRD_PARTY_APP
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnTrimMemoryListeners
com.facebook.react.turbomodule.core.NativeModuleSoLoader: com.facebook.react.turbomodule.core.NativeModuleSoLoader$Companion Companion
com.polidea.rxandroidble2.scan.ScanFilter$Builder: android.os.ParcelUuid mServiceSolicitationUuid
com.polidea.rxandroidble2.exceptions.BleCannotSetCharacteristicNotificationException: android.bluetooth.BluetoothGattCharacteristic bluetoothGattCharacteristic
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] $VALUES
com.polidea.rxandroidble2.internal.operations.ConnectOperation$3: com.polidea.rxandroidble2.internal.operations.ConnectOperation this$0
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider readRssiOperationProvider
okhttp3.internal.http2.Http2Writer: okio.BufferedSink sink
okhttp3.internal.http2.Http2Connection: int DEGRADED_PONG_TIMEOUT_NS
okhttp3.internal.http2.Http2Stream$FramingSink: okio.Buffer sendBuffer
okhttp3.internal.connection.Exchange$ResponseBodySource: okhttp3.internal.connection.Exchange this$0
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.facebook.soloader.Elf32_Phdr: int p_offset
okhttp3.internal.cache.CacheStrategy: okhttp3.Response cacheResponse
com.polidea.rxandroidble2.internal.util.ClientStateObservable$3: io.reactivex.Observable val$locationServicesOkObservable
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationServicesStatusFactory: bleshadow.javax.inject.Provider locationServicesStatusApi31Provider
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: com.facebook.react.bridge.NativeArray mArguments
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$2: com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation this$0
com.facebook.fbreact.specs.NativeDevMenuSpec: java.lang.String NAME
com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl_Factory: bleshadow.javax.inject.Provider internalToExternalScanResultConverterProvider
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RouteSelector routeSelector
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String lastModifiedString
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: boolean closed
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutFallbackSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate$RetryBiSubscriber: long serialVersionUID
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: java.lang.String $name
okhttp3.Response: int code
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver: long serialVersionUID
okhttp3.EventListener: okhttp3.EventListener$Companion Companion
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: java.util.UUID CLIENT_CHARACTERISTIC_CONFIG_UUID
okhttp3.internal.ws.RealWebSocket: boolean failed
com.polidea.rxandroidble2.internal.operations.CharacteristicReadOperation: android.bluetooth.BluetoothGattCharacteristic bluetoothGattCharacteristic
okhttp3.CacheControl: boolean onlyIfCached
com.facebook.soloader.Elf64_Ehdr: int e_shoff
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi31: boolean isAndroidWear
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider illegalOperationMessageCreatorProvider
okhttp3.TlsVersion: okhttp3.TlsVersion SSL_3_0
com.facebook.soloader.SoSource: int LOAD_RESULT_LOADED
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String REACT_CLASS
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$7: java.util.UUID val$descriptorUuid
com.polidea.rxandroidble2.utils.GattStatusParser: java.util.Map GATT_STATUS
com.facebook.react.bridge.JavaOnlyArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.soloader.SoLoader: java.util.concurrent.locks.ReentrantReadWriteLock sSoSourcesLock
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: android.bluetooth.le.ScanCallback mScannerCallback
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier mReactDatabaseSupplier
com.polidea.rxandroidble2.RxBleClientImpl: io.reactivex.functions.Function internalToExternalScanResultMapFunction
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: boolean $cancelable
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_MESSAGE
com.polidea.rxandroidble2.internal.connection.DescriptorWriter: com.polidea.rxandroidble2.internal.operations.OperationsProvider operationsProvider
com.facebook.soloader.UnpackingSoSource: java.lang.String[] mAbis
com.polidea.rxandroidble2.RxBleDeviceServices$4: com.polidea.rxandroidble2.RxBleDeviceServices this$0
okhttp3.internal.http.StatusLine: int HTTP_TEMP_REDIRECT
com.polidea.rxandroidble2.scan.ScanSettings: int MATCH_NUM_FEW_ADVERTISEMENT
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideConnectionQueueExecutorServiceFactory$InstanceHolder: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideConnectionQueueExecutorServiceFactory INSTANCE
okhttp3.Response$Builder: int code
com.facebook.soloader.SoLoader: com.facebook.soloader.UnpackingSoSource[] sBackupSoSources
okhttp3.internal.tls.BasicCertificateChainCleaner: okhttp3.internal.tls.BasicCertificateChainCleaner$Companion Companion
com.polidea.rxandroidble2.internal.operations.DisconnectOperation: java.lang.String macAddress
okhttp3.MediaType: java.lang.String subtype
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider provideLocationServicesStatusProvider
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: java.lang.Boolean autoConnect
okhttp3.Dns$Companion: okhttp3.Dns$Companion $$INSTANCE
io.reactivex.internal.operators.flowable.FlowableOnBackpressureError$BackpressureErrorSubscriber: long serialVersionUID
okhttp3.Cookie$Builder: java.lang.String domain
com.facebook.soloader.NativeDepsUnpacker: byte STATE_CLEAN
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestInnerSubscriber: long serialVersionUID
com.polidea.rxandroidble2.internal.operations.ConnectOperation: com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider bluetoothGattProvider
okhttp3.internal.platform.AndroidPlatform: java.util.List socketAdapters
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider clientOperationQueueImplProvider
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_RC4_128_SHA
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_END
com.jakewharton.rxrelay2.PublishRelay$PublishDisposable: long serialVersionUID
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.reflect.Method putMethod
com.facebook.react.bridge.JSBundleLoader$1: boolean val$loadSynchronously
okhttp3.internal.ws.MessageInflater: okio.InflaterSource inflaterSource
okhttp3.RequestBody: okhttp3.RequestBody$Companion Companion
okhttp3.Protocol: okhttp3.Protocol QUIC
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String REACT_CLASS
okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEGATIVE
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: long serialVersionUID
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider provideBluetoothManagerProvider
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mMethods
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_EMAIL_ADDRESS
okhttp3.internal.cache2.Relay: okio.ByteString PREFIX_DIRTY
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.lang.String NAME
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueSpec
okhttp3.internal.http2.Http2Connection$Builder: boolean client
org.linusu.RNGetRandomValuesModule: com.facebook.react.bridge.ReactApplicationContext reactContext
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: android.bluetooth.BluetoothAdapter mBluetoothAdapter
okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_WRITING_REQUEST_BODY
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.FpsDebugFrameCallback mFrameCallback
com.facebook.soloader.Elf64_Shdr: int sh_type
com.polidea.rxandroidble2.internal.operations.DescriptorWriteOperation: byte[] data
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1: io.reactivex.functions.Function emitAfterTimerFunc
com.facebook.react.config.ReactFeatureFlags: boolean calculateTransformedFramesEnabled
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnSubscriber: long serialVersionUID
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA
okhttp3.CertificatePinner$check$1: java.util.List $peerCertificates
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: java.lang.String NAME
okhttp3.internal.ws.RealWebSocket: java.lang.String receivedCloseReason
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Class mModuleInterface
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.reflect.Method method
okhttp3.Route: java.net.Proxy proxy
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_INVALID_URI
okhttp3.HttpUrl: java.lang.String PATH_SEGMENT_ENCODE_SET
com.polidea.rxandroidble2.internal.operations.LegacyScanOperation: com.polidea.rxandroidble2.internal.util.ScanRecordParser scanRecordParser
com.polidea.rxandroidble2.internal.util.ClientStateObservable$2: com.polidea.rxandroidble2.internal.util.LocationServicesStatus val$locationServicesStatus
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_GCM_SHA256
okhttp3.internal.http2.Http2Reader: java.util.logging.Logger logger
okhttp3.MultipartReader: okio.Options afterBoundaryOptions
okhttp3.internal.connection.ConnectInterceptor: okhttp3.internal.connection.ConnectInterceptor INSTANCE
okhttp3.Cache$Entry: okhttp3.Protocol protocol
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_START
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$1: java.lang.String val$deviceMacAddress
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver$OtherObserver: long serialVersionUID
com.facebook.react.bridge.CatalystInstanceImpl$1: com.facebook.react.bridge.CatalystInstanceImpl this$0
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager_Factory: bleshadow.javax.inject.Provider operationProvider
com.bleplx.adapter.BleModule: io.reactivex.disposables.Disposable adapterStateChangesSubscription
com.facebook.react.views.textinput.ReactTextInputManager: int PASSWORD_VISIBILITY_FLAG
com.facebook.react.bridge.CatalystInstanceImpl: boolean mDestroyed
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$5: com.polidea.rxandroidble2.internal.connection.DisconnectionRouter this$0
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: long serialVersionUID
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: long mMaximumDatabaseSize
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_NULL_SHA
com.polidea.rxandroidble2.internal.util.UUIDUtil: int UUID_BYTES_32_BIT
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi23: com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator internalScanResultCreator
com.facebook.soloader.UnpackingSoSource$Dso: java.lang.String name
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_START
okhttp3.internal.ws.MessageDeflaterKt: int LAST_OCTETS_COUNT_TO_REMOVE_AFTER_DEFLATION
okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_START
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnNewIntentListeners
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: long serialVersionUID
com.polidea.rxandroidble2.internal.DeviceModule_ProvideConnectionStateChangeListenerFactory: bleshadow.javax.inject.Provider connectionStateBehaviorRelayProvider
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants VM_INIT
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl: io.reactivex.Scheduler bluetoothInteractionScheduler
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$8: com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl this$0
io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver: long serialVersionUID
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.reflect.Method setUseSessionTickets
okhttp3.internal.cache2.Relay: long FILE_HEADER_SIZE
com.polidea.rxandroidble2.internal.util.CharacteristicPropertiesParser: int propertyNotify
okhttp3.internal.ws.WebSocketWriter: okio.Buffer messageBuffer
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber: long serialVersionUID
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_GET_SIZE_FAILURE
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: javax.net.ssl.X509TrustManager trustManager
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mLifecycleEventListeners
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
okhttp3.Response: okhttp3.Headers headers
com.facebook.react.bridge.JsonWriterHelper$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricRenderer
okhttp3.TlsVersion: okhttp3.TlsVersion$Companion Companion
com.polidea.rxandroidble2.internal.util.CharacteristicPropertiesParser: int propertyBroadcast
okhttp3.internal.concurrent.TaskQueue$AwaitIdleTask: java.util.concurrent.CountDownLatch latch
okhttp3.internal.http.ExchangeCodec: okhttp3.internal.http.ExchangeCodec$Companion Companion
com.polidea.rxandroidble2.internal.connection.DisconnectAction: com.polidea.rxandroidble2.internal.serialization.ClientOperationQueue clientOperationQueue
okhttp3.internal.cache.DiskLruCache: java.io.File journalFileTmp
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler mNetworkingRequestBodyHandler
com.facebook.fbreact.specs.NativeIntentAndroidSpec: java.lang.String NAME
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl_Factory: bleshadow.javax.inject.Provider illegalOperationCheckerProvider
com.facebook.react.bridge.ReactContext: boolean mIsInitialized
com.polidea.rxandroidble2.internal.util.CheckerLocationProvider: android.content.ContentResolver contentResolver
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.Headers trailers
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl_Factory: bleshadow.javax.inject.Provider executorServiceProvider
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23_Factory: bleshadow.javax.inject.Provider targetSdkProvider
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi31_Factory: bleshadow.javax.inject.Provider isAndroidWearProvider
okhttp3.Cache: int writeAbortCount
com.polidea.rxandroidble2.internal.connection.MtuWatcher: io.reactivex.Observable mtuObservable
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: long $pingIntervalNanos$inlined
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String REACT_CLASS
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.OkHttpClient client
okhttp3.internal.platform.android.AndroidLog: int MAX_LOG_LENGTH
com.facebook.react.bridge.JavaScriptContextHolder: long mContext
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactoryOrNull
okhttp3.internal.http2.Http2Stream: long readBytesAcknowledged
okhttp3.internal.platform.ConscryptPlatform: java.security.Provider provider
com.polidea.rxandroidble2.scan.ScanFilter$Builder: android.os.ParcelUuid mServiceSolicitationUuidMask
com.facebook.jni.DestructorThread$DestructorList: com.facebook.jni.DestructorThread$Destructor mHead
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$BooleanRunnable: long serialVersionUID
io.reactivex.internal.observers.BasicIntQueueDisposable: long serialVersionUID
okhttp3.Cache: okhttp3.Cache$Companion Companion
okhttp3.RequestBody$Companion$toRequestBody$2: int $offset
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketReader reader
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.Class sslSocketClass
okhttp3.internal.connection.RouteSelector: java.util.List postponedRoutes
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String REDUCE_MOTION_EVENT_NAME
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl: com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueue operationQueue
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutObserver: long serialVersionUID
com.facebook.react.config.ReactFeatureFlags: boolean enableViewRecycling
com.polidea.rxandroidble2.RxBleClientImpl: com.polidea.rxandroidble2.internal.util.BluetoothManagerWrapper bluetoothManagerWrapper
okhttp3.internal.cache2.Relay$RelaySource: long sourcePos
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_MD5
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: long serialVersionUID
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl_Factory: bleshadow.javax.inject.Provider descriptorWriterProvider
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec MAIN_UI_SPEC
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: boolean $cancelable
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: okhttp3.internal.http1.Http1ExchangeCodec this$0
com.facebook.react.runtime.JSEngineInstance: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$assetUrl
com.polidea.rxandroidble2.internal.connection.IllegalOperationHandler: com.polidea.rxandroidble2.internal.connection.IllegalOperationMessageCreator messageCreator
com.facebook.soloader.UnpackingSoSource$1: com.facebook.soloader.FileLocker val$lock
com.facebook.soloader.Elf32_Ehdr: int e_shstrndx
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: okhttp3.internal.connection.RouteSelector this$0
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideRecommendedScanRuntimePermissionNamesFactory: bleshadow.javax.inject.Provider targetSdkProvider
okhttp3.internal.ws.WebSocketReader: int opcode
okhttp3.internal.cache.DiskLruCache$snapshots$1: okhttp3.internal.cache.DiskLruCache this$0
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: boolean unsupported
com.polidea.rxandroidble2.internal.operations.ConnectOperation: android.bluetooth.BluetoothDevice bluetoothDevice
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_LINE_NUMBER
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: okhttp3.HttpUrl url
okhttp3.Cache$Entry: int code
com.polidea.rxandroidble2.RxBleClientImpl_Factory: bleshadow.javax.inject.Provider checkerScanPermissionProvider
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider bluetoothGattProvider
io.reactivex.internal.operators.flowable.FlowableRefCount$RefConnection: long serialVersionUID
okhttp3.internal.platform.android.ConscryptSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory factory
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: android.bluetooth.BluetoothGatt bluetoothGatt
okhttp3.Cache: int requestCount
com.facebook.react.turbomodule.core.TurboModuleManager: java.lang.Object mModuleCleanupLock
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType UIManager
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: java.util.Hashtable mAdvertiserList
okhttp3.internal.ws.RealWebSocket$WriterTask: okhttp3.internal.ws.RealWebSocket this$0
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback_Factory: bleshadow.javax.inject.Provider disconnectionRouterProvider
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_START
okhttp3.OkHttpClient$Builder: okhttp3.CookieJar cookieJar
io.reactivex.internal.subscribers.ForEachWhileSubscriber: long serialVersionUID
com.polidea.rxandroidble2.internal.RxBleDeviceProvider_Factory: bleshadow.javax.inject.Provider deviceComponentBuilderProvider
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_MD5
okhttp3.internal.http2.Http2ExchangeCodec: java.util.List HTTP_2_SKIPPED_RESPONSE_HEADERS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_REACT_CONTEXT_END
okhttp3.internal.http.RequestLine: okhttp3.internal.http.RequestLine INSTANCE
com.facebook.react.bridge.ReactBridge: long sLoadStartTime
okhttp3.Cache$CacheResponseBody: java.lang.String contentType
okhttp3.Cache$urls$1: java.util.Iterator delegate
okhttp3.Cache$Entry: java.lang.String SENT_MILLIS
com.facebook.soloader.Elf64_Ehdr: int e_shstrndx
com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator: com.polidea.rxandroidble2.internal.scan.IsConnectableChecker isConnectableChecker
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenSourceSubscriber: long serialVersionUID
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_END
com.facebook.react.bridge.ModuleSpec: java.lang.String mName
com.polidea.rxandroidble2.exceptions.BleGattDescriptorException: android.bluetooth.BluetoothGattDescriptor descriptor
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA
com.polidea.rxandroidble2.internal.connection.MtuBasedPayloadSizeLimit_Factory: bleshadow.javax.inject.Provider gattWriteMtuOverheadProvider
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mEnqueuedRequestMonitor
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider provideScanSetupProvider
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription: long serialVersionUID
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_END
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.DevToolsReactPerfLogger mDevToolsReactPerfLogger
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $messageOrClose$inlined
okhttp3.internal.cache.DiskLruCache: boolean mostRecentRebuildFailed
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$7$1: com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$7 this$1
com.facebook.react.bridge.ReadableNativeMap$2: int currentIndex
io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver: long serialVersionUID
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl_Factory: bleshadow.javax.inject.Provider operationQueueProvider
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop$BackpressureDropSubscriber: long serialVersionUID
io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback: long serialVersionUID
okhttp3.internal.concurrent.TaskQueue: boolean cancelActiveTask
com.ghostcommv2.R$mipmap: int ic_launcher
okhttp3.internal.cache.DiskLruCache$snapshots$1: okhttp3.internal.cache.DiskLruCache$Snapshot removeSnapshot
androidx.lifecycle.ProcessLifecycleOwner$3$1: androidx.lifecycle.ProcessLifecycleOwner$3 this$1
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideRecommendedConnectRuntimePermissionNamesFactory: bleshadow.javax.inject.Provider deviceSdkProvider
okhttp3.internal.http.StatusLine: okhttp3.Protocol protocol
com.bleplx.adapter.BleModule: com.bleplx.adapter.errors.ErrorConverter errorConverter
io.reactivex.internal.operators.observable.ObservableRangeLong$RangeDisposable: long serialVersionUID
com.facebook.soloader.Elf64_Phdr: int p_type
com.polidea.rxandroidble2.exceptions.BleScanException: int SCAN_FAILED_INTERNAL_ERROR
okhttp3.internal.http2.Http2: int INITIAL_MAX_FRAME_SIZE
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: bleshadow.javax.inject.Provider provideConnectionStateChangeListenerProvider
okhttp3.internal.cache.DiskLruCache: boolean civilizedFileSystem
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig mConfig
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_INTEGER
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: bleshadow.javax.inject.Provider provideConnectionStateRelayProvider
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
com.polidea.rxandroidble2.internal.operations.ScanOperation: com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper rxBleAdapterWrapper
com.polidea.rxandroidble2.internal.connection.ConnectorImpl: com.polidea.rxandroidble2.internal.connection.ConnectionComponent$Builder connectionComponentBuilder
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorSubscription: long serialVersionUID
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$Output writeDescriptorOutput
com.polidea.rxandroidble2.internal.logger.LoggerSetup: boolean shouldLogAttributeValues
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricPendingEventQueue
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsAndroidWearFactory: bleshadow.javax.inject.Provider contextProvider
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueSpec
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1: io.reactivex.Observable timerObservable
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver: long serialVersionUID
okhttp3.internal.ws.WebSocketProtocol: int B1_MASK_LENGTH
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: okio.Buffer $buffer$inlined
okhttp3.internal.cache2.Relay: okhttp3.internal.cache2.Relay$Companion Companion
okhttp3.internal.connection.RealConnection: java.util.List calls
com.polidea.rxandroidble2.exceptions.BleCannotSetCharacteristicNotificationException: int CANNOT_WRITE_CLIENT_CHARACTERISTIC_CONFIG_DESCRIPTOR
okhttp3.CacheControl: boolean immutable
io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber: long serialVersionUID
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager: java.lang.String REACT_CLASS
okhttp3.internal.http2.Http2: int FLAG_PADDED
okhttp3.Dispatcher: java.util.ArrayDeque runningAsyncCalls
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$1: io.reactivex.ObservableEmitter val$emitter
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5$1: com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5 this$0
com.facebook.react.animated.NativeAnimatedModule: long mCurrentBatchNumber
okhttp3.internal.http.StatusLine: int HTTP_MISDIRECTED_REQUEST
com.facebook.react.bridge.CallbackImpl: com.facebook.react.bridge.JSInstance mJSInstance
com.bleplx.adapter.BleModule: java.util.HashMap discoveredDevices
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] publicSuffixExceptionListBytes
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: java.lang.String $name
com.facebook.react.fabric.events.EventEmitterWrapper: com.facebook.jni.HybridData mHybridData
okhttp3.internal.http2.Huffman: okhttp3.internal.http2.Huffman$Node root
com.polidea.rxandroidble2.internal.util.UUIDUtil: android.os.ParcelUuid BASE_UUID
com.polidea.rxandroidble2.internal.connection.ConstantPayloadSizeLimit: int limit
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: long serialVersionUID
okhttp3.internal.ws.RealWebSocket: java.util.ArrayDeque messageAndCloseQueue
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec$Companion Companion
okhttp3.MultipartReader: okio.BufferedSource source
okhttp3.internal.cache.DiskLruCache: java.lang.String DIRTY
okhttp3.CookieJar$Companion: okhttp3.CookieJar$Companion $$INSTANCE
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.CustomClientBuilder customClientBuilder
com.facebook.react.bridge.ReactBridge: long sLoadEndTime
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: long serialVersionUID
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_GCM_SHA384
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_START
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.reflect.Method setAlpnProtocols
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: int $payload1$inlined
io.reactivex.internal.operators.flowable.FlowableConcatWithMaybe$ConcatWithSubscriber: long serialVersionUID
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mMethod
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.Object[] val$iteratorValues
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$1: java.util.concurrent.TimeUnit val$timeoutTimeUnit
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.GlobalImageLoadListener mGlobalImageLoadListener
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: bleshadow.javax.inject.Provider rxBleDeviceImplProvider
com.polidea.rxandroidble2.scan.ScanSettings: int SCAN_MODE_LOW_POWER
com.facebook.jni.DestructorThread$DestructorStack: java.util.concurrent.atomic.AtomicReference mHead
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mType
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$11: com.polidea.rxandroidble2.internal.Priority val$priority
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi24_Factory: bleshadow.javax.inject.Provider scanPreconditionVerifierApi18Provider
okhttp3.MultipartReader: okhttp3.MultipartReader$Companion Companion
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider checkerLocationProvider
com.facebook.soloader.NativeDepsUnpacker: java.lang.String LOCK_FILE_NAME
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.http2.Http2Stream stream
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.List mEagerInitModuleNames
com.facebook.react.modules.network.NetworkingModule: java.lang.String TAG
okhttp3.Authenticator: okhttp3.Authenticator JAVA_NET_AUTHENTICATOR
okhttp3.internal.proxy.NullProxySelector: okhttp3.internal.proxy.NullProxySelector INSTANCE
com.reactnativecommunity.asyncstorage.SerialExecutor$1: com.reactnativecommunity.asyncstorage.SerialExecutor this$0
com.ghostcommv2.BuildConfig: boolean IS_HERMES_ENABLED
com.polidea.rxandroidble2.internal.operations.DescriptorReadOperation_Factory: bleshadow.javax.inject.Provider rxBleGattCallbackProvider
okio.Timeout: okio.Timeout$Companion Companion
okhttp3.ConnectionSpec$Builder: java.lang.String[] cipherSuites
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.common.SurfaceDelegate mSurfaceDelegate
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_SHA
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl clientComponentImpl
com.facebook.react.runtime.JSTimerExecutor: com.facebook.jni.HybridData mHybridData
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: android.database.sqlite.SQLiteDatabase mDb
okhttp3.HttpUrl: java.lang.String username
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideScanPreconditionVerifierFactory: bleshadow.javax.inject.Provider deviceSdkProvider
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider provideLocationServicesOkObservableProvider
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$11: com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl this$0
okhttp3.internal.connection.RouteSelector: java.util.List inetSocketAddresses
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18$1: io.reactivex.ObservableTransformer val$scanModeTransformer
com.polidea.rxandroidble2.exceptions.BleGattOperationType: com.polidea.rxandroidble2.exceptions.BleGattOperationType READ_RSSI
com.polidea.rxandroidble2.RxBleClientImpl: com.polidea.rxandroidble2.scan.BackgroundScanner backgroundScanner
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_END
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver$OtherObserver: long serialVersionUID
com.facebook.react.views.textinput.ReactTextInputManager: int SET_TEXT_AND_SELECTION
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable: io.reactivex.Scheduler disconnectScheduler
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.facebook.soloader.UnpackingSoSource$1: java.io.File val$stateFileName
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.react.bridge.JavaJSExecutor mJavaJSExecutor
com.polidea.rxandroidble2.internal.operations.ServiceDiscoveryOperation: com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices bleServicesLogger
okhttp3.CertificatePinner$Pin: java.lang.String hashAlgorithm
com.facebook.react.modules.devloading.DevLoadingModule: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: java.lang.String KEY_COLUMN
com.facebook.react.bridge.ColorPropConverter: java.lang.String JSON_KEY
okhttp3.ConnectionSpec: boolean isTls
okio.Timeout: long deadlineNanoTime
okhttp3.internal.ws.MessageDeflater: okio.Buffer deflatedBytes
com.polidea.rxandroidble2.scan.ScanSettings: int SCAN_MODE_LOW_LATENCY
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: java.util.List $requestHeaders$inlined
com.polidea.rxandroidble2.ClientComponent$PlatformConstants: java.lang.String BOOL_IS_ANDROID_WEAR
okhttp3.HttpUrl: java.lang.String PASSWORD_ENCODE_SET
okhttp3.Response$Builder: okhttp3.Headers$Builder headers
com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation: int connectionPriority
okhttp3.HttpUrl$Builder: java.lang.String encodedUsername
okhttp3.internal.connection.RouteException: java.io.IOException firstConnectException
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver$ConcatMapMaybeObserver: long serialVersionUID
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_HASH
com.polidea.rxandroidble2.scan.ScanFilter$Builder: byte[] mManufacturerData
okhttp3.Cache$urls$1: java.lang.String nextUrl
okhttp3.internal.http2.Http2Reader$ContinuationSource: int padding
okhttp3.internal.connection.RealCall$AsyncCall: okhttp3.Callback responseCallback
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$9: byte[] val$data
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mName
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: long mMarkerTime
com.facebook.fbreact.specs.NativeSoundManagerSpec: java.lang.String NAME
okhttp3.internal.concurrent.TaskQueue: okhttp3.internal.concurrent.TaskRunner taskRunner
com.facebook.soloader.NativeDepsUnpacker: java.lang.String STATE_FILE_NAME
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideScanSetupProviderFactory: bleshadow.javax.inject.Provider scanSetupBuilderProviderForApi21Provider
okhttp3.internal.cache.CacheStrategy: okhttp3.internal.cache.CacheStrategy$Companion Companion
com.polidea.rxandroidble2.RxBleClient$State: com.polidea.rxandroidble2.RxBleClient$State BLUETOOTH_NOT_ENABLED
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl_Factory: bleshadow.javax.inject.Provider callbackSchedulerProvider
com.polidea.rxandroidble2.scan.ScanSettings: int mNumOfMatchesPerFilter
com.bleplx.adapter.BleModule: com.bleplx.adapter.utils.mapper.RxScanResultToScanResultMapper rxScanResultToScanResultMapper
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_START
com.polidea.rxandroidble2.internal.operations.ConnectOperation: com.polidea.rxandroidble2.internal.connection.ConnectionStateChangeListener connectionStateChangedAction
okhttp3.internal.connection.RealConnection: okhttp3.Protocol protocol
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] mKeys
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReadableMap mPreviousDisplayMetrics
com.facebook.soloader.DirectorySoSource: java.io.File soDirectory
com.polidea.rxandroidble2.internal.util.ClientStateObservable$4: com.polidea.rxandroidble2.internal.util.ClientStateObservable this$0
okhttp3.OkHttpClient: okhttp3.Dns dns
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl: com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices bleServicesLogger
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$3: java.lang.String val$macAddress
okhttp3.CacheControl$Builder: boolean noTransform
com.polidea.rxandroidble2.LogConstants: int ERROR
io.reactivex.internal.operators.observable.ObservableRefCount$RefCountObserver: long serialVersionUID
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilMainObserver: long serialVersionUID
okhttp3.internal.http.StatusLine: int code
okhttp3.ConnectionSpec$Builder: boolean tls
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_PROMISE
com.polidea.rxandroidble2.helpers.LocationServicesOkObservable: io.reactivex.Observable locationServicesOkObsImpl
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_TEXT
com.ghostcommv2.R$string: int app_name
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDisableNotificationValueFactory$InstanceHolder: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDisableNotificationValueFactory INSTANCE
okhttp3.internal.authenticator.JavaNetAuthenticator: okhttp3.Dns defaultDns
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_OPEN_REQUEST_BODY
okio.AsyncTimeout: okio.AsyncTimeout$Companion Companion
okhttp3.internal.connection.RealConnection: int refusedStreamCount
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_SHA
com.facebook.soloader.Elf64_Shdr: int sh_entsize
okhttp3.internal.http1.HeadersReader: okhttp3.internal.http1.HeadersReader$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INIT_REACT_RUNTIME_END
okhttp3.Dispatcher: java.util.ArrayDeque readyAsyncCalls
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$0
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi18: com.polidea.rxandroidble2.internal.util.LocationServicesStatus locationServicesStatus
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_DES_CBC_SHA
com.facebook.react.uimanager.BaseViewManager: double[] sTransformDecompositionArray
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteSelector$Companion Companion
okhttp3.internal.Util: kotlin.text.Regex VERIFY_AS_IP_ADDRESS
com.facebook.react.config.ReactFeatureFlags: boolean excludeYogaFromRawProps
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long DEFAULT_STACK_SIZE_BYTES
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA AARCH64
okhttp3.OkHttpClient: java.net.ProxySelector proxySelector
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_START
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager: com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueue operationQueue
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl_Factory: bleshadow.javax.inject.Provider disconnectionRouterOutputProvider
com.polidea.rxandroidble2.internal.util.CheckerConnectPermission: java.lang.String[][] connectPermissions
com.facebook.soloader.Elf64_Ehdr: int e_ehsize
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
com.polidea.rxandroidble2.internal.util.CheckerScanPermission_Factory: bleshadow.javax.inject.Provider scanPermissionsProvider
io.reactivex.internal.operators.flowable.FlowableReplay$SizeAndTimeBoundReplayBuffer: long serialVersionUID
okhttp3.internal.http2.Http2Reader: boolean client
okhttp3.internal.ws.RealWebSocket$connect$1: okhttp3.Request $request
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices: com.polidea.rxandroidble2.internal.util.CharacteristicPropertiesParser characteristicPropertiesParser
okhttp3.internal.http2.Http2: java.lang.String[] FLAGS
com.polidea.rxandroidble2.RxBleClientImpl: com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifier scanPreconditionVerifier
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber: long serialVersionUID
com.polidea.rxandroidble2.ClientComponent$BluetoothConstants: java.lang.String ENABLE_NOTIFICATION_VALUE
okhttp3.internal.connection.RealConnectionPool$cleanupTask$1: okhttp3.internal.connection.RealConnectionPool this$0
com.polidea.rxandroidble2.internal.operations.LegacyScanOperation$1: com.polidea.rxandroidble2.internal.operations.LegacyScanOperation this$0
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationServicesOkObservableFactory: bleshadow.javax.inject.Provider deviceSdkProvider
io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableConcatWithMaybe$ConcatWithObserver: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableReplay$SizeBoundReplayBuffer: long serialVersionUID
com.bleplx.adapter.BleModule: android.content.Context context
io.reactivex.internal.operators.flowable.FlowableTake$TakeSubscriber: long serialVersionUID
com.polidea.rxandroidble2.RxBleClient$State: com.polidea.rxandroidble2.RxBleClient$State[] $VALUES
okhttp3.internal.ws.WebSocketReader: okio.BufferedSource source
com.bleplx.BlePlxModule: com.bleplx.converter.DeviceToJsObjectConverter deviceConverter
com.polidea.rxandroidble2.RxBleClientImpl: bleshadow.dagger.Lazy lazyClientStateObservable
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager: com.polidea.rxandroidble2.internal.operations.OperationsProvider operationProvider
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: okio.ForwardingTimeout timeout
com.polidea.rxandroidble2.Timeout: long timeout
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider scanSetupBuilderImplApi23Provider
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi21_Factory: bleshadow.javax.inject.Provider androidScanObjectsConverterProvider
io.reactivex.exceptions.UndeliverableException: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber$BufferOpenSubscriber: long serialVersionUID
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA
okhttp3.MediaType: java.lang.String mediaType
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.PushObserver pushObserver
com.reactnativecommunity.asyncstorage.AsyncStorageModule: java.lang.String NAME
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache this$0
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$2: com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl this$0
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl_Factory: bleshadow.javax.inject.Provider longWriteOperationBuilderProvider
com.facebook.soloader.ExoSoSource$ExoUnpacker$FileBackedInputDsoIterator: int mCurrentDso
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
okhttp3.internal.http2.Http2: int TYPE_PUSH_PROMISE
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver: long serialVersionUID
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: android.content.Context mContext
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_128_CBC_SHA
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
com.facebook.react.animated.EventAnimationDriver: java.lang.String mEventName
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTROL_CLOSE
okhttp3.internal.http.RealInterceptorChain: int connectTimeoutMillis
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: long serialVersionUID
okhttp3.JavaNetCookieJar: java.net.CookieHandler cookieHandler
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
okhttp3.internal.ws.WebSocketProtocol: long PAYLOAD_BYTE_MAX
com.polidea.rxandroidble2.internal.util.UUIDUtil: int UUID_BYTES_16_BIT
io.reactivex.internal.operators.maybe.MaybeToObservable$MaybeToObservableObserver: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver: long serialVersionUID
okhttp3.MultipartReader: okio.ByteString dashDashBoundary
okhttp3.internal.tls.OkHostnameVerifier: int ALT_IPA_NAME
okhttp3.internal.http2.Http2Connection: long degradedPingsSent
okhttp3.Response: okhttp3.Response cacheResponse
okhttp3.CertificatePinner: java.util.Set pins
com.polidea.rxandroidble2.RxBleClientImpl: com.polidea.rxandroidble2.internal.RxBleDeviceProvider rxBleDeviceProvider
com.polidea.rxandroidble2.ConnectionSetup: boolean autoConnect
okhttp3.internal.cache.DiskLruCache: long size
okhttp3.Cookie$Builder: boolean hostOnly
com.facebook.react.fabric.interop.InteropEventEmitter: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcherOverride
okhttp3.internal.http1.HeadersReader: okio.BufferedSource source
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: bleshadow.javax.inject.Provider longWriteOperationBuilderProvider
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi24: long[] previousChecks
okhttp3.internal.connection.RealCall: boolean canceled
com.polidea.rxandroidble2.utils.ConnectionSharingAdapter$1: com.polidea.rxandroidble2.utils.ConnectionSharingAdapter this$0
com.facebook.react.fabric.SurfaceHandlerBinding: com.facebook.jni.HybridData mHybridData
com.polidea.rxandroidble2.LogConstants: int MAC_ADDRESS_TRUNCATED
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.RealWebSocket$Companion Companion
com.facebook.react.config.ReactFeatureFlags: boolean useNativeViewConfigsInBridgelessMode
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$InterruptibleRunnable: long serialVersionUID
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider bluetoothGattProvider
com.polidea.rxandroidble2.RxBleAdapterStateObservable$1: com.polidea.rxandroidble2.RxBleAdapterStateObservable this$0
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi18_Factory$InstanceHolder: com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi18_Factory INSTANCE
com.facebook.soloader.FileLocker: java.nio.channels.FileLock mLock
okhttp3.internal.http2.Settings: int ENABLE_PUSH
com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper: android.bluetooth.BluetoothAdapter bluetoothAdapter
okhttp3.FormBody: java.util.List encodedValues
com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator_Factory: bleshadow.javax.inject.Provider isConnectableCheckerProvider
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl_Factory: bleshadow.javax.inject.Provider notificationIndicationManagerProvider
okhttp3.internal.cache.DiskLruCache: long maxSize
okhttp3.Response: okhttp3.CacheControl lazyCacheControl
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$4: com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl this$0
com.facebook.react.views.view.ReactViewManager: int CMD_SET_PRESSED
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_BASE64
com.facebook.react.bridge.BackgroundExecutor: java.util.concurrent.ExecutorService mExecutorService
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: java.lang.Class sslSocketFactoryClass
com.polidea.rxandroidble2.exceptions.BleGattException: int UNKNOWN_STATUS
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
com.polidea.rxandroidble2.LogConstants: int INFO
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: boolean $cancelable
com.facebook.react.fabric.FabricUIManager: boolean ENABLE_FABRIC_PERF_LOGS
okhttp3.internal.tls.BasicTrustRootIndex: java.util.Map subjectToCaCerts
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: boolean $clearPrevious$inlined
com.polidea.rxandroidble2.LogOptions$Builder: com.polidea.rxandroidble2.LogOptions$Logger logger
com.facebook.soloader.NativeDeps: java.lang.String LOG_TAG
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnection connection
io.reactivex.internal.operators.observable.ObservablePublish$InnerDisposable: long serialVersionUID
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl$1: io.reactivex.Scheduler val$callbackScheduler
okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner
okhttp3.HttpUrl: java.lang.String FORM_ENCODE_SET
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23: int deviceSdk
com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState: com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState STATE_ON
com.polidea.rxandroidble2.internal.util.ClientStateObservable_Factory: bleshadow.javax.inject.Provider locationServicesOkObservableProvider
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi18: com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper rxBleAdapterWrapper
okhttp3.OkHttpClient: java.util.List protocols
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_CANCELABLE
okio.AsyncTimeout: boolean inQueue
okhttp3.HttpUrl: java.lang.String scheme
com.bleplx.adapter.BleModule: com.bleplx.adapter.utils.mapper.RxBleDeviceToDeviceMapper rxBleDeviceToDeviceMapper
okhttp3.Cookie: okhttp3.Cookie$Companion Companion
okhttp3.Response: okhttp3.Response priorResponse
com.polidea.rxandroidble2.internal.operations.DescriptorReadOperation_Factory: bleshadow.javax.inject.Provider timeoutConfigurationProvider
okhttp3.internal.ws.WebSocketWriter: java.util.Random random
okhttp3.Credentials: okhttp3.Credentials INSTANCE
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INTERNAL_ERROR
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: okhttp3.internal.ws.RealWebSocket this$0
okhttp3.OkHttpClient$Builder: okhttp3.Cache cache
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver$SwitchMapMaybeObserver: long serialVersionUID
okhttp3.internal.platform.Platform: int WARN
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mJsPendingCallsTitleForTrace
okhttp3.ConnectionSpec: boolean supportsTlsExtensions
com.facebook.react.fabric.StateWrapperImpl: com.facebook.jni.HybridData mHybridData
com.polidea.rxandroidble2.internal.util.CharacteristicPropertiesParser: int[] possibleProperties
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideScanSetupProviderFactory: bleshadow.javax.inject.Provider scanSetupBuilderProviderForApi23Provider
com.facebook.soloader.SoSource: int LOAD_FLAG_MIN_CUSTOM_FLAG
io.reactivex.internal.operators.single.SingleToFlowable$SingleToFlowableObserver: long serialVersionUID
okhttp3.MultipartBody: okhttp3.MediaType FORM
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_RC4_40_MD5
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: boolean $cancelable
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_BUTTON_CLICKED
com.polidea.rxandroidble2.scan.ScanResult: com.polidea.rxandroidble2.scan.ScanRecord scanRecord
okhttp3.RequestBody$Companion$toRequestBody$2: byte[] $this_toRequestBody
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl_Factory: bleshadow.javax.inject.Provider callbackSchedulerProvider
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: java.lang.String $name
com.facebook.soloader.Elf64_Shdr: int sh_link
com.polidea.rxandroidble2.internal.BleIllegalOperationException: int neededProperties
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JavaScriptExecutor mJSExecutor
okhttp3.Cache$Entry: okhttp3.Headers responseHeaders
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mTouchExplorationEnabled
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger sNextInstanceIdForTrace
com.facebook.react.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: int jsArgCount
com.facebook.react.animated.EventAnimationDriver: com.facebook.react.animated.ValueAnimatedNode mValueNode
com.facebook.soloader.MinElf: int PT_DYNAMIC
okhttp3.CertificatePinner: okhttp3.CertificatePinner DEFAULT
okhttp3.internal.connection.ExchangeFinder: okhttp3.Address address
okhttp3.internal.platform.android.AndroidLogHandler: okhttp3.internal.platform.android.AndroidLogHandler INSTANCE
com.facebook.fbreact.specs.NativeDevSettingsSpec: java.lang.String NAME
com.facebook.soloader.SoSource: int LOAD_FLAG_ALLOW_IMPLICIT_PROVISION
io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable: long serialVersionUID
io.reactivex.internal.subscriptions.ScalarSubscription: long serialVersionUID
okhttp3.internal.cache.DiskLruCache$Snapshot: java.util.List sources
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: java.lang.String $name
com.polidea.rxandroidble2.exceptions.BleGattOperationType: com.polidea.rxandroidble2.exceptions.BleGattOperationType DESCRIPTOR_READ
okhttp3.Challenge: java.util.Map authParams
okhttp3.Protocol: okhttp3.Protocol HTTP_1_0
androidx.activity.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
com.facebook.react.modules.network.NetworkingModule: java.util.List mResponseHandlers
okhttp3.HttpUrl: java.lang.String FRAGMENT_ENCODE_SET_URI
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: java.lang.String $name
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGE_LOADING_END
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_RC4_128_SHA
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl: byte[] bytes
com.facebook.soloader.Elf32_Shdr: int sh_entsize
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: long serialVersionUID
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_GCM_SHA384
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: java.lang.Class paramClass
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform platform
okhttp3.internal.http2.Huffman$Node: okhttp3.internal.http2.Huffman$Node[] children
com.facebook.react.uimanager.UIManagerModule: boolean DEBUG
okhttp3.internal.http2.Http2Stream: boolean hasResponseHeaders
okhttp3.CacheControl: boolean noStore
com.polidea.rxandroidble2.scan.ScanFilter: android.os.ParcelUuid mServiceSolicitationUuidMask
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider deviceComponentCacheProvider
com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState: com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState STATE_TURNING_OFF
com.facebook.react.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: java.lang.String jniSignature
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.atomic.AtomicReference mNodesManager
okhttp3.Address: okhttp3.HttpUrl url
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.lang.String NAME
okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner$Companion Companion
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: android.bluetooth.le.BluetoothLeScanner mScanner
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_INDETERMINATE
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_CALLBACK
okhttp3.internal.http2.Http2Reader: okhttp3.internal.http2.Http2Reader$ContinuationSource continuation
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightEndSubscriber: long serialVersionUID
com.polidea.rxandroidble2.internal.util.CheckerScanPermission: java.lang.String[][] scanPermissions
com.polidea.rxandroidble2.internal.RxBleDeviceProvider_Factory: bleshadow.javax.inject.Provider deviceComponentCacheProvider
com.polidea.rxandroidble2.internal.operations.ScanOperationApi18: com.polidea.rxandroidble2.internal.scan.EmulatedScanFilterMatcher scanFilterMatcher
com.polidea.rxandroidble2.exceptions.BleDescriptorNotFoundException: java.util.UUID descriptorUUID
com.polidea.rxandroidble2.internal.operations.ScanOperationApi21: com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator internalScanResultCreator
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_START
okhttp3.internal.connection.RealConnection: okhttp3.internal.connection.RealConnection$Companion Companion
com.polidea.rxandroidble2.internal.operations.DescriptorReadOperation: android.bluetooth.BluetoothGattDescriptor bluetoothGattDescriptor
okhttp3.internal.connection.RealCall: boolean expectMoreExchanges
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_endStringConvert
com.facebook.react.views.view.ReactViewManager: int CMD_HOTSPOT_UPDATE
okhttp3.internal.http.HttpHeaders: okio.ByteString TOKEN_DELIMITERS
com.facebook.jni.HybridData: com.facebook.jni.HybridData$Destructor mDestructor
com.polidea.rxandroidble2.helpers.ValueInterpreter: int FORMAT_SFLOAT
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$4: io.reactivex.disposables.Disposable val$adapterMonitoringDisposable
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl mReactQueueConfiguration
okhttp3.internal.http2.Http2: int TYPE_SETTINGS
okhttp3.Request: java.lang.String method
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_ITEMS
okhttp3.internal.http2.Hpack: int PREFIX_7_BITS
okhttp3.internal.connection.RealConnection$connectTls$1: okhttp3.CertificatePinner $certificatePinner
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Companion Companion
com.polidea.rxandroidble2.internal.connection.ConnectorImpl_Factory: bleshadow.javax.inject.Provider callbacksSchedulerProvider
com.facebook.soloader.Elf32_Shdr: int sh_info
com.polidea.rxandroidble2.internal.util.CheckerConnectPermission_Factory: bleshadow.javax.inject.Provider connectPermissionsProvider
okhttp3.internal.http.RealResponseBody: okio.BufferedSource source
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String DENIED
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl$1: com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl this$0
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider provideTargetSdkProvider
okhttp3.Cache$Entry: okhttp3.Headers varyHeaders
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver$DelayErrorInnerObserver: long serialVersionUID
okhttp3.OkHttpClient$Builder: javax.net.ssl.SSLSocketFactory sslSocketFactoryOrNull
com.facebook.react.config.ReactFeatureFlags: boolean unstable_useFabricInterop
io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorConditionalSubscription: long serialVersionUID
okhttp3.internal.ws.WebSocketWriter: long minimumDeflateSize
okhttp3.OkHttpClient$Builder: java.net.ProxySelector proxySelector
okhttp3.internal.cache2.Relay: int SOURCE_FILE
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule mModule
com.facebook.soloader.UnpackingSoSource: com.facebook.soloader.FileLocker mInstanceLock
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation mUIImplementation
com.facebook.soloader.ElfFileChannel: java.nio.channels.FileChannel mFc
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.Exchange interceptorScopedExchange
androidx.fragment.app.FragmentActivity: boolean mResumed
com.polidea.rxandroidble2.RxBleClientImpl: com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper rxBleAdapterWrapper
com.polidea.rxandroidble2.internal.SingleResponseOperation: com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration timeoutConfiguration
com.facebook.soloader.SoLoader: boolean DEBUG
okhttp3.internal.http2.Header: okio.ByteString TARGET_AUTHORITY
com.facebook.soloader.MinElf: int PN_XNUM
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18_Factory: bleshadow.javax.inject.Provider rxBleAdapterWrapperProvider
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: javax.net.ssl.X509TrustManager trustManager
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String ERROR_INVALID_ACTIVITY
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
com.reactnativecommunity.asyncstorage.AsyncStorageModule$4: com.facebook.react.bridge.ReadableArray val$keyValueArray
okhttp3.Handshake: java.util.List localCertificates
com.facebook.react.config.ReactFeatureFlags: boolean useNativeState
com.polidea.rxandroidble2.RxBleDeviceServices$5: java.util.UUID val$descriptorUuid
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: java.lang.String $name$inlined
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String[] DRAWABLE_FIELDS
com.facebook.react.modules.camera.ImageStoreManager: int BUFFER_SIZE
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA X86_64
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec COMPATIBLE_TLS
okhttp3.internal.cache.DiskLruCache: java.lang.String MAGIC
okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnectionPool delegate
okhttp3.internal.http2.Http2Stream$FramingSource: boolean finished
com.polidea.rxandroidble2.internal.connection.ConnectionParametersImpl: int interval
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: int[] SPACING_TYPES
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback_Factory: bleshadow.javax.inject.Provider bluetoothGattProvider
okhttp3.CacheControl: int maxAgeSeconds
okhttp3.internal.http.BridgeInterceptor: okhttp3.CookieJar cookieJar
com.polidea.rxandroidble2.internal.connection.DisconnectAction_Factory: bleshadow.javax.inject.Provider clientOperationQueueProvider
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_NATIVE_STACK
kotlin.collections.EmptyMap: long serialVersionUID
okhttp3.internal.ws.WebSocketProtocol: long CLOSE_MESSAGE_MAX
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_START
okhttp3.internal.ws.RealWebSocket: java.util.Random random
okhttp3.MultipartBody: long contentLength
io.reactivex.internal.operators.single.SingleDelayWithPublisher$OtherSubscriber: long serialVersionUID
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$cleanupTask$1 cleanupTask
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_FIN
com.facebook.soloader.MinElf: int DT_NEEDED
io.reactivex.internal.schedulers.ScheduledDirectPeriodicTask: long serialVersionUID
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_END
com.himelbrand.ble.peripheral.RNBLEModule: android.bluetooth.le.AdvertiseCallback advertisingCallback
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] $VALUES
com.facebook.react.config.ReactFeatureFlags: boolean enableCloseVisibleGapBetweenPaths
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long cpuTime
okhttp3.internal.ws.MessageDeflater: java.util.zip.Deflater deflater
com.facebook.react.config.ReactFeatureFlags: boolean unstable_bridgelessArchitectureMemoryPressureHackyBoltsFix
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.ExchangeFinder finder
io.reactivex.internal.operators.flowable.FlowableGenerate$GeneratorSubscription: long serialVersionUID
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: java.lang.String VERSION_TABLE_CREATE
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver$OtherObserver: long serialVersionUID
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: java.lang.String $name
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver$InnerObserver: long serialVersionUID
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_START
com.polidea.rxandroidble2.internal.operations.DisconnectOperation: com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration timeoutConfiguration
okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.FileOperator fileOperator
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1$2: com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1 this$1
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: long serialVersionUID
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsAndroidWearFactory: bleshadow.javax.inject.Provider deviceSdkProvider
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.io.FileSystem fileSystem
okhttp3.internal.http2.Http2Connection: int AWAIT_PING
com.polidea.rxandroidble2.internal.util.CheckerLocationProvider_Factory: bleshadow.javax.inject.Provider locationManagerProvider
com.polidea.rxandroidble2.RxBleDeviceServices$6: java.util.UUID val$characteristicUuid
com.facebook.react.config.ReactFeatureFlags: boolean enableBridgelessArchitectureNewCreateReloadDestroy
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$Companion Companion
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_256_CBC_SHA
com.polidea.rxandroidble2.internal.connection.MtuBasedPayloadSizeLimit_Factory: bleshadow.javax.inject.Provider rxBleConnectionProvider
com.facebook.react.bridge.CatalystInstanceImpl$4: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideRecommendedConnectRuntimePermissionNamesFactory: bleshadow.javax.inject.Provider targetSdkProvider
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_TOP_KEY
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5: com.polidea.rxandroidble2.internal.util.QueueReleasingEmitterWrapper val$emitterWrapper
com.facebook.soloader.MinElf: int DT_STRTAB
okhttp3.OkHttpClient: okhttp3.Authenticator authenticator
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModuleRegistry mJSIModuleRegistry
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi31: com.polidea.rxandroidble2.internal.util.CheckerScanPermission checkerScanPermission
com.polidea.rxandroidble2.internal.RxBleLog: int NONE
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber$InnerObserver: long serialVersionUID
com.facebook.react.modules.intent.IntentModule: java.lang.String EXTRA_MAP_KEY_FOR_VALUE
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: boolean $cancelable
okhttp3.internal.ws.WebSocketExtensions: boolean serverNoContextTakeover
com.facebook.react.modules.dialog.DialogModule: java.util.Map CONSTANTS
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: com.polidea.rxandroidble2.internal.connection.MtuProvider mtuProvider
com.polidea.rxandroidble2.internal.scan.EmulatedScanFilterMatcher: boolean isEmpty
com.reactnativecommunity.asyncstorage.AsyncStorageModule$3: com.reactnativecommunity.asyncstorage.AsyncStorageModule this$0
com.polidea.rxandroidble2.helpers.ValueInterpreter: int FORMAT_UINT8
com.facebook.react.config.ReactFeatureFlags: boolean useTurboModules
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1$1$1 this$3
com.polidea.rxandroidble2.internal.operations.ReadRssiOperation_Factory: bleshadow.javax.inject.Provider bleGattCallbackProvider
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18_Factory: bleshadow.javax.inject.Provider internalScanResultCreatorProvider
io.reactivex.internal.operators.single.SingleCache$CacheDisposable: long serialVersionUID
okhttp3.Address: okhttp3.Authenticator proxyAuthenticator
com.himelbrand.ble.peripheral.RNBLEModule: android.bluetooth.BluetoothAdapter mBluetoothAdapter
okhttp3.internal.platform.android.CloseGuard: java.lang.reflect.Method warnIfOpenMethod
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: okhttp3.internal.http1.Http1ExchangeCodec this$0
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: int DATABASE_VERSION
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_START
okhttp3.internal.http2.Http2Reader$ContinuationSource: int length
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback mDispatchUIFrameCallback
kotlin.coroutines.EmptyCoroutineContext: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver: long serialVersionUID
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_UNABLE_TO_OPEN_DIALOG
com.polidea.rxandroidble2.scan.ScanSettings$Builder: boolean mLegacy
com.polidea.rxandroidble2.internal.scan.ScanRecordImplNativeWrapper: com.polidea.rxandroidble2.internal.util.ScanRecordParser scanRecordParser
com.polidea.rxandroidble2.scan.IsConnectable: com.polidea.rxandroidble2.scan.IsConnectable NOT_CONNECTABLE
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider disconnectActionProvider
okhttp3.HttpUrl$Builder: int port
com.facebook.jni.MapIteratorHelper: java.lang.Object mKey
com.facebook.soloader.MinElf: int PT_LOAD
okhttp3.Request$Builder: okhttp3.RequestBody body
com.facebook.react.bridge.ReactContext: java.lang.ref.WeakReference mCurrentActivity
okhttp3.internal.ws.RealWebSocket: int receivedPongCount
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry mActivityResultRegistry
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure CRITICAL
com.reactnativecommunity.asyncstorage.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
io.reactivex.internal.operators.observable.ObservableRetryBiPredicate$RetryBiObserver: long serialVersionUID
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_USER_INFO
com.polidea.rxandroidble2.RxBleClientImpl: io.reactivex.Observable rxBleAdapterStateObservable
com.facebook.react.runtime.ReactInstance: com.facebook.jni.HybridData mHybridData
com.polidea.rxandroidble2.internal.scan.ScanRecordImplCompat: byte[] bytes
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter_Factory: bleshadow.javax.inject.Provider adapterStateObservableProvider
io.reactivex.internal.operators.flowable.FlowablePublish$InnerSubscriber: long serialVersionUID
okhttp3.Headers: java.lang.String[] namesAndValues
okhttp3.internal.platform.BouncyCastlePlatform: boolean isSupported
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_NULL_SHA
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResultLegacy: byte[] scanRecord
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings DEFAULT_SETTINGS
com.polidea.rxandroidble2.internal.util.ClientStateObservable: com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper rxBleAdapterWrapper
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver$OtherObserver: long serialVersionUID
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_PHONE_PAD
okhttp3.internal.connection.RealConnection: okhttp3.internal.connection.RealConnectionPool connectionPool
com.polidea.rxandroidble2.internal.connection.LoggingIllegalOperationHandler_Factory: bleshadow.javax.inject.Provider messageCreatorProvider
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock INSTANCE
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType MAIN_UI
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.http1.HeadersReader headersReader
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.view.accessibility.AccessibilityManager mAccessibilityManager
io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver: long serialVersionUID
com.facebook.soloader.Elf64_Shdr: int sh_addr
okhttp3.internal.http.HttpHeaders: okio.ByteString QUOTED_STRING_DELIMITERS
io.reactivex.internal.operators.observable.ObserverResourceWrapper: long serialVersionUID
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23_Factory: bleshadow.javax.inject.Provider checkerLocationProvider
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: long serialVersionUID
okhttp3.internal.ws.WebSocketProtocol: long PAYLOAD_SHORT_MAX
okhttp3.internal.ws.RealWebSocket: okhttp3.WebSocketListener listener
okhttp3.Response$Builder: okhttp3.Handshake handshake
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: okhttp3.internal.http1.Http1ExchangeCodec this$0
okhttp3.Address: javax.net.SocketFactory socketFactory
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$Output readCharacteristicOutput
okhttp3.internal.ws.WebSocketReader: okio.Buffer messageFrameBuffer
okhttp3.HttpUrl: java.lang.String url
okhttp3.ResponseBody: okhttp3.ResponseBody$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_END
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase instance
com.facebook.react.animated.EventAnimationDriver: java.util.List mEventPath
okhttp3.OkHttpClient$Builder$addInterceptor$2: kotlin.jvm.functions.Function1 $block
com.polidea.rxandroidble2.LogConstants: int WARN
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider rxBleAdapterStateObservableProvider
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$3: com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl this$0
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl: com.polidea.rxandroidble2.internal.operations.OperationsProvider operationsProvider
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Writer writer
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker illegalOperationChecker
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_START
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver: long serialVersionUID
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: long bytesRemaining
com.facebook.react.bridge.JavaMethodWrapper: int mParamLength
okhttp3.internal.platform.android.AndroidLog: java.util.concurrent.CopyOnWriteArraySet configuredLoggers
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_MAPBUFFER_SO_FILE_END
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23: int targetSdk
com.polidea.rxandroidble2.exceptions.BleCharacteristicNotFoundException: java.util.UUID characteristicUUID
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_RC4_128_SHA
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: com.polidea.rxandroidble2.internal.connection.DescriptorWriter descriptorWriter
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$Output updatedConnectionOutput
com.facebook.soloader.ExoSoSource$ExoUnpacker$FileBackedInputDsoIterator: com.facebook.soloader.ExoSoSource$ExoUnpacker this$1
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskRunner$Backend backend
com.polidea.rxandroidble2.internal.operations.ServiceDiscoveryOperation: android.bluetooth.BluetoothGatt bluetoothGatt
com.polidea.rxandroidble2.internal.util.BleConnectionCompat_Factory: bleshadow.javax.inject.Provider contextProvider
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.ghostcommv2.MainApplication$reactNativeHost$1: boolean isHermesEnabled
okhttp3.internal.http.HttpMethod: okhttp3.internal.http.HttpMethod INSTANCE
okhttp3.internal.http.DatesKt: java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS
com.reactnativecommunity.asyncstorage.SerialExecutor: java.lang.Runnable mActive
okhttp3.internal.http2.Http2: int FLAG_NONE
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentBuilder: com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl clientComponentImpl
com.facebook.react.bridge.ReadableNativeArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.polidea.rxandroidble2.internal.operations.DisconnectOperation_Factory: bleshadow.javax.inject.Provider bluetoothInteractionSchedulerProvider
com.polidea.rxandroidble2.RxBleClientImpl: com.polidea.rxandroidble2.internal.util.CheckerScanPermission checkerScanPermission
okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode$Companion Companion
io.reactivex.internal.observers.BiConsumerSingleObserver: long serialVersionUID
io.reactivex.internal.operators.single.SingleZipArray$ZipCoordinator: long serialVersionUID
okhttp3.internal.ws.RealWebSocket: boolean awaitingPong
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1: com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator this$0
com.polidea.rxandroidble2.internal.operations.DisconnectOperation_Factory: bleshadow.javax.inject.Provider bluetoothManagerProvider
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: boolean $inFinished$inlined
okhttp3.internal.http2.Http2Stream: long writeBytesTotal
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber: long serialVersionUID
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String etag
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_END
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: java.lang.String NAME
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: long serialVersionUID
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation: com.polidea.rxandroidble2.internal.connection.PayloadSizeLimitProvider batchSizeProvider
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl: boolean shouldRun
com.facebook.soloader.ElfFileChannel: java.io.FileInputStream mIs
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl: java.lang.String deviceMacAddress
okhttp3.MultipartBody: okhttp3.MultipartBody$Companion Companion
com.polidea.rxandroidble2.internal.operations.ConnectOperation$4: com.polidea.rxandroidble2.internal.operations.ConnectOperation this$0
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
okhttp3.Address: java.net.Proxy proxy
okhttp3.internal.http2.Http2Connection: java.util.Set currentPushRequests
com.facebook.react.views.textinput.ReactTextInputManager: int FOCUS_TEXT_INPUT
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_MAP
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode NO_ERROR
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricSharedEventPipeline
com.facebook.soloader.SoLoader: java.util.concurrent.atomic.AtomicInteger sSoSourcesVersion
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_PROMISE
okhttp3.internal.platform.android.AndroidLog: okhttp3.internal.platform.android.AndroidLog INSTANCE
com.facebook.soloader.SoLoader: int SOLOADER_SKIP_MERGED_JNI_ONLOAD
com.polidea.rxandroidble2.internal.operations.ConnectOperation$1: com.polidea.rxandroidble2.internal.operations.ConnectOperation this$0
okhttp3.internal.http2.Http2Stream$FramingSink: boolean finished
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: com.facebook.react.bridge.CatalystInstanceImpl this$0
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver: long serialVersionUID
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsConnectableCheckerFactory: bleshadow.javax.inject.Provider isConnectableCheckerApi18Provider
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver: long serialVersionUID
com.polidea.rxandroidble2.internal.serialization.QueueSemaphore: java.util.concurrent.atomic.AtomicBoolean isReleased
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: okhttp3.internal.cache.CacheRequest $cacheRequest
com.facebook.soloader.SoLoader: java.lang.String SO_STORE_NAME_MAIN
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnMultiWindowModeChangedListeners
com.facebook.soloader.NativeDeps: java.util.concurrent.locks.ReentrantReadWriteLock sWaitForDepsFileLock
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.polidea.rxandroidble2.internal.util.ClientStateObservable_Factory: bleshadow.javax.inject.Provider rxBleAdapterWrapperProvider
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA NOT_SO
okhttp3.Cookie: java.util.regex.Pattern TIME_PATTERN
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver$InnerObserver: long serialVersionUID
com.facebook.react.views.textinput.ReactTextInputManager: android.text.InputFilter[] EMPTY_FILTERS
com.polidea.rxandroidble2.internal.Priority: com.polidea.rxandroidble2.internal.Priority HIGH
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5: java.nio.ByteBuffer val$byteBuffer
com.facebook.react.config.ReactFeatureFlags: boolean enableRemoveDeleteTreeInstruction
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: okio.BufferedSink $cacheBody
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_MESSAGE
okhttp3.internal.cache2.Relay: okio.Buffer upstreamBuffer
com.bleplx.adapter.BleModule: com.polidea.rxandroidble2.RxBleClient rxBleClient
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager_Factory: bleshadow.javax.inject.Provider configEnableNotificationProvider
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_3DES_EDE_CBC_SHA
com.polidea.rxandroidble2.internal.DeviceModule: java.lang.String CONNECT_TIMEOUT
com.facebook.soloader.Elf64_Ehdr: int e_flags
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricLogs
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.concurrent.TaskQueue cleanupQueue
com.polidea.rxandroidble2.internal.util.CharacteristicPropertiesParser: int propertyWrite
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: okhttp3.internal.ws.RealWebSocket$Streams $streams$inlined
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi23: com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator scanSettingsEmulator
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.List PREVAILING_RULE
okhttp3.Cache: int hitCount
com.facebook.react.modules.fresco.FrescoModule: boolean mClearOnDestroy
com.facebook.react.fabric.FabricUIManager: boolean ENABLE_FABRIC_LOGS
com.polidea.rxandroidble2.exceptions.BleScanException: int BLUETOOTH_DISABLED
com.polidea.rxandroidble2.scan.ScanCallbackType: com.polidea.rxandroidble2.scan.ScanCallbackType CALLBACK_TYPE_FIRST_MATCH
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
com.facebook.react.fabric.FabricUIManager: java.util.concurrent.atomic.AtomicBoolean mMountNotificationScheduled
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMBER_PAD
okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0
com.facebook.react.bridge.ColorPropConverter: java.lang.String PACKAGE_DELIMITER
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_CHACHA20_POLY1305_SHA256
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
okhttp3.Cache$Entry: okhttp3.Handshake handshake
com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState: com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState CONNECTING
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache_Factory$InstanceHolder: com.polidea.rxandroidble2.internal.cache.DeviceComponentCache_Factory INSTANCE
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainNoLast: long serialVersionUID
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentBuilder: java.lang.String macAddress
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$1: com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl this$0
com.polidea.rxandroidble2.RxBleDeviceServices$3: java.util.UUID val$characteristicUuid
io.reactivex.internal.operators.flowable.FlowableCreate$LatestAsyncEmitter: long serialVersionUID
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$Output: com.jakewharton.rxrelay2.PublishRelay valueRelay
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider provideRecommendedConnectRuntimePermissionNamesProvider
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_DES_CBC_SHA
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvidesOperationTimeoutConfFactory: bleshadow.javax.inject.Provider timeoutSchedulerProvider
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl$2$1: com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl$2 this$1
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider checkerPermissionProvider
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_GCM_SHA256
okhttp3.Cache$urls$1: boolean canRemove
okhttp3.OkHttpClient: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: int mRecommendedTimeout
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.ModuleHolder mModuleHolder
com.polidea.rxandroidble2.internal.operations.DisconnectOperation: com.polidea.rxandroidble2.internal.connection.RxBleGattCallback rxBleGattCallback
com.facebook.soloader.Elf32_Phdr: int p_paddr
com.polidea.rxandroidble2.scan.ScanSettings: int mCallbackType
com.polidea.rxandroidble2.internal.DeviceModule_ProvideBluetoothDeviceFactory: bleshadow.javax.inject.Provider adapterWrapperProvider
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightSubscriber: long serialVersionUID
com.polidea.rxandroidble2.internal.DeviceModule: int DEFAULT_CONNECT_TIMEOUT
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResultLegacy: android.bluetooth.BluetoothDevice bluetoothDevice
okhttp3.Request: java.util.Map tags
com.polidea.rxandroidble2.scan.ScanSettings$Builder: boolean mShouldCheckLocationProviderState
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteDatabase routeDatabase
com.polidea.rxandroidble2.RxBleScanResult: com.polidea.rxandroidble2.RxBleDevice bleDevice
okhttp3.internal.http2.Http2Writer: java.util.logging.Logger logger
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Editor currentEditor
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mSignature
androidx.activity.ComponentActivity: boolean mDispatchingOnPictureInPictureModeChanged
okhttp3.internal.Util: java.lang.String userAgent
okhttp3.Protocol: java.lang.String protocol
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR_SEGMENT
okhttp3.internal.ws.WebSocketProtocol: int B1_FLAG_MASK
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_STOP
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBER_PAD
com.polidea.rxandroidble2.internal.util.QueueReleasingEmitterWrapper: java.util.concurrent.atomic.AtomicBoolean isEmitterCanceled
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: okhttp3.internal.ws.WebSocketExtensions $extensions$inlined
okhttp3.internal.http2.Http2Connection: long writeBytesTotal
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager_Factory: bleshadow.javax.inject.Provider operationQueueProvider
com.polidea.rxandroidble2.scan.ScanSettings$Builder: long mReportDelayMillis
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider provideConnectionQueueExecutorServiceProvider
com.facebook.react.bridge.CxxCallbackImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean mIsFinished
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: int $streamId$inlined
io.reactivex.internal.operators.flowable.FlowableConcatWithSingle$ConcatWithSubscriber: long serialVersionUID
okhttp3.Cookie$Builder: long expiresAt
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnConditionalSubscriber: long serialVersionUID
okhttp3.internal.ws.MessageInflaterKt: int OCTETS_TO_ADD_BEFORE_INFLATION
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter: long serialVersionUID
com.reactnativecommunity.asyncstorage.AsyncStorageModule$2: com.facebook.react.bridge.Callback val$callback
com.facebook.react.modules.network.NetworkingModule: int MAX_CHUNK_SIZE_BETWEEN_FLUSHES
okhttp3.internal.http2.Settings: int COUNT
com.facebook.react.bridge.Arguments$1: java.lang.Object val$objects
okhttp3.internal.cache.DiskLruCache$Editor: boolean done
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
com.facebook.soloader.SoLoader: int SOLOADER_DONT_TREAT_AS_SYSTEMAPP
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager serviceDiscoveryManager
com.facebook.soloader.UnpackingSoSource$1: com.facebook.soloader.UnpackingSoSource$DsoManifest val$manifest
okhttp3.internal.connection.RealCall: boolean forWebSocket
com.ghostcommv2.R$drawable: int rn_edit_text_material
com.polidea.rxandroidble2.RxBleAdapterStateObservable$1$2: com.polidea.rxandroidble2.RxBleAdapterStateObservable$1 this$1
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode PROTOCOL_ERROR
okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry entry
com.polidea.rxandroidble2.internal.connection.NoRetryStrategy$1: com.polidea.rxandroidble2.internal.connection.NoRetryStrategy this$0
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$3$1: com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$3 this$0
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5$3: com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5 this$0
okhttp3.internal.cache2.Relay: int SOURCE_UPSTREAM
com.facebook.soloader.Elf32_Ehdr: int e_phnum
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_END
io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver: long serialVersionUID
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Connection connection
com.facebook.react.views.textinput.ReactTextInputManager: int[] SPACING_TYPES
com.polidea.rxandroidble2.internal.operations.ScanOperation$1: com.polidea.rxandroidble2.internal.operations.ScanOperation this$0
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_CHECKED
okhttp3.internal.http.RealInterceptorChain: int readTimeoutMillis
com.polidea.rxandroidble2.RxBleClientImpl_Factory: bleshadow.javax.inject.Provider adapterStateObservableProvider
okhttp3.Cookie: long expiresAt
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String type
com.facebook.soloader.NativeDeps$1: android.content.Context val$context
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedEmitLast: long serialVersionUID
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideScanPreconditionVerifierFactory: bleshadow.javax.inject.Provider scanPreconditionVerifierForApi24Provider
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_END
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_PROGRESS
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothCallbacksSchedulerFactory$InstanceHolder: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothCallbacksSchedulerFactory INSTANCE
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: int $streamId$inlined
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$ResponseHandler mNetworkingResponseHandler
okhttp3.internal.http2.Http2Connection$Builder: java.lang.String connectionName
com.facebook.soloader.ApkSoSource: int PREFER_ANDROID_LIBS_DIRECTORY
com.facebook.react.fabric.FabricUIManager: boolean mDriveCxxAnimations
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: boolean $cancelable
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver$InnerRepeatObserver: long serialVersionUID
com.facebook.soloader.NativeDeps: int LIB_PREFIX_LEN
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_SHA
com.facebook.react.modules.image.ImageLoaderModule: android.util.SparseArray mEnqueuedRequests
com.bleplx.adapter.BleModule: java.util.HashMap connectedDevices
com.facebook.soloader.SoLoader$1: java.lang.String val$localLdLibraryPath
io.reactivex.internal.observers.LambdaObserver: long serialVersionUID
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountingManager mMountingManager
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenReceiver: long serialVersionUID
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager_Factory: bleshadow.javax.inject.Provider bluetoothGattProvider
io.reactivex.observers.DisposableObserver: java.util.concurrent.atomic.AtomicReference upstream
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.Class serverProviderClass
androidx.activity.ComponentActivity: int mContentLayoutId
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideIllegalOperationHandlerFactory: bleshadow.javax.inject.Provider suppressOperationCheckProvider
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesMessageQueueThread
okhttp3.internal.connection.RealConnection: okio.BufferedSink sink
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_3DES_EDE_CBC_SHA
com.polidea.rxandroidble2.internal.logger.LoggerSetup: int uuidLogSetting
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl$1: com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl this$0
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable$2: com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable this$0
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] WILDCARD_LABEL
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE
io.reactivex.internal.operators.flowable.FlowableReplay$UnboundedReplayBuffer: long serialVersionUID
io.reactivex.internal.observers.ConsumerSingleObserver: long serialVersionUID
com.polidea.rxandroidble2.internal.connection.ConnectionComponent$NamedBooleans: java.lang.String AUTO_CONNECT
com.facebook.react.bridge.ReactSoftExceptionLogger: java.util.List sListeners
okhttp3.internal.ws.RealWebSocket: long CANCEL_AFTER_CLOSE_MILLIS
okhttp3.Response: long sentRequestAtMillis
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_BLOCKED
okhttp3.internal.connection.RouteSelector: int nextProxyIndex
okhttp3.internal.cache2.Relay: int sourceCount
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DYNAMIC
okhttp3.internal.http2.Http2Reader$ContinuationSource: int flags
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec mReactQueueConfigurationSpec
com.polidea.rxandroidble2.internal.RxBleLog: int INFO
com.facebook.soloader.SoLoader$1: java.lang.String val$localLdLibraryPathNoZips
com.polidea.rxandroidble2.internal.DeviceModule: java.lang.String OPERATION_TIMEOUT
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: android.content.BroadcastReceiver mReceiver
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CHANGE_THREAD_PRIORITY
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mReject
okhttp3.internal.concurrent.TaskQueue$execute$1: java.lang.String $name
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String DEFAULT_STYLE
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: java.lang.String NAME
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator: io.reactivex.ObservableTransformer emulateFirstMatch
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: okio.ForwardingTimeout timeout
com.facebook.soloader.Elf32_Phdr: int p_align
com.polidea.rxandroidble2.internal.util.CheckerPermission: android.content.Context context
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.Object mJSCallsPendingInitLock
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: java.util.concurrent.Callable val$callable
okhttp3.Cookie$Builder: boolean persistent
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueThreadSpec
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform$Companion Companion
okhttp3.Cache$CacheResponseBody: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot
okhttp3.Interceptor$Companion$invoke$1: kotlin.jvm.functions.Function1 $block
com.reactnativecommunity.asyncstorage.SerialExecutor: java.util.ArrayDeque mTasks
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.lang.String NAME
com.facebook.react.bridge.UiThreadUtil: android.os.Handler sMainHandler
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_END
com.ghostcommv2.BuildConfig: java.lang.String VERSION_NAME
okhttp3.internal.http2.Http2: int TYPE_GOAWAY
okhttp3.MediaType: java.util.regex.Pattern PARAMETER
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi21_Factory: bleshadow.javax.inject.Provider internalScanResultCreatorProvider
com.facebook.soloader.SoSource: int PREPARE_FLAG_DISABLE_FS_SYNC_JOB
com.polidea.rxandroidble2.ConnectionSetup: int DEFAULT_OPERATION_TIMEOUT
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothManagerFactory: bleshadow.javax.inject.Provider contextProvider
io.reactivex.internal.operators.flowable.FlowableCache$CacheSubscription: long serialVersionUID
okhttp3.internal.cache.DiskLruCache$Entry: long sequenceNumber
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: boolean $cancelable
com.bleplx.BlePlxModule: com.bleplx.converter.ScanResultToJsObjectConverter scanResultConverter
okhttp3.internal.http2.Http2: int TYPE_PING
okhttp3.HttpUrl$Builder: java.lang.String INVALID_HOST
okhttp3.Protocol: okhttp3.Protocol SPDY_3
io.reactivex.internal.operators.flowable.FlowableCount$CountSubscriber: long serialVersionUID
com.polidea.rxandroidble2.RxBleClient$State: com.polidea.rxandroidble2.RxBleClient$State READY
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18: com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper rxBleAdapterWrapper
com.polidea.rxandroidble2.internal.logger.LoggerSetup: int logLevel
okhttp3.internal.http.RealResponseBody: long contentLength
com.facebook.react.config.ReactFeatureFlags: boolean unstable_useTurboModuleInterop
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: bleshadow.javax.inject.Provider provideBluetoothDeviceProvider
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String GRANTED
com.facebook.fbreact.specs.NativeTimingSpec: java.lang.String NAME
okhttp3.internal.http2.Http2Connection: long readBytesTotal
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout writeTimeout
io.reactivex.internal.operators.single.SingleObserveOn$ObserveOnSingleObserver: long serialVersionUID
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_END
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA
com.facebook.soloader.ElfZipFileChannel: long mLength
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator: io.reactivex.Scheduler scheduler
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
okhttp3.Protocol: okhttp3.Protocol$Companion Companion
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: long serialVersionUID
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CONNECT_ERROR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_START
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mDescs
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$1: java.nio.ByteBuffer val$byteBuffer
com.polidea.rxandroidble2.internal.RxBleLog$2: com.polidea.rxandroidble2.internal.RxBleLog$Logger val$logger
okhttp3.CacheControl: java.lang.String headerValue
com.facebook.soloader.NativeDeps: int LIB_SUFFIX_LEN
com.polidea.rxandroidble2.internal.scan.ScanRecordImplCompat: int advertiseFlags
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.Runnable mInvokeDefaultBackPressRunnable
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactCallerContextFactory mCallerContextFactory
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBERED
com.polidea.rxandroidble2.ClientComponent$PlatformConstants: java.lang.String INT_DEVICE_SDK
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager_Factory: bleshadow.javax.inject.Provider configDisableProvider
com.polidea.rxandroidble2.RxBleConnection: int GATT_WRITE_MTU_OVERHEAD
com.polidea.rxandroidble2.internal.util.QueueReleasingEmitterWrapper: io.reactivex.ObservableEmitter emitter
com.polidea.rxandroidble2.internal.RxBleDeviceImpl: com.polidea.rxandroidble2.internal.util.CheckerConnectPermission checkerConnectPermission
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
okhttp3.CertificatePinner$check$1: okhttp3.CertificatePinner this$0
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: boolean $cancelable
okhttp3.internal.Util: java.lang.String okHttpName
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor mMountItemExecutor
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: java.lang.String NAME
com.facebook.react.fabric.FabricUIManager: android.os.Handler mMainThreadHandler
com.facebook.soloader.SoLoader: java.lang.String VERSION
com.facebook.soloader.UnpackingSoSource: byte STATE_CLEAN
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.content.ContentResolver mContentResolver
okhttp3.internal.http2.Hpack$Reader: int nextHeaderIndex
com.reactnativecommunity.asyncstorage.AsyncStorageModule$2: com.facebook.react.bridge.ReadableArray val$keyValueArray
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: long serialVersionUID
com.facebook.soloader.SoLoader: java.util.HashSet sLoadedLibraries
com.facebook.soloader.SysUtil: byte APK_SIGNATURE_VERSION
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $writerToClose$inlined
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: java.net.Proxy $proxy
com.polidea.rxandroidble2.RxBleClientImpl_Factory: bleshadow.javax.inject.Provider bluetoothInteractionSchedulerProvider
io.reactivex.internal.operators.flowable.FlowableRangeLong$BaseRangeSubscription: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableWindow$WindowSkipObserver: long serialVersionUID
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: java.lang.String TAG
io.reactivex.internal.subscribers.LambdaSubscriber: long serialVersionUID
com.reactnativecommunity.asyncstorage.BuildConfig: java.lang.Long AsyncStorage_db_size
com.facebook.react.fabric.FabricUIManager: int mCurrentSynchronousCommitNumber
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$2: com.polidea.rxandroidble2.NotificationSetupMode val$setupMode
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5$2: java.nio.ByteBuffer val$byteBuffer
okhttp3.RequestBody$Companion$asRequestBody$1: java.io.File $this_asRequestBody
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl$2: com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl this$0
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl_Factory: bleshadow.javax.inject.Provider bluetoothGattProvider
com.facebook.react.runtime.ReactInstance: com.facebook.react.uimanager.ComponentNameResolverManager mComponentNameResolverManager
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_END
com.facebook.react.turbomodule.core.NativeModuleSoLoader: boolean isSoLibraryLoaded
com.facebook.soloader.Elf32_Ehdr: int e_entry
com.reactnativecommunity.asyncstorage.AsyncStorageModule$5: com.facebook.react.bridge.Callback val$callback
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_START
okhttp3.Route: java.net.InetSocketAddress socketAddress
com.facebook.react.config.ReactFeatureFlags: boolean enableEagerRootViewAttachment
okhttp3.internal.http2.Http2Connection: int DEGRADED_PING
kotlin.jvm.internal.CallableReference: java.lang.Class owner
com.facebook.react.bridge.DynamicFromArray: int mIndex
io.reactivex.internal.disposables.ArrayCompositeDisposable: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: long serialVersionUID
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter mRCTEventEmitter
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle$EqualCoordinator: long serialVersionUID
okhttp3.internal.connection.RealConnectionPool: java.util.concurrent.ConcurrentLinkedQueue connections
okio.AsyncTimeout: long IDLE_TIMEOUT_NANOS
okhttp3.MultipartBody: okhttp3.MediaType contentType
com.facebook.react.bridge.JavaScriptExecutor: com.facebook.jni.HybridData mHybridData
com.polidea.rxandroidble2.internal.DeviceModule$1: com.jakewharton.rxrelay2.BehaviorRelay val$connectionStateBehaviorRelay
okhttp3.HttpUrl: java.lang.String QUERY_COMPONENT_ENCODE_SET_URI
okhttp3.Request: okhttp3.HttpUrl url
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl clientComponentImpl
okhttp3.internal.http2.Hpack: int PREFIX_4_BITS
okhttp3.CacheControl: boolean noCache
okhttp3.internal.http.RealInterceptorChain: int calls
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi24: io.reactivex.Scheduler timeScheduler
com.facebook.react.turbomodule.core.TurboModulePerfLogger: com.facebook.react.perflogger.NativeModulePerfLogger sNativeModulePerfLogger
com.facebook.react.config.ReactFeatureFlags: boolean enableBackgroundExecutor
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_START
com.facebook.soloader.NativeLibrary: java.lang.String TAG
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_START
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider androidScanObjectsConverterProvider
okhttp3.HttpUrl: java.lang.String password
okhttp3.OkHttpClient$Builder: okhttp3.internal.connection.RouteDatabase routeDatabase
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: java.lang.String $name
com.polidea.rxandroidble2.scan.ScanFilter: byte[] mServiceData
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: java.lang.String NAME
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber$OtherSubscriber: long serialVersionUID
okhttp3.internal.http2.Http2Connection: long degradedPongsReceived
io.reactivex.exceptions.MissingBackpressureException: long serialVersionUID
okhttp3.internal.ws.WebSocketReader: boolean noContextTakeover
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$2: com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl this$0
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult: android.bluetooth.BluetoothDevice bluetoothDevice
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode COMPRESSION_ERROR
okhttp3.internal.http2.Hpack: int SETTINGS_HEADER_TABLE_SIZE_LIMIT
io.reactivex.internal.util.AtomicThrowable: long serialVersionUID
okhttp3.Cookie$Builder: java.lang.String value
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager: boolean hasCachedResults
com.facebook.react.modules.intent.IntentModule: com.facebook.react.bridge.LifecycleEventListener mInitialURLListener
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl$1: com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl this$0
com.bleplx.BlePlxModule: com.bleplx.converter.ServiceToJsObjectConverter serviceConverter
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver$BufferOpenObserver: long serialVersionUID
com.polidea.rxandroidble2.RxBleClientImpl_Factory: bleshadow.javax.inject.Provider scanSetupBuilderProvider
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1: io.reactivex.Scheduler val$scheduler
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.common.futures.SimpleSettableFuture val$future
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: com.polidea.rxandroidble2.internal.connection.RxBleGattCallback gattCallback
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi21: com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter androidScanObjectsConverter
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_POSITIVE
com.polidea.rxandroidble2.RxBleClientImpl_Factory: bleshadow.javax.inject.Provider scanPreconditionVerifierProvider
okhttp3.internal.http2.Http2Reader: okhttp3.internal.http2.Http2Reader$Companion Companion
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$7: com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl this$0
com.facebook.soloader.ApplicationSoSource: com.facebook.soloader.DirectorySoSource soSource
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mUiMessageQueueThread
com.polidea.rxandroidble2.internal.util.ByteAssociationUtil$3: android.bluetooth.BluetoothGattDescriptor val$bluetoothGattDescriptor
io.reactivex.internal.operators.observable.ObservableSkipLast$SkipLastObserver: long serialVersionUID
okhttp3.internal.connection.RealConnection: int successCount
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: java.lang.String KEY_CONSOLE_PATCH_SETTINGS
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_SHA
com.polidea.rxandroidble2.internal.connection.DescriptorWriter: com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueue operationQueue
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18: com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator scanSettingsEmulator
okhttp3.MultipartReader: java.lang.String boundary
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1: io.reactivex.functions.Function takeFirstFromEachWindowFunc
com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry$1$1: com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry$1 this$1
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: long serialVersionUID
com.polidea.rxandroidble2.DaggerClientComponent$Builder: android.content.Context applicationContext
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mModule
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.concurrent.TaskRunner taskRunner
okhttp3.Cookie$Builder: java.lang.String name
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_HASH
okhttp3.Cache: int VERSION
com.facebook.soloader.Elf32_Ehdr: int e_type
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18$1: io.reactivex.ObservableTransformer val$callbackTypeTransformer
okhttp3.internal.http2.Http2Connection: long awaitPingsSent
com.facebook.fbreact.specs.NativeAppStateSpec: java.lang.String NAME
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskRunner INSTANCE
com.facebook.react.views.textinput.ReactTextInputManager: int AUTOCAPITALIZE_FLAGS
com.polidea.rxandroidble2.scan.ScanResult: com.polidea.rxandroidble2.scan.IsConnectable isConnectable
okhttp3.Request$Builder: okhttp3.Headers$Builder headers
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_START
okhttp3.Response: okhttp3.Handshake handshake
com.polidea.rxandroidble2.internal.DeviceModule_ProvideConnectionStateRelayFactory$InstanceHolder: com.polidea.rxandroidble2.internal.DeviceModule_ProvideConnectionStateRelayFactory INSTANCE
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6: com.polidea.rxandroidble2.RxBleConnection$WriteOperationRetryStrategy val$writeOperationRetryStrategy
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_OPEN_RESPONSE_BODY
com.facebook.react.views.text.ReactTextViewManager: java.lang.String REACT_CLASS
androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry
okhttp3.internal.concurrent.TaskRunner: java.util.List readyQueues
com.polidea.rxandroidble2.internal.connection.DisconnectAction: com.polidea.rxandroidble2.internal.operations.DisconnectOperation operationDisconnect
io.reactivex.internal.operators.observable.ObservableIntervalRange$IntervalRangeObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber: long serialVersionUID
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData mHybridData
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSubscriber: long serialVersionUID
okhttp3.CookieJar: okhttp3.CookieJar$Companion Companion
okhttp3.MultipartBody$Part: okhttp3.RequestBody body
com.polidea.rxandroidble2.internal.util.ByteAssociationUtil$1: java.util.UUID val$characteristicUUID
okhttp3.internal.ws.RealWebSocket: java.lang.String key
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: java.lang.String NAME
com.polidea.rxandroidble2.internal.RxBleLog: int WARN
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RealCall call
io.reactivex.internal.operators.flowable.FlowableWindow$WindowExactSubscriber: long serialVersionUID
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String TRANSFER_ENCODING
io.reactivex.internal.operators.flowable.FlowableZip$ZipSubscriber: long serialVersionUID
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_startStringConvert
com.polidea.rxandroidble2.scan.ScanFilter: byte[] mManufacturerDataMask
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: int sHolderCount
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutObserver: long serialVersionUID
okhttp3.CacheControl$Builder: boolean noStore
io.reactivex.internal.operators.single.SingleUnsubscribeOn$UnsubscribeOnSingleObserver: long serialVersionUID
com.facebook.react.fabric.FabricUIManager: java.lang.String TAG
okhttp3.internal.cache.FaultHidingSink: kotlin.jvm.functions.Function1 onException
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.ArrayList mRecoveredErrors
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_RC4_128_SHA
okhttp3.internal.connection.RealConnection: boolean noCoalescedConnections
okhttp3.Cache$CacheResponseBody: okio.BufferedSource bodySource
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager_Factory: bleshadow.javax.inject.Provider descriptorWriterProvider
com.polidea.rxandroidble2.internal.util.ScanRecordParser: int UUID_BYTES_128_BIT
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: java.lang.String NAME
com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry$1: io.reactivex.Scheduler val$subscribeScheduler
com.polidea.rxandroidble2.scan.ScanFilter$Builder: byte[] mServiceDataMask
com.polidea.rxandroidble2.RxBleClientImpl_Factory: bleshadow.javax.inject.Provider bluetoothManagerWrapperProvider
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_BINARY
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback_Factory: bleshadow.javax.inject.Provider nativeCallbackDispatcherProvider
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String REACT_CLASS
com.polidea.rxandroidble2.internal.scan.InternalToExternalScanResultConverter_Factory: bleshadow.javax.inject.Provider deviceProvider
com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker$1: int val$neededProperties
okhttp3.internal.ws.WebSocketProtocol: int PAYLOAD_SHORT
com.facebook.soloader.UnpackingSoSource$1: java.lang.Boolean val$quietly
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_CCM_8_SHA256
com.facebook.soloader.Elf32_Shdr: int sh_flags
com.facebook.soloader.Elf32_Shdr: int sh_addralign
okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager x509TrustManager
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: com.facebook.soloader.UnpackingSoSource mSoSource
io.reactivex.internal.observers.CallbackCompletableObserver: long serialVersionUID
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothAdapterFactory$InstanceHolder: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothAdapterFactory INSTANCE
okhttp3.internal.http2.Header: int hpackSize
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn$UnsubscribeObserver: long serialVersionUID
io.reactivex.internal.operators.single.SingleZipArray$ZipSingleObserver: long serialVersionUID
com.polidea.rxandroidble2.internal.logger.LoggerUtil: char[] HEX_ARRAY
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_ENCODING_HEADER_NAME
com.facebook.yoga.YogaNodeJNIBase: int mLayoutDirection
io.reactivex.internal.observers.BlockingObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableInterval$IntervalSubscriber: long serialVersionUID
com.facebook.soloader.SoSource: int LOAD_FLAG_ALLOW_SOURCE_CHANGE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_DES_CBC_SHA
com.facebook.soloader.SoSource: int PREPARE_FLAG_ALLOW_ASYNC_INIT
com.polidea.rxandroidble2.internal.operations.ScanOperationApi18$1: io.reactivex.ObservableEmitter val$emitter
com.ghostcommv2.BuildConfig: boolean IS_RELEASE
com.facebook.soloader.ApkSoSource: java.lang.String TAG
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber: long serialVersionUID
okhttp3.Response: long receivedResponseAtMillis
okhttp3.CacheControl: int maxStaleSeconds
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_BOOLEAN
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: okio.ByteString $pong$inlined
com.facebook.soloader.SoLoader: int sFlags
okhttp3.internal.connection.RouteSelector$Selection: int nextRouteIndex
com.facebook.react.bridge.JavaOnlyMap: java.util.Map mBackingMap
com.polidea.rxandroidble2.scan.ScanSettings: int CALLBACK_TYPE_FIRST_MATCH
com.facebook.react.animated.NativeAnimatedModule: int mNumNonFabricAnimations
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_FLAG_CONTROL
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData mHybridData
io.reactivex.internal.operators.flowable.FlowableRefCount$RefCountSubscriber: long serialVersionUID
com.polidea.rxandroidble2.scan.ScanSettings$Builder: int mMatchMode
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map mModules
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: long serialVersionUID
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONTENT_APPEARED
com.polidea.rxandroidble2.internal.scan.ScanSetup: com.polidea.rxandroidble2.internal.operations.Operation scanOperation
com.polidea.rxandroidble2.internal.connection.MtuBasedPayloadSizeLimit: int gattWriteMtuOverhead
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentBuilder: com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl deviceComponentImpl
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1: java.lang.String $packageName
com.facebook.soloader.Elf64_Shdr: int sh_size
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer mReactChoreographer
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualCoordinator: long serialVersionUID
okhttp3.internal.concurrent.TaskRunner: java.lang.Runnable runnable
okhttp3.internal.http.DatesKt: long MAX_DATE
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
com.polidea.rxandroidble2.ConnectionSetup: boolean suppressOperationCheck
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: boolean closed
okhttp3.internal.http.DatesKt: okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1 STANDARD_DATE_FORMAT
okhttp3.Dispatcher: java.util.ArrayDeque runningSyncCalls
okhttp3.internal.ws.WebSocketProtocol: int CLOSE_CLIENT_GOING_AWAY
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_RC4_128_SHA
io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber: long serialVersionUID
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$1: com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager this$0
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] mArgumentExtractors
com.polidea.rxandroidble2.exceptions.BleGattOperationType: com.polidea.rxandroidble2.exceptions.BleGattOperationType CHARACTERISTIC_LONG_WRITE
okhttp3.internal.http.DatesKt: java.text.DateFormat[] BROWSER_COMPATIBLE_DATE_FORMATS
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: java.lang.String $name
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date lastModified
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider mtuWatcherProvider
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber$SwitchMapSingleObserver: long serialVersionUID
com.facebook.fbreact.specs.NativeClipboardSpec: java.lang.String NAME
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $streamsToClose$inlined
com.facebook.react.config.ReactFeatureFlags: boolean unstable_useTurboModuleInteropForAllTurboModules
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable$1: com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable this$0
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA256
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: bleshadow.javax.inject.Provider connectionComponentBuilderProvider
okhttp3.CertificatePinner$Pin: java.lang.String pattern
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23_Factory: bleshadow.javax.inject.Provider checkerScanPermissionProvider
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_MD5
okhttp3.internal.concurrent.TaskQueue: java.lang.String name
io.reactivex.internal.operators.flowable.FlowableTimer$TimerSubscriber: long serialVersionUID
com.polidea.rxandroidble2.internal.RxBleDeviceProvider: bleshadow.javax.inject.Provider deviceComponentBuilder
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: long $pingIntervalNanos$inlined
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
com.polidea.rxandroidble2.helpers.ValueInterpreter: int FORMAT_SINT8
com.facebook.soloader.Elf32_Phdr: int p_vaddr
com.facebook.react.config.ReactFeatureFlags: boolean enableTurboModuleStableAPI
okhttp3.Cache$RealCacheRequest: okio.Sink cacheOut
com.facebook.react.bridge.queue.MessageQueueThreadHandler: com.facebook.react.bridge.queue.QueueThreadExceptionHandler mExceptionHandler
okhttp3.Response$Builder: okhttp3.Request request
okhttp3.internal.http2.Settings: int INITIAL_WINDOW_SIZE
okhttp3.OkHttpClient: boolean retryOnConnectionFailure
com.polidea.rxandroidble2.internal.operations.ScanOperationApi21: com.polidea.rxandroidble2.scan.ScanFilter[] scanFilters
com.facebook.soloader.UnpackingSoSource$InputDsoStream: java.io.InputStream content
okhttp3.internal.connection.RealConnectionPool: int maxIdleConnections
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RELOAD
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl$2: com.polidea.rxandroidble2.internal.operations.Operation val$operation
okhttp3.internal.concurrent.TaskRunner: java.util.logging.Logger logger
com.facebook.soloader.UnpackingSoSource: java.lang.String TAG
com.polidea.rxandroidble2.LogConstants: int VERBOSE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer receiveBuffer
com.polidea.rxandroidble2.internal.DeviceModule_ProvideBluetoothDeviceFactory: bleshadow.javax.inject.Provider macAddressProvider
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber: long serialVersionUID
okhttp3.CipherSuite: java.util.Map INSTANCES
com.facebook.react.animated.NativeAnimatedModule: boolean ANIMATED_MODULE_DEBUG
okhttp3.CacheControl: boolean mustRevalidate
okhttp3.Response$Builder: java.lang.String message
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi31_Factory: bleshadow.javax.inject.Provider checkerScanPermissionProvider
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableNotificationValueFactory$InstanceHolder: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableNotificationValueFactory INSTANCE
com.facebook.react.bridge.RuntimeScheduler: com.facebook.jni.HybridData mHybridData
okhttp3.internal.http2.Header: okio.ByteString TARGET_SCHEME
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider provideBluetoothGattProvider
okhttp3.OkHttpClient: okhttp3.EventListener$Factory eventListenerFactory
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback_Factory: bleshadow.javax.inject.Provider callbackSchedulerProvider
okhttp3.internal.ws.RealWebSocket: okhttp3.Request originalRequest
okhttp3.Cookie: java.util.regex.Pattern YEAR_PATTERN
okhttp3.internal.connection.Exchange: okhttp3.EventListener eventListener
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_LONG_KEY
com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl_Factory: bleshadow.javax.inject.Provider internalScanResultCreatorProvider
okhttp3.internal.connection.RealConnection: okhttp3.internal.http2.Http2Connection http2Connection
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation: com.polidea.rxandroidble2.RxBleConnection$WriteOperationAckStrategy writeOperationAckStrategy
com.bleplx.BlePlxModule: com.bleplx.converter.BleErrorToJsObjectConverter errorConverter
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: long serialVersionUID
com.polidea.rxandroidble2.internal.scan.ScanRecordImplNativeWrapper: android.bluetooth.le.ScanRecord nativeScanRecord
io.reactivex.internal.operators.flowable.FlowableUsing$UsingSubscriber: long serialVersionUID
okhttp3.internal.http.RealInterceptorChain: java.util.List interceptors
com.facebook.react.bridge.ReactMarker: java.util.List sListeners
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache: java.util.HashMap cache
com.polidea.rxandroidble2.NotificationSetupMode: com.polidea.rxandroidble2.NotificationSetupMode[] $VALUES
com.polidea.rxandroidble2.internal.operations.DisconnectOperation_Factory: bleshadow.javax.inject.Provider timeoutConfigurationProvider
com.reactnativecommunity.asyncstorage.BuildConfig: boolean IS_NEW_ARCHITECTURE_ENABLED
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_START
com.facebook.soloader.ElfZipFileChannel: long mPos
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter: io.reactivex.Observable firstDisconnectionValueObs
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_BUSY
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.RealCall call
com.facebook.react.fabric.FabricUIManager: long mLayoutTime
com.facebook.soloader.NativeLibrary: boolean mLibrariesLoaded
okhttp3.internal.connection.RealConnection: boolean noNewExchanges
com.facebook.soloader.ApplicationSoSource: int flags
okhttp3.internal.ws.RealWebSocket: okhttp3.Call call
com.facebook.react.runtime.BindingsInstaller: com.facebook.react.runtime.BindingsInstaller$Companion Companion
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModuleRegistry mJSModuleRegistry
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: long serialVersionUID
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: java.lang.String NAME
okhttp3.internal.platform.android.AndroidSocketAdapter: okhttp3.internal.platform.android.AndroidSocketAdapter$Companion Companion
com.facebook.react.bridge.ReactContext: java.lang.String LATE_JS_ACCESS_EXCEPTION_MESSAGE
com.facebook.react.fabric.FabricUIManager: long mFinishTransactionCPPTime
okhttp3.internal.cache.CacheStrategy$Factory: long nowMillis
com.polidea.rxandroidble2.internal.cache.CacheEntry: com.polidea.rxandroidble2.internal.cache.DeviceComponentWeakReference deviceComponentWeakReference
okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String key
okhttp3.internal.publicsuffix.PublicSuffixDatabase: char EXCEPTION_MARKER
okhttp3.Authenticator: okhttp3.Authenticator$Companion Companion
com.polidea.rxandroidble2.NotificationSetupMode: com.polidea.rxandroidble2.NotificationSetupMode COMPAT
com.polidea.rxandroidble2.scan.ScanFilter: android.os.ParcelUuid mServiceUuidMask
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue writerQueue
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$1: com.polidea.rxandroidble2.internal.connection.RxBleGattCallback this$0
io.reactivex.internal.subscriptions.BasicIntQueueSubscription: long serialVersionUID
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl$2: com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl this$0
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider illegalOperationCheckerProvider
com.ghostcommv2.BuildConfig: java.lang.String BUILD_TYPE
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$7: com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator this$0
com.polidea.rxandroidble2.internal.operations.ConnectOperation_Factory: bleshadow.javax.inject.Provider rxBleGattCallbackProvider
okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0
com.facebook.react.modules.network.NetworkingModule: java.lang.String USER_AGENT_HEADER_NAME
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.CookieJarContainer mCookieJarContainer
com.facebook.soloader.FileLocker: java.io.FileOutputStream mLockFileOutputStream
okio.Timeout: okio.Timeout NONE
com.facebook.react.bridge.ReactContext: java.lang.String LATE_NATIVE_MODULE_EXCEPTION_MESSAGE
com.facebook.react.config.ReactFeatureFlags: boolean enableMountHooks
com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState: java.lang.String stateName
com.facebook.react.uimanager.UIConstantsProviderManager: com.facebook.jni.HybridData mHybridData
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1$1: com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1 this$1
okhttp3.internal.connection.RouteSelector: java.util.List proxies
okhttp3.internal.cache.CacheStrategy$Factory: long sentRequestMillis
com.facebook.soloader.NativeLibrary: java.lang.Object mLock
okhttp3.Cookie: boolean httpOnly
okhttp3.HttpUrl$Builder: java.lang.String encodedPassword
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_FILE
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider bindClientOperationQueueProvider
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Array
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl deviceComponentImpl
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.RealConnection connection
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $newPeerSettings$inlined
okhttp3.internal.http2.Http2Connection$Listener: okhttp3.internal.http2.Http2Connection$Listener REFUSE_INCOMING_STREAMS
io.reactivex.internal.subscribers.BlockingSubscriber: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver$OtherObserver: long serialVersionUID
com.himelbrand.ble.peripheral.RNBLEModule: android.content.Context context
com.facebook.react.turbomodule.core.TurboModuleManager: boolean mModuleCleanupStarted
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mUIQueueThread
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSink sink
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$Output servicesDiscoveredOutput
com.polidea.rxandroidble2.internal.operations.ConnectOperation_Factory: bleshadow.javax.inject.Provider connectionCompatProvider
com.polidea.rxandroidble2.internal.util.CheckerConnectPermission_Factory: bleshadow.javax.inject.Provider checkerPermissionProvider
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.cache.DiskLruCache$Entry: java.util.List dirtyFiles
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA256
com.facebook.react.bridge.NativeArray: com.facebook.jni.HybridData mHybridData
okhttp3.internal.http.ExchangeCodec: int DISCARD_STREAM_TIMEOUT_MILLIS
com.polidea.rxandroidble2.internal.operations.ConnectOperation: com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration connectTimeout
com.polidea.rxandroidble2.scan.ScanFilter: com.polidea.rxandroidble2.scan.ScanFilter EMPTY
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String REACT_CLASS
com.polidea.rxandroidble2.internal.scan.ScanRecordImplCompat: android.util.SparseArray manufacturerSpecificData
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi24_Factory: bleshadow.javax.inject.Provider timeSchedulerProvider
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter_Factory: bleshadow.javax.inject.Provider adapterWrapperProvider
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: java.lang.String NAME
okhttp3.internal.http.StatusLine: int HTTP_PERM_REDIRECT
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$1: long val$timeout
com.polidea.rxandroidble2.BuildConfig: boolean DEBUG
com.facebook.soloader.ExtractFromZipSoSource: java.lang.String mZipSearchPattern
okhttp3.internal.concurrent.TaskRunner$runnable$1: okhttp3.internal.concurrent.TaskRunner this$0
io.reactivex.internal.operators.observable.ObservableRepeat$RepeatObserver: long serialVersionUID
com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState: java.lang.String description
com.facebook.soloader.Elf64_Phdr: int p_paddr
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: int $payload2$inlined
okhttp3.internal.connection.Exchange$RequestBodySink: long bytesReceived
okhttp3.internal.connection.RouteSelector$Selection: java.util.List routes
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Map
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: okhttp3.internal.http2.Settings $settings$inlined
com.polidea.rxandroidble2.RxBleClient$State: com.polidea.rxandroidble2.RxBleClient$State LOCATION_SERVICES_NOT_ENABLED
com.polidea.rxandroidble2.helpers.ByteArrayBatchObservable: int maxBatchSize
com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState: com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState CONNECTED
okhttp3.internal.http2.Header: okio.ByteString RESPONSE_STATUS
com.facebook.react.modules.deviceinfo.DeviceInfoModule: float mFontScale
okhttp3.internal.ws.WebSocketExtensions: okhttp3.internal.ws.WebSocketExtensions$Companion Companion
com.polidea.rxandroidble2.internal.scan.ScanRecordImplCompat: int txPowerLevel
com.facebook.react.bridge.ReactMarkerConstants: boolean mHasMatchingNameMarker
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider rxBleDeviceProvider
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings peerSettings
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Listener listener
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_RSV1
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor next
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256
com.polidea.rxandroidble2.ClientComponent$NamedSchedulers: java.lang.String COMPUTATION
com.facebook.soloader.SoLoader: int SOLOADER_DISABLE_BACKUP_SOSOURCE
com.polidea.rxandroidble2.LogOptions: java.lang.Boolean shouldLogAttributeValues
okhttp3.OkHttpClient$Builder: int connectTimeout
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: okhttp3.internal.http1.Http1ExchangeCodec this$0
io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription: long serialVersionUID
okhttp3.Cache: int ENTRY_COUNT
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: int SLEEP_TIME_MS
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: boolean closed
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver$InnerObserver: long serialVersionUID
okhttp3.internal.http2.Http2Connection: java.util.Map streams
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: java.lang.String $name
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: long serialVersionUID
com.polidea.rxandroidble2.LogOptions$Builder: java.lang.Integer macAddressLogSetting
okhttp3.Protocol: okhttp3.Protocol HTTP_2
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String REACT_CLASS
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_NULL_SHA
okhttp3.MediaType: java.lang.String type
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi21: com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator internalScanResultCreator
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: long bytesRemainingInChunk
com.polidea.rxandroidble2.internal.operations.LegacyScanOperation: java.util.Set filterUuids
okhttp3.internal.http2.Hpack$Reader: okhttp3.internal.http2.Header[] dynamicTable
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl_Factory: bleshadow.javax.inject.Provider rxBleGattCallbackProvider
com.polidea.rxandroidble2.exceptions.BleScanException: int reason
okhttp3.internal.ws.WebSocketWriter: byte[] maskKey
okhttp3.internal.http2.Http2Stream$FramingSource: long maxByteCount
io.reactivex.internal.operators.single.SingleFlatMapMaybe$FlatMapSingleObserver: long serialVersionUID
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder mJavaScriptContextHolder
com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl: com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper rxBleAdapterWrapper
com.polidea.rxandroidble2.LogOptions$Builder: java.lang.Boolean shouldLogScannedPeripherals
com.polidea.rxandroidble2.ConnectionSetup$Builder: boolean autoConnect
com.facebook.soloader.SoSource: int LOAD_RESULT_NOT_FOUND
okhttp3.CipherSuite: java.lang.String javaName
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_START
com.polidea.rxandroidble2.scan.ScanFilter: java.lang.String mDeviceAddress
com.facebook.soloader.Elf64_Shdr: int sh_offset
okhttp3.internal.Util: okio.Options UNICODE_BOMS
com.polidea.rxandroidble2.internal.operations.ScanOperationApi18$1: com.polidea.rxandroidble2.internal.operations.ScanOperationApi18 this$0
com.facebook.soloader.NativeDeps: boolean sUseDepsFileAsync
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver: long serialVersionUID
com.polidea.rxandroidble2.scan.ScanCallbackType: com.polidea.rxandroidble2.scan.ScanCallbackType[] $VALUES
io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator: long serialVersionUID
com.facebook.react.bridge.ReadableNativeMap$1: int currentIndex
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi23_Factory: bleshadow.javax.inject.Provider rxBleAdapterWrapperProvider
okhttp3.TlsVersion: java.lang.String javaName
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskRunner taskRunner
com.facebook.react.uimanager.ViewManager: java.util.HashMap mRecyclableViews
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl: io.reactivex.observers.DisposableObserver disconnectionThrowableSubscription
okhttp3.internal.http2.Huffman: int[] CODES
okhttp3.internal.ws.WebSocketReader: okio.Buffer$UnsafeCursor maskCursor
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part$Companion Companion
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider operationTimeoutProvider
io.reactivex.internal.observers.InnerQueuedObserver: long serialVersionUID
okhttp3.internal.connection.RealConnection: int allocationLimit
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvidesOperationTimeoutConfFactory: bleshadow.javax.inject.Provider operationTimeoutProvider
okhttp3.internal.concurrent.Task: okhttp3.internal.concurrent.TaskQueue queue
okhttp3.internal.http2.Hpack$Writer: boolean emitDynamicTableSizeUpdate
com.facebook.react.uimanager.UIManagerModule: java.util.List mListeners
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec CLEARTEXT
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_ATTRIBUTED_STRING
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider loggingIllegalOperationHandlerProvider
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$LongRef $delta$inlined
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5: com.polidea.rxandroidble2.RxBleConnection$WriteOperationAckStrategy val$writeOperationAckStrategy
com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker$1: android.bluetooth.BluetoothGattCharacteristic val$characteristic
okhttp3.FormBody$Builder: java.nio.charset.Charset charset
io.reactivex.internal.operators.flowable.FlowableAll$AllSubscriber: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver: long serialVersionUID
com.polidea.rxandroidble2.RxBleClientImpl_Factory: bleshadow.javax.inject.Provider backgroundScannerProvider
com.polidea.rxandroidble2.scan.ScanCallbackType: com.polidea.rxandroidble2.scan.ScanCallbackType CALLBACK_TYPE_BATCH
okhttp3.internal.cache.DiskLruCache: boolean closed
com.polidea.rxandroidble2.LogOptions: java.lang.Boolean shouldLogScannedPeripherals
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$cachedFileLocation
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideRecommendedScanRuntimePermissionNamesFactory: bleshadow.javax.inject.Provider isNearbyServicesNeverForLocationProvider
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: java.lang.String macAddress
okhttp3.internal.cache.DiskLruCache$cleanupTask$1: okhttp3.internal.cache.DiskLruCache this$0
com.polidea.rxandroidble2.internal.util.CharacteristicPropertiesParser: int propertyIndicate
com.polidea.rxandroidble2.internal.util.ScanRecordParser: int DATA_TYPE_SERVICE_UUIDS_16_BIT_COMPLETE
io.reactivex.internal.schedulers.AbstractDirectTask: long serialVersionUID
com.facebook.jni.DestructorThread: java.lang.Thread sThread
com.polidea.rxandroidble2.internal.connection.ConnectorImpl_Factory: bleshadow.javax.inject.Provider clientOperationQueueProvider
com.facebook.react.bridge.ReadableNativeMap$1$1: com.facebook.react.bridge.ReadableNativeMap$1 this$1
okhttp3.internal.connection.Exchange$ResponseBodySource: boolean completed
com.polidea.rxandroidble2.scan.ScanCallbackType: com.polidea.rxandroidble2.scan.ScanCallbackType CALLBACK_TYPE_ALL_MATCHES
com.polidea.rxandroidble2.internal.logger.LoggerUtil$AttributeLogWrapper: byte[] value
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory_Factory: bleshadow.javax.inject.Provider contextProvider
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_PARAGRAPH_ATTRIBUTES
com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation_Factory: bleshadow.javax.inject.Provider successTimeoutConfigurationProvider
com.facebook.soloader.SysUtil: long APK_DEP_BLOCK_METADATA_LENGTH
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Class[] mParameterTypes
com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState: boolean isUsable
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_END
okhttp3.internal.http2.Http2: int FLAG_END_STREAM
com.himelbrand.ble.peripheral.RNBLEModule: android.bluetooth.le.BluetoothLeAdvertiser advertiser
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$10: java.util.UUID val$serviceUuid
com.facebook.soloader.NativeDeps: int INITIAL_HASH
com.facebook.react.uimanager.events.ReactEventEmitter: java.lang.String TAG
com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker: com.polidea.rxandroidble2.internal.connection.IllegalOperationHandler resultHandler
com.polidea.rxandroidble2.exceptions.BleGattCharacteristicException: android.bluetooth.BluetoothGattCharacteristic characteristic
okhttp3.internal.ws.RealWebSocket: java.util.ArrayDeque pongQueue
com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState: com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState STATE_OFF
com.polidea.rxandroidble2.RxBleClient$State: com.polidea.rxandroidble2.RxBleClient$State LOCATION_PERMISSION_NOT_GRANTED
okhttp3.MultipartBody: byte[] COLONSPACE
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentBuilder: com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl clientComponentImpl
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferSkipSubscriber: long serialVersionUID
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE_BACKUP
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long wallTime
okhttp3.Handshake: okhttp3.TlsVersion tlsVersion
com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry: long seqNum
com.facebook.react.bridge.RuntimeExecutor: com.facebook.jni.HybridData mHybridData
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver: long serialVersionUID
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider locationServicesStatusApi23Provider
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$sourceURL
com.facebook.react.modules.share.ShareModule: java.lang.String ACTION_SHARED
okhttp3.Cookie: java.lang.String path
okhttp3.OkHttpClient: int readTimeoutMillis
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer: long serialVersionUID
okhttp3.internal.http2.Http2: int FLAG_END_PUSH_PROMISE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA
okhttp3.internal.http1.HeadersReader: int HEADER_LIMIT
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_START
com.polidea.rxandroidble2.scan.ScanResult: int rssi
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: com.facebook.react.bridge.ReactContext this$0
com.polidea.rxandroidble2.exceptions.BleScanException: int SCAN_FAILED_ALREADY_STARTED
com.polidea.rxandroidble2.RxBleClientImpl_Factory: bleshadow.javax.inject.Provider rxBleAdapterWrapperProvider
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.http.RealInterceptorChain chain
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RouteSelector$Selection routeSelection
com.facebook.react.modules.fresco.FrescoModule: boolean sHasBeenInitialized
com.polidea.rxandroidble2.exceptions.BleCannotSetCharacteristicNotificationException: int CANNOT_FIND_CLIENT_CHARACTERISTIC_CONFIG_DESCRIPTOR
com.facebook.soloader.Elf64_Shdr: int sh_flags
okhttp3.internal.http2.Hpack$Writer: int maxDynamicTableByteCount
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
okhttp3.OkHttpClient$Builder: int writeTimeout
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
com.polidea.rxandroidble2.internal.util.ClientStateObservable_Factory: bleshadow.javax.inject.Provider locationServicesStatusProvider
okhttp3.internal.cache.FaultHidingSink: boolean hasErrors
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider provideScanPreconditionVerifierProvider
com.facebook.react.ReactNativeHost: android.app.Application mApplication
com.facebook.react.animated.NativeAnimatedModule: int mNumFabricAnimations
com.facebook.fbreact.specs.NativeRedBoxSpec: java.lang.String NAME
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: int $streamId$inlined
okhttp3.internal.cache2.Relay: okio.ByteString PREFIX_CLEAN
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
com.polidea.rxandroidble2.scan.ScanSettings: int mMatchMode
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$5: byte[] val$data
okhttp3.internal.cache.DiskLruCache: long ANY_SEQUENCE_NUMBER
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long mStackSize
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_START
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable: android.bluetooth.BluetoothGatt bluetoothGatt
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA
okhttp3.ResponseBody$BomAwareReader: java.nio.charset.Charset charset
okhttp3.HttpUrl: java.lang.String PATH_SEGMENT_ENCODE_SET_URI
com.facebook.soloader.Elf32_Shdr: int sh_link
okhttp3.internal.http2.Header: okio.ByteString name
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: java.util.List protocols
com.facebook.react.bridge.DynamicFromMap: java.lang.String mName
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider checkerConnectPermissionProvider
com.polidea.rxandroidble2.RxBleClientImpl_Factory: bleshadow.javax.inject.Provider rxBleDeviceProvider
com.polidea.rxandroidble2.helpers.ValueInterpreter: int FORMAT_UINT16
com.polidea.rxandroidble2.RxBleAdapterStateObservable$1$2: android.content.BroadcastReceiver val$receiver
com.polidea.rxandroidble2.internal.serialization.OperationPriorityFifoBlockingQueue: java.util.concurrent.PriorityBlockingQueue q
com.facebook.react.views.view.ReactViewManager: int[] SPACING_TYPES
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.uimanager.GuardedFrameCallback mAnimatedFrameCallback
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_FALLBACK_SCSV
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String TE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
kotlin.coroutines.CombinedContext$Serialized: long serialVersionUID
okhttp3.internal.http2.Http2Stream$FramingSource: boolean closed
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideRecommendedScanRuntimePermissionNamesFactory: bleshadow.javax.inject.Provider deviceSdkProvider
com.polidea.rxandroidble2.internal.RxBleDeviceImpl_Factory: bleshadow.javax.inject.Provider bluetoothDeviceProvider
okhttp3.internal.concurrent.Task: boolean cancelable
io.reactivex.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableRetryPredicate$RepeatObserver: long serialVersionUID
com.polidea.rxandroidble2.exceptions.BleGattOperationType: com.polidea.rxandroidble2.exceptions.BleGattOperationType CONNECTION_PRIORITY_CHANGE
com.polidea.rxandroidble2.ClientComponent$BluetoothConstants: java.lang.String DISABLE_NOTIFICATION_VALUE
com.reactnativecommunity.asyncstorage.AsyncStorageModule$4: com.reactnativecommunity.asyncstorage.AsyncStorageModule this$0
io.reactivex.internal.operators.single.SingleCreate$Emitter: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: long serialVersionUID
com.facebook.soloader.SoLoader: com.facebook.soloader.ApplicationSoSource sApplicationSoSource
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry mTurboModuleRegistry
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$cachedFileLocation
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA OTHERS
okhttp3.internal.http2.Http2Stream: long readBytesTotal
com.facebook.react.bridge.ReactContext$2: int[] $SwitchMap$com$facebook$react$common$LifecycleState
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA
io.reactivex.internal.observers.DeferredScalarDisposable: long serialVersionUID
okhttp3.Response: java.lang.String message
okhttp3.internal.connection.RealCall$AsyncCall: okhttp3.internal.connection.RealCall this$0
okhttp3.HttpUrl: okhttp3.HttpUrl$Companion Companion
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.MultipartBody$Builder: okhttp3.MediaType type
com.reactnativecommunity.asyncstorage.AsyncStorageModule$3: com.facebook.react.bridge.Callback val$callback
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
com.facebook.react.modules.core.TimingModule: com.facebook.react.modules.core.JavaTimerManager mJavaTimerManager
com.facebook.soloader.SoLoader: int SOLOADER_LOOK_IN_ZIP
com.polidea.rxandroidble2.internal.util.BluetoothManagerWrapper: android.bluetooth.BluetoothManager bluetoothManager
okhttp3.Headers: okhttp3.Headers$Companion Companion
com.facebook.react.bridge.ReadableNativeMap$1$1: int val$index
io.reactivex.internal.operators.observable.BlockingObservableIterable$BlockingObservableIterator: long serialVersionUID
com.facebook.soloader.SoSource: int LOAD_RESULT_CORRUPTED_LIB_FILE
okhttp3.internal.http2.Http2Connection: java.net.Socket socket
com.polidea.rxandroidble2.internal.util.ScanRecordParser: int DATA_TYPE_SERVICE_DATA_16_BIT
com.polidea.rxandroidble2.ClientComponent$ClientModule$1: io.reactivex.Scheduler val$callbacksScheduler
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
okhttp3.Cache$Entry: java.lang.String message
okhttp3.internal.http2.Http2Stream$FramingSink: boolean closed
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: okhttp3.HttpUrl $url
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_EXPANDED
okhttp3.internal.connection.RealConnectionPool: long keepAliveDurationNs
okhttp3.internal.ws.WebSocketWriter: boolean perMessageDeflate
com.polidea.rxandroidble2.internal.connection.DisconnectAction_Factory: bleshadow.javax.inject.Provider operationDisconnectProvider
okhttp3.Headers$Builder: java.util.List namesAndValues
io.reactivex.internal.queue.SpscArrayQueue: long serialVersionUID
okhttp3.HttpUrl: char[] HEX_DIGITS
okhttp3.internal.cache.DiskLruCache$Entry: boolean zombie
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int CLOSE_DRAWER
com.polidea.rxandroidble2.internal.operations.ConnectOperation_Factory: bleshadow.javax.inject.Provider autoConnectProvider
com.polidea.rxandroidble2.internal.operations.ConnectOperation_Factory: bleshadow.javax.inject.Provider bluetoothGattProvider
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
com.polidea.rxandroidble2.RxBleClientImpl: java.lang.String TAG
com.polidea.rxandroidble2.ClientComponent$NamedExecutors: java.lang.String BLUETOOTH_INTERACTION
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.PushObserver pushObserver
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableConcatWithCompletable$ConcatWithObserver: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableAmb$AmbInnerObserver: long serialVersionUID
okhttp3.internal.platform.Platform: int INFO
com.polidea.rxandroidble2.internal.operations.MtuRequestOperation_Factory: bleshadow.javax.inject.Provider bluetoothGattProvider
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.CopyOnWriteArrayList mBridgeIdleListeners
okhttp3.internal.http2.Http2Reader: okhttp3.internal.http2.Hpack$Reader hpackReader
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType TurboModuleManager
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: boolean $cancelable
okhttp3.Address: java.util.List protocols
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.config.ReactFeatureFlags: boolean reduceDeleteCreateMutation
com.polidea.rxandroidble2.internal.Priority: com.polidea.rxandroidble2.internal.Priority LOW
okhttp3.internal.cache.DiskLruCache: java.lang.String VERSION_1
okhttp3.internal.http2.Http2: int TYPE_PRIORITY
com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter_Factory: bleshadow.javax.inject.Provider deviceSdkProvider
com.polidea.rxandroidble2.internal.connection.ConnectionModule: java.lang.String OPERATION_TIMEOUT
okhttp3.internal.ws.RealWebSocket: long DEFAULT_MINIMUM_DEFLATE_SIZE
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi21: com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper rxBleAdapterWrapper
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$1: com.polidea.rxandroidble2.internal.serialization.QueueReleaseInterface val$queueReleaseInterface
okhttp3.internal.http2.Http2Connection: long awaitPongsReceived
okhttp3.internal.ws.WebSocketExtensions: java.lang.Integer serverMaxWindowBits
com.bleplx.adapter.BleModule: android.bluetooth.BluetoothAdapter bluetoothAdapter
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedNoLast: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver$InnerRepeatObserver: long serialVersionUID
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDeviceSdkFactory$InstanceHolder: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDeviceSdkFactory INSTANCE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
com.polidea.rxandroidble2.internal.operations.ConnectOperation_Factory: bleshadow.javax.inject.Provider bluetoothDeviceProvider
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalTypeMap
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl: com.polidea.rxandroidble2.RxBleConnection rxBleConnection
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: com.polidea.rxandroidble2.internal.connection.RxBleGattCallback gattCallback
okhttp3.MultipartBody: byte[] CRLF
okhttp3.internal.ws.WebSocketWriter: okio.BufferedSink sink
com.polidea.rxandroidble2.RxBleDeviceServices$3: com.polidea.rxandroidble2.RxBleDeviceServices this$0
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: long serialVersionUID
com.facebook.react.modules.dialog.DialogModule: java.lang.String FRAGMENT_TAG
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String REACT_CLASS
okhttp3.internal.http.ExchangeCodec$Companion: int DISCARD_STREAM_TIMEOUT_MILLIS
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver: long serialVersionUID
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$proxySourceURL
okhttp3.ResponseBody$Companion$asResponseBody$1: long $contentLength
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mWebSocketConnections
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String name
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23_Factory: bleshadow.javax.inject.Provider deviceSdkProvider
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String mDeviceName
com.facebook.soloader.DirectApkSoSource: java.util.Set mDirectApkLdPaths
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String CONNECTION
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnection connectionToCancel
okhttp3.internal.ws.MessageInflater: boolean noContextTakeover
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$Output: com.jakewharton.rxrelay2.PublishRelay errorRelay
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$3: io.reactivex.ObservableTransformer val$compose
com.facebook.react.bridge.ModuleHolder: java.util.concurrent.atomic.AtomicInteger sInstanceKeyCounter
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$2$1: com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$2 this$1
com.facebook.soloader.Elf32_Shdr: int sh_offset
com.facebook.soloader.UnpackingSoSource: java.lang.String LOCK_FILE_NAME
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue mPreOperations
okhttp3.internal.http.RealInterceptorChain: int index
com.facebook.soloader.Elf32_Dyn: int d_un
com.facebook.soloader.Elf32_Ehdr: int e_phoff
okhttp3.internal.tls.BasicCertificateChainCleaner: int MAX_SIGNERS
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber: long serialVersionUID
com.facebook.fbreact.specs.NativeLinkingManagerSpec: java.lang.String NAME
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver: long serialVersionUID
okhttp3.Cache$RealCacheRequest: okhttp3.internal.cache.DiskLruCache$Editor editor
okhttp3.Handshake: okhttp3.Handshake$Companion Companion
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$7: com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager this$0
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi21: com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator scanSettingsEmulator
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl_Factory: bleshadow.javax.inject.Provider operationQueueProvider
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout readTimeout
okhttp3.Response: okhttp3.ResponseBody body
com.facebook.react.bridge.ReactCxxErrorHandler: java.lang.reflect.Method mHandleErrorFunc
okio.AsyncTimeout: long timeoutAt
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: int $byteCount$inlined
com.polidea.rxandroidble2.ClientComponent$NamedBooleanObservables: java.lang.String LOCATION_SERVICES_OK
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: okhttp3.internal.http2.ErrorCode $errorCode$inlined
com.facebook.soloader.ExtractFromZipSoSource$ZipDso: java.util.zip.ZipEntry backingEntry
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider provideIsNearbyPermissionNeverForLocationProvider
okhttp3.OkHttpClient$Builder: okhttp3.CertificatePinner certificatePinner
okhttp3.OkHttpClient$Builder: java.util.List interceptors
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl_Factory: bleshadow.javax.inject.Provider deviceMacAddressProvider
okhttp3.MultipartBody: okhttp3.MediaType ALTERNATIVE
com.facebook.soloader.SoLoader: java.lang.String SO_STORE_NAME_SPLIT
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: com.jakewharton.rxrelay2.PublishRelay connectionStatePublishRelay
com.reactnativecommunity.asyncstorage.AsyncStorageModule$1: com.reactnativecommunity.asyncstorage.AsyncStorageModule this$0
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$UriHandler mNetworkingUriHandler
okhttp3.internal.platform.android.CloseGuard: java.lang.reflect.Method openMethod
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager notificationIndicationManager
com.polidea.rxandroidble2.internal.util.ByteAssociation: java.lang.Object first
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadHandler mHandler
okhttp3.OkHttpClient$Builder: okhttp3.Dispatcher dispatcher
com.facebook.soloader.Elf64_Ehdr: int e_phoff
okhttp3.ConnectionSpec: okhttp3.CipherSuite[] RESTRICTED_CIPHER_SUITES
com.facebook.react.bridge.ModuleHolder: javax.inject.Provider mProvider
okhttp3.internal.concurrent.TaskRunner: java.util.List busyQueues
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode ENHANCE_YOUR_CALM
okhttp3.internal.Util: okhttp3.ResponseBody EMPTY_RESPONSE
com.polidea.rxandroidble2.internal.operations.ConnectOperation$1: com.polidea.rxandroidble2.internal.serialization.QueueReleaseInterface val$queueReleaseInterface
okhttp3.internal.Util$threadFactory$1: java.lang.String $name
com.polidea.rxandroidble2.internal.operations.DisconnectOperation_Factory: bleshadow.javax.inject.Provider macAddressProvider
okhttp3.internal.ws.MessageInflater: okio.Buffer deflatedBytes
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_MOST_RECENT_EVENT_COUNT
okhttp3.OkHttpClient$Builder: int readTimeout
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: android.bluetooth.BluetoothGatt bluetoothGatt
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTINUATION
com.facebook.react.bridge.ReactCxxErrorHandler: java.lang.Object mObject
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode STREAM_CLOSED
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_DISMISSED
okhttp3.internal.connection.RouteSelector: okhttp3.Call call
okhttp3.internal.connection.RealCall: boolean timeoutEarlyExit
com.facebook.soloader.SoLoader$1: java.lang.Runtime val$runtime
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.concurrent.TaskQueue taskQueue
okhttp3.internal.connection.RealConnectionPool: okhttp3.internal.connection.RealConnectionPool$cleanupTask$1 cleanupTask
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.DynamicFromMap: java.lang.ThreadLocal sPool
okhttp3.internal.http2.Http2Connection: long intervalPongsReceived
com.polidea.rxandroidble2.exceptions.BleScanException: int SCAN_FAILED_APPLICATION_REGISTRATION_FAILED
com.facebook.soloader.ApkSoSource: int mFlags
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$5: com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl this$0
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi26_Factory$InstanceHolder: com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi26_Factory INSTANCE
com.polidea.rxandroidble2.internal.util.ClientStateObservable$3$1: com.polidea.rxandroidble2.internal.util.ClientStateObservable$3 this$0
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi23: com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter androidScanObjectsConverter
okhttp3.HttpUrl: java.lang.String QUERY_ENCODE_SET
okhttp3.CacheControl: boolean noTransform
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$9: com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl this$0
com.facebook.soloader.UnpackingSoSource$1: java.io.File val$depsFileName
com.polidea.rxandroidble2.ConnectionSetup: com.polidea.rxandroidble2.Timeout operationTimeout
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMERIC
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: boolean $cancelable
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String mName
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator: io.reactivex.ObservableTransformer emulateFirstMatchAndMatchLost
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver$TimeoutFallbackObserver: long serialVersionUID
okhttp3.internal.io.FileSystem: okhttp3.internal.io.FileSystem$Companion Companion
com.polidea.rxandroidble2.LogConstants: int DEBUG
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
okhttp3.internal.http2.Http2Stream: int id
com.polidea.rxandroidble2.exceptions.BleScanException: int LOCATION_PERMISSION_MISSING
com.polidea.rxandroidble2.utils.StandardUUIDsParser: java.util.Map DESCRIPTOR_UUIDS
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: java.util.zip.ZipFile mZipFile
okhttp3.Cookie: boolean persistent
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl_Factory: bleshadow.javax.inject.Provider bluetoothGattProvider
okhttp3.internal.cache2.Relay: java.lang.Thread upstreamReader
com.reactnativecommunity.asyncstorage.AsyncStorageModule$1: com.facebook.react.bridge.ReadableArray val$keys
okhttp3.MultipartBody: okhttp3.MediaType DIGEST
com.facebook.react.modules.fresco.FrescoModule: java.lang.String NAME
okhttp3.internal.http2.Http2Stream: java.util.ArrayDeque headersQueue
io.reactivex.internal.observers.ForEachWhileObserver: long serialVersionUID
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_END
androidx.appcompat.app.AppCompatActivity: android.content.res.Resources mResources
com.facebook.fbreact.specs.NativeLogBoxSpec: java.lang.String NAME
okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache this$0
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber$ConcatMapSingleObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestInnerSubscriber: long serialVersionUID
okhttp3.internal.http2.Hpack: int SETTINGS_HEADER_TABLE_SIZE
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CANCEL
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
com.facebook.react.bridge.PromiseImpl: int ERROR_STACK_FRAME_LIMIT
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_START
com.facebook.soloader.NativeDeps: int LIB_PREFIX_SUFFIX_LEN
com.reactnativecommunity.asyncstorage.AsyncStorageModule$6: com.reactnativecommunity.asyncstorage.AsyncStorageModule this$0
okhttp3.internal.http2.Http2Connection: long degradedPongDeadlineNs
io.reactivex.internal.subscriptions.BasicQueueSubscription: long serialVersionUID
com.polidea.rxandroidble2.internal.operations.ScanOperationApi21$1: com.polidea.rxandroidble2.internal.operations.ScanOperationApi21 this$0
okhttp3.HttpUrl: int port
okhttp3.ConnectionSpec$Builder: java.lang.String[] tlsVersions
com.polidea.rxandroidble2.ClientComponent$NamedSchedulers: java.lang.String BLUETOOTH_CALLBACKS
okhttp3.internal.http2.Settings: int MAX_FRAME_SIZE
com.polidea.rxandroidble2.internal.operations.ReadRssiOperation_Factory: bleshadow.javax.inject.Provider bluetoothGattProvider
com.polidea.rxandroidble2.internal.connection.MtuBasedPayloadSizeLimit: com.polidea.rxandroidble2.RxBleConnection rxBleConnection
okhttp3.internal.platform.android.DeferredSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory socketAdapterFactory
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: okhttp3.internal.connection.Exchange $exchange
com.facebook.soloader.MinElf: java.lang.String TAG
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider deviceComponentBuilderProvider
com.reactnativecommunity.asyncstorage.BuildConfig: boolean DEBUG
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_RC4_128_MD5
com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl_Factory: bleshadow.javax.inject.Provider rxBleAdapterWrapperProvider
com.facebook.react.modules.appearance.AppearanceModule: com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme mOverrideColorScheme
com.polidea.rxandroidble2.scan.IsConnectable: com.polidea.rxandroidble2.scan.IsConnectable[] $VALUES
com.facebook.react.bridge.CatalystInstanceImpl: boolean mJSBundleHasLoaded
okhttp3.internal.http2.Huffman: byte[] CODE_BIT_COUNTS
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedNoLast: long serialVersionUID
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver: long serialVersionUID
okhttp3.OkHttpClient: long minWebSocketMessageToCompress
io.reactivex.internal.operators.flowable.FlowableRangeLong$RangeConditionalSubscription: long serialVersionUID
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.Stack mLoaders
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: android.bluetooth.BluetoothGattCallback bluetoothGattCallback
okhttp3.OkHttpClient: java.util.List interceptors
com.facebook.react.defaults.DefaultComponentsRegistry: com.facebook.jni.HybridData hybridData
com.polidea.rxandroidble2.internal.util.BluetoothManagerWrapper_Factory: bleshadow.javax.inject.Provider bluetoothManagerProvider
okhttp3.Request: okhttp3.Headers headers
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory: java.lang.String mName
okhttp3.Cookie: java.lang.String name
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Object mCallerContext
com.facebook.react.config.ReactFeatureFlags: boolean enableBridgelessArchitectureSoftExceptions
okhttp3.internal.connection.RealConnection$connectTls$1: okhttp3.Address $address
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationServicesStatusFactory: bleshadow.javax.inject.Provider locationServicesStatusApi23Provider
okhttp3.internal.platform.OpenJSSEPlatform: java.security.Provider provider
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationServicesStatusFactory: bleshadow.javax.inject.Provider locationServicesStatusApi18Provider
com.polidea.rxandroidble2.utils.ConnectionSharingAdapter: java.util.concurrent.atomic.AtomicReference connectionObservable
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSource source
com.facebook.fbreact.specs.NativeBugReportingSpec: java.lang.String NAME
okhttp3.internal.cache.DiskLruCache$Entry: java.lang.String key
okhttp3.internal.ws.RealWebSocket$connect$1: okhttp3.internal.ws.RealWebSocket this$0
okhttp3.internal.ws.MessageDeflater: boolean noContextTakeover
okhttp3.internal.http1.Http1ExchangeCodec: long NO_CHUNK_YET
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate mDelegate
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mActivityEventListeners
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1: okhttp3.internal.cache.DiskLruCache this$0
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mContentHandlers
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarker: java.util.List sFabricMarkerListeners
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_END
com.polidea.rxandroidble2.internal.operations.ConnectOperation: com.polidea.rxandroidble2.internal.connection.RxBleGattCallback rxBleGattCallback
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsNearbyPermissionNeverForLocationFactory: bleshadow.javax.inject.Provider contextProvider
com.facebook.soloader.Elf64_Phdr: int p_filesz
com.polidea.rxandroidble2.internal.util.ByteAssociation: byte[] second
okhttp3.OkHttpClient: java.util.List connectionSpecs
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_CLASS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_START
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.concurrent.CountDownLatch readCompleteLatch
okhttp3.internal.Util: boolean assertionsEnabled
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory: android.content.Context context
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.TurboModuleManager$ModuleProvider mLegacyModuleProvider
okhttp3.internal.http2.Hpack$Writer: int smallestHeaderTableSizeSetting
com.facebook.react.bridge.ModuleSpec: java.lang.String TAG
okhttp3.internal.http2.Header: okio.ByteString PSEUDO_PREFIX
com.polidea.rxandroidble2.internal.SingleResponseOperation: com.polidea.rxandroidble2.exceptions.BleGattOperationType operationType
com.facebook.react.devsupport.JSCHeapCapture: com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback mCaptureInProgress
okhttp3.internal.concurrent.TaskQueue: boolean shutdown
okhttp3.MultipartBody: okio.ByteString boundaryByteString
okhttp3.internal.connection.RealCall$CallReference: java.lang.Object callStackTrace
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener FABRIC_PERF_LOGGER
okhttp3.Cache: int ENTRY_METADATA
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_IDLE
com.polidea.rxandroidble2.ConnectionSetup$Builder: com.polidea.rxandroidble2.Timeout operationTimeout
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactAccessibilityServiceChangeListener mAccessibilityServiceChangeListener
com.reactnativecommunity.asyncstorage.SerialExecutor: java.util.concurrent.Executor executor
com.polidea.rxandroidble2.LogOptions$Builder: java.lang.Integer uuidsLogSetting
okhttp3.internal.http2.Http2: int FLAG_PRIORITY
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: long serialVersionUID
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
com.facebook.fbreact.specs.NativeAlertManagerSpec: java.lang.String NAME
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferCloseObserver: long serialVersionUID
com.polidea.rxandroidble2.internal.operations.ScanOperationApi21: com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter androidScanObjectsConverter
com.polidea.rxandroidble2.internal.RxBleLog: com.polidea.rxandroidble2.LogOptions$Logger LOGCAT_LOGGER
io.reactivex.disposables.RunnableDisposable: long serialVersionUID
com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl: com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter scanObjectsConverter
com.polidea.rxandroidble2.scan.ScanSettings: long mReportDelayMillis
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
okhttp3.internal.ws.WebSocketExtensions: java.lang.Integer clientMaxWindowBits
com.facebook.soloader.Elf64_Ehdr: int e_type
okhttp3.internal.ws.WebSocketExtensions: java.lang.String HEADER_WEB_SOCKET_EXTENSION
com.polidea.rxandroidble2.internal.operations.ScanOperationApi18: com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator scanResultCreator
okhttp3.MultipartReader: int partCount
okhttp3.internal.http2.StreamResetException: okhttp3.internal.http2.ErrorCode errorCode
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketWriter writer
okhttp3.CertificatePinner$check$1: java.lang.String $hostname
com.polidea.rxandroidble2.internal.BleIllegalOperationException: int supportedProperties
com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter: int deviceSdk
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider mtuBasedPayloadSizeLimitProvider
okhttp3.internal.platform.android.CloseGuard: java.lang.reflect.Method getMethod
com.polidea.rxandroidble2.exceptions.BleGattException: com.polidea.rxandroidble2.exceptions.BleGattOperationType bleGattOperationType
okhttp3.internal.http2.Header: okio.ByteString value
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.JavaOnlyMap$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.polidea.rxandroidble2.internal.cache.CacheEntry: java.lang.String string
okhttp3.internal.http2.Hpack$Reader: int headerCount
okhttp3.internal.connection.RealCall$AsyncCall: java.util.concurrent.atomic.AtomicInteger callsPerHost
okhttp3.Dns: okhttp3.Dns$Companion Companion
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker$ZipBackedInputDsoIterator: com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker this$1
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceEmitter: long serialVersionUID
okhttp3.internal.ws.RealWebSocket: boolean enqueuedClose
io.reactivex.internal.operators.flowable.FlowableOnErrorNext$OnErrorNextSubscriber: long serialVersionUID
com.facebook.react.fabric.FabricUIManager: boolean IS_DEVELOPMENT_ENVIRONMENT
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String TOUCH_EXPLORATION_EVENT_NAME
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mResolve
okhttp3.Cache$RealCacheRequest: okhttp3.Cache this$0
com.polidea.rxandroidble2.RxBleConnection: int GATT_MTU_MINIMUM
io.reactivex.internal.operators.mixed.CompletableAndThenObservable$AndThenObservableObserver: long serialVersionUID
com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl_Factory: bleshadow.javax.inject.Provider scanObjectsConverterProvider
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mReduceMotionEnabled
com.polidea.rxandroidble2.RxBleClientImpl: java.util.Map queuedScanOperations
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: boolean $cancelable
androidx.activity.ComponentActivity: boolean mDispatchingOnMultiWindowModeChanged
com.facebook.soloader.NativeDeps: boolean sInitialized
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber: long serialVersionUID
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$1: com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_END
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: java.lang.Boolean mObservedState
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider provideLocationManagerProvider
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $streamsToNotify$inlined
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter: com.jakewharton.rxrelay2.BehaviorRelay bleExceptionBehaviorRelay
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider provideBluetoothInteractionExecutorServiceProvider
okhttp3.Cache$urls$1: okhttp3.Cache this$0
okhttp3.Response$Builder: long receivedResponseAtMillis
com.facebook.react.bridge.ReadableNativeMap: int mJniCallCounter
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi23_Factory: bleshadow.javax.inject.Provider internalScanResultCreatorProvider
com.polidea.rxandroidble2.exceptions.BleConflictingNotificationAlreadySetException: java.util.UUID characteristicUuid
com.polidea.rxandroidble2.RxBleClientImpl: com.polidea.rxandroidble2.internal.util.ScanRecordParser scanRecordParser
com.facebook.react.views.text.ReactTextAnchorViewManager: java.lang.String TAG
com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper: com.polidea.rxandroidble2.exceptions.BleException nullBluetoothAdapter
com.polidea.rxandroidble2.internal.operations.DescriptorWriteOperation: android.bluetooth.BluetoothGattDescriptor bluetoothGattDescriptor
com.facebook.soloader.NativeLibrary: java.lang.UnsatisfiedLinkError mLinkError
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants APP_STARTUP_START
com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration: io.reactivex.Scheduler timeoutScheduler
okhttp3.MultipartBody: okhttp3.MediaType MIXED
okhttp3.internal.ws.WebSocketWriter: okhttp3.internal.ws.MessageDeflater messageDeflater
okhttp3.internal.connection.RealCall: boolean requestBodyOpen
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.http2.Http2ExchangeCodec$Companion Companion
okhttp3.internal.http2.Hpack: okhttp3.internal.http2.Header[] STATIC_HEADER_TABLE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory: com.polidea.rxandroidble2.internal.util.LocationServicesStatus locationServicesStatus
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager_Factory: bleshadow.javax.inject.Provider bluetoothGattProvider
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DOUBLE
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideScanSetupProviderFactory: bleshadow.javax.inject.Provider scanSetupBuilderProviderForApi18Provider
com.facebook.react.bridge.ModuleHolder: boolean mInitializable
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: java.lang.String $name
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver: long serialVersionUID
com.polidea.rxandroidble2.helpers.AdvertisedServiceUUIDExtractor: com.polidea.rxandroidble2.internal.util.ScanRecordParser parser
com.polidea.rxandroidble2.internal.connection.ConnectionComponent$NamedInts: java.lang.String GATT_MTU_MINIMUM
kotlin.jvm.internal.PropertyReference: boolean syntheticJavaProperty
com.polidea.rxandroidble2.RxBleDeviceServices$2: com.polidea.rxandroidble2.RxBleDeviceServices this$0
okhttp3.Cache$Entry: okhttp3.Cache$Entry$Companion Companion
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: okhttp3.internal.http1.Http1ExchangeCodec this$0
okhttp3.internal.connection.ConnectionSpecSelector: int nextModeIndex
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] publicSuffixListBytes
com.polidea.rxandroidble2.scan.ScanSettings: int CALLBACK_TYPE_ALL_MATCHES
okhttp3.internal.http2.Header: okio.ByteString TARGET_METHOD
okhttp3.OkHttpClient: java.util.List networkInterceptors
com.polidea.rxandroidble2.internal.util.CharacteristicPropertiesParser: int propertySignedWrite
okhttp3.internal.connection.ExchangeFinder: int otherFailureCount
okhttp3.MultipartReader: boolean noMoreParts
okhttp3.internal.Util: okhttp3.Headers EMPTY_HEADERS
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider operationsProviderImplProvider
okhttp3.internal.cache2.Relay: long upstreamPos
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
com.polidea.rxandroidble2.exceptions.BleGattOperationType: com.polidea.rxandroidble2.exceptions.BleGattOperationType CHARACTERISTIC_READ
okhttp3.EventListener: okhttp3.EventListener NONE
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String TAG
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi23: com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper rxBleAdapterWrapper
com.polidea.rxandroidble2.scan.ScanCallbackType: com.polidea.rxandroidble2.scan.ScanCallbackType CALLBACK_TYPE_UNSPECIFIED
com.polidea.rxandroidble2.scan.IsConnectable: com.polidea.rxandroidble2.scan.IsConnectable CONNECTABLE
com.facebook.soloader.SoLoader: int SOLOADER_EXPLICITLY_ENABLE_BACKUP_SOSOURCE
com.facebook.react.bridge.ReadableNativeArray: int jniPassCounter
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEUTRAL
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.lang.String NAME
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String HOST
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealCall$timeout$1 timeout
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_READ_RESPONSE_HEADERS
com.facebook.soloader.NativeDeps: int WAITING_THREADS_WARNING_THRESHOLD
okhttp3.internal.http2.PushObserver: okhttp3.internal.http2.PushObserver CANCEL
com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.fabric.FabricUIManager mUIManager
com.polidea.rxandroidble2.internal.operations.ScanOperationApi21: com.polidea.rxandroidble2.internal.scan.EmulatedScanFilterMatcher emulatedScanFilterMatcher
com.polidea.rxandroidble2.internal.operations.DisconnectOperation: io.reactivex.Scheduler bluetoothInteractionScheduler
okhttp3.internal.http2.Http2Reader$ContinuationSource: int streamId
com.facebook.react.bridge.Arguments$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
okhttp3.internal.connection.Exchange$RequestBodySink: long contentLength
com.polidea.rxandroidble2.internal.util.BleConnectionCompat: android.content.Context context
com.reactnativecommunity.asyncstorage.AsyncStorageModule$6: com.facebook.react.bridge.Callback val$callback
com.facebook.soloader.Elf32_Shdr: int sh_type
io.reactivex.disposables.ReferenceDisposable: long serialVersionUID
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_BOTTOM_KEY
okhttp3.internal.http2.Http2Connection: int INTERVAL_PING
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider locationServicesStatusApi31Provider
okhttp3.internal.connection.RealConnection$connectTls$1: okhttp3.Handshake $unverifiedHandshake
com.polidea.rxandroidble2.internal.operations.DescriptorWriteOperation: int bluetoothGattCharacteristicDefaultWriteType
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$3: com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation this$0
com.facebook.react.uimanager.UIManagerModule: java.util.Map mModuleConstants
com.facebook.soloader.ExoSoSource$ExoUnpacker: com.facebook.soloader.ExoSoSource this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_END
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: int mModuleId
com.polidea.rxandroidble2.RxBleAdapterStateObservable_Factory: bleshadow.javax.inject.Provider contextProvider
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats mPerfStats
okhttp3.Cache$CacheResponseBody$1: okhttp3.Cache$CacheResponseBody this$0
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $receivedCloseReason$inlined
okhttp3.internal.http.StatusLine: java.lang.String message
com.facebook.soloader.ExoSoSource$ExoUnpacker: com.facebook.soloader.ExoSoSource$FileDso[] mDsos
com.polidea.rxandroidble2.scan.ScanCallbackType: com.polidea.rxandroidble2.scan.ScanCallbackType CALLBACK_TYPE_UNKNOWN
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl_Factory: bleshadow.javax.inject.Provider mtuProvider
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: java.util.Map activeNotificationObservableMap
io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription: long serialVersionUID
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGELESS_LOADING_START
okhttp3.HttpUrl: java.lang.String fragment
okhttp3.internal.connection.Exchange$ResponseBodySource: long bytesReceived
com.facebook.react.bridge.ReactContext: java.lang.String TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_END
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode FRAME_SIZE_ERROR
okhttp3.internal.connection.RealConnection: java.net.Socket socket
okhttp3.Handshake: kotlin.Lazy peerCertificates$delegate
io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver: long serialVersionUID
io.reactivex.internal.schedulers.RxThreadFactory: long serialVersionUID
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl: com.polidea.rxandroidble2.exceptions.BleException disconnectionException
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: okio.BufferedSource $source
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: long serialVersionUID
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion Companion
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker$ZipBackedInputDsoIterator: int mCurrentDso
com.facebook.react.modules.network.NetworkingModule: int CHUNK_TIMEOUT_NS
okhttp3.internal.http2.Hpack: int PREFIX_6_BITS
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor$Factory mJavaJSExecutorFactory
okhttp3.internal.http2.Http2Connection$Builder: int pingIntervalMillis
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsConnectableCheckerFactory: bleshadow.javax.inject.Provider isConnectableCheckerApi26Provider
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest$BackpressureLatestSubscriber: long serialVersionUID
com.polidea.rxandroidble2.internal.RxBleLog: java.util.regex.Pattern ANONYMOUS_CLASS
okio.ForwardingSink: okio.Sink delegate
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualCoordinator: long serialVersionUID
okhttp3.internal.ws.RealWebSocket$Message: okio.ByteString data
okhttp3.internal.platform.BouncyCastlePlatform: java.security.Provider provider
okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2: kotlin.jvm.functions.Function1 $block
com.facebook.soloader.Elf64_Phdr: int p_offset
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String[] DRAWABLE_RESOURCES
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$Companion Companion
okhttp3.OkHttpClient$Builder: int pingInterval
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.lang.String NAME
okhttp3.internal.Util$asFactory$1: okhttp3.EventListener $this_asFactory
okhttp3.FormBody: okhttp3.FormBody$Companion Companion
io.reactivex.internal.operators.flowable.FlowableCreate$DropAsyncEmitter: long serialVersionUID
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: int $streamId$inlined
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_START
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_MD5
okhttp3.internal.http2.Header: okio.ByteString TARGET_PATH
com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider_Factory$InstanceHolder: com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider_Factory INSTANCE
okhttp3.internal.ws.RealWebSocket: long pingIntervalMillis
okhttp3.internal.connection.ConnectionSpecSelector: java.util.List connectionSpecs
com.facebook.soloader.ApkSoSource: byte LIBS_DIR_DONT_CARE
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_CENTER
com.polidea.rxandroidble2.internal.operations.DescriptorReadOperation_Factory: bleshadow.javax.inject.Provider bluetoothGattProvider
com.facebook.soloader.nativeloader.NativeLoader: com.facebook.soloader.nativeloader.NativeLoaderDelegate sDelegate
com.facebook.soloader.NativeDeps: byte[] sEncodedDeps
com.facebook.soloader.SoLoader: java.lang.String[] DEFAULT_DENY_LIST
okhttp3.internal.cache.DiskLruCache$Entry: long[] lengths
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer readBuffer
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: java.lang.ref.WeakReference mOuter
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: java.lang.String NAME
com.facebook.react.bridge.BackgroundExecutor: java.lang.String TAG
com.facebook.soloader.ElfZipFileChannel: boolean mOpened
com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator_Factory: bleshadow.javax.inject.Provider scanRecordParserProvider
com.facebook.react.animated.NativeAnimatedModule: int mUIManagerType
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.jni.HybridData mHybridData
okhttp3.Dispatcher: java.lang.Runnable idleCallback
com.polidea.rxandroidble2.internal.connection.ConnectionComponent$NamedInts: java.lang.String GATT_WRITE_MTU_OVERHEAD
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl_Factory: bleshadow.javax.inject.Provider timeoutConfigurationProvider
androidx.activity.ComponentActivity: java.lang.String ACTIVITY_RESULT_TAG
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6$1: com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6 this$0
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
okhttp3.OkHttpClient$Builder: javax.net.ssl.X509TrustManager x509TrustManagerOrNull
com.facebook.soloader.SoLoader: int sAppType
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA256
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$7: java.util.UUID val$serviceUuid
com.facebook.react.bridge.ModuleHolder: java.lang.String mName
com.bleplx.adapter.BleModule: android.bluetooth.BluetoothManager bluetoothManager
okhttp3.internal.cache2.Relay: okio.ByteString metadata
com.polidea.rxandroidble2.RxBleClient$State: com.polidea.rxandroidble2.RxBleClient$State BLUETOOTH_NOT_AVAILABLE
okhttp3.internal.platform.android.AndroidLog: java.util.Map knownLoggers
com.reactnativecommunity.asyncstorage.AsyncStoragePackage$1: com.reactnativecommunity.asyncstorage.AsyncStoragePackage this$0
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTROL_PING
okhttp3.internal.cache.DiskLruCache: java.io.File journalFile
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider provideIllegalOperationHandlerProvider
okhttp3.Response$Builder: okhttp3.Response cacheResponse
io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver: long serialVersionUID
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$3: com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$IntSupplier val$previousBatchIndexSupplier
okhttp3.internal.cache.DiskLruCache: boolean mostRecentTrimFailed
com.facebook.soloader.DirectorySoSource: int flags
okhttp3.internal.http2.Http2: int TYPE_HEADERS
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_AES_128_CBC_SHA
com.polidea.rxandroidble2.scan.ScanFilter$Builder: android.os.ParcelUuid mServiceDataUuid
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider applicationContextProvider
okhttp3.internal.connection.Exchange$RequestBodySink: boolean completed
okhttp3.OkHttpClient: int connectTimeoutMillis
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_GCM_SHA384
okhttp3.internal.connection.RealConnection: int routeFailureCount
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_FLOAT
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier: okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier INSTANCE
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: java.lang.String NAME
com.polidea.rxandroidble2.internal.DeviceModule: java.lang.String DISCONNECT_TIMEOUT
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl: com.polidea.rxandroidble2.internal.connection.PayloadSizeLimitProvider maxBatchSizeProvider
com.facebook.soloader.Elf64_Phdr: int p_memsz
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method mMethod
okhttp3.internal.ws.RealWebSocket: long queueSize
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$Listener listener
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider rxBleConnectionImplProvider
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$3: int val$batchSize
com.bleplx.BlePlxModule: java.lang.String NAME
com.polidea.rxandroidble2.exceptions.BleGattOperationType: com.polidea.rxandroidble2.exceptions.BleGattOperationType CHARACTERISTIC_WRITE
com.polidea.rxandroidble2.internal.connection.MtuWatcher: java.lang.Integer currentMtu
com.polidea.rxandroidble2.scan.ScanSettings: int MATCH_NUM_ONE_ADVERTISEMENT
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl: java.util.concurrent.Future runnableFuture
com.facebook.soloader.Elf32_Ehdr: int e_ehsize
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure MODERATE
com.polidea.rxandroidble2.internal.util.ScanRecordParser: int DATA_TYPE_SERVICE_DATA_32_BIT
com.polidea.rxandroidble2.scan.ScanSettings$Builder: int mScanMode
io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber: long serialVersionUID
okhttp3.internal.connection.RealCall: okhttp3.EventListener eventListener
com.polidea.rxandroidble2.internal.operations.DisconnectOperation_Factory: bleshadow.javax.inject.Provider rxBleGattCallbackProvider
com.facebook.soloader.MinElf$ISA: java.lang.String value
io.reactivex.exceptions.CompositeException: long serialVersionUID
com.polidea.rxandroidble2.internal.util.CheckerPermission: java.util.Set grantedPermissions
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: long serialVersionUID
com.polidea.rxandroidble2.internal.util.ScanRecordParser: int DATA_TYPE_SERVICE_UUIDS_32_BIT_COMPLETE
com.polidea.rxandroidble2.scan.ScanSettings: int MATCH_NUM_MAX_ADVERTISEMENT
okhttp3.internal.cache.DiskLruCache$Entry: java.util.List cleanFiles
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Http2Stream $stream$inlined
io.reactivex.internal.operators.flowable.FlowableIntervalRange$IntervalRangeSubscriber: long serialVersionUID
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA256
okhttp3.OkHttp: okhttp3.OkHttp INSTANCE
okhttp3.CacheControl: okhttp3.CacheControl$Companion Companion
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA X86
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_PREFETCH_FAILURE
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: java.lang.String KEY_PROFILING_SETTINGS
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
okhttp3.internal.http2.Header: java.lang.String TARGET_SCHEME_UTF8
com.facebook.react.bridge.JSBundleLoader$2: boolean val$loadSynchronously
okhttp3.CertificatePinner$Pin: okio.ByteString hash
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider provideFinalizationCloseableProvider
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_START
okhttp3.internal.platform.ConscryptPlatform: okhttp3.internal.platform.ConscryptPlatform$Companion Companion
com.facebook.soloader.UnpackingSoSource$InputDsoStream: com.facebook.soloader.UnpackingSoSource$Dso dso
com.polidea.rxandroidble2.internal.RxBleDeviceProvider: java.util.Map cachedDeviceComponents
com.facebook.react.bridge.CatalystInstanceImpl$3: com.facebook.react.bridge.CatalystInstanceImpl this$0
okhttp3.internal.http2.Http2Stream: java.io.IOException errorException
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
okhttp3.internal.ws.WebSocketReader: okio.Buffer controlFrameBuffer
com.polidea.rxandroidble2.helpers.ValueInterpreter: int FORMAT_FLOAT
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: com.jakewharton.rxrelay2.Relay changedCharacteristicSerializedPublishRelay
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber: long serialVersionUID
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ON_MEASURE_START
okhttp3.internal.http2.Hpack$Writer: boolean useCompression
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.lang.String NAME
androidx.fragment.app.FragmentActivity: boolean mStopped
okhttp3.internal.cache.CacheStrategy$Factory: int ageSeconds
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationManagerFactory: bleshadow.javax.inject.Provider contextProvider
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String NAME
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.polidea.rxandroidble2.internal.DeviceModule: java.lang.String MAC_ADDRESS
com.facebook.soloader.SoLoader: java.lang.String TAG
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothInteractionExecutorServiceFactory$InstanceHolder: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothInteractionExecutorServiceFactory INSTANCE
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider serviceDiscoveryManagerProvider
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider rxBleAdapterWrapperProvider
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideCharacteristicPropertiesParserFactory$InstanceHolder: com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideCharacteristicPropertiesParserFactory INSTANCE
com.polidea.rxandroidble2.LogOptions: com.polidea.rxandroidble2.LogOptions$Logger logger
com.facebook.react.config.ReactFeatureFlags: boolean doNotSwapLeftAndRightOnAndroidInLTR
com.polidea.rxandroidble2.LogOptions: java.lang.Integer macAddressLogSetting
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$1: io.reactivex.Scheduler val$callbackScheduler
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: android.content.SharedPreferences mSharedPreferences
okhttp3.internal.http2.Header: okhttp3.internal.http2.Header$Companion Companion
io.reactivex.internal.operators.flowable.FlowableRange$RangeSubscription: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$RepeatWhenSubscriber: long serialVersionUID
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_START
okhttp3.Cache$Entry: java.lang.String RECEIVED_MILLIS
okhttp3.internal.cache2.Relay$RelaySource: okio.Timeout timeout
okhttp3.internal.ws.WebSocketExtensions: boolean clientNoContextTakeover
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber$InnerConsumer: long serialVersionUID
com.facebook.soloader.UnpackingSoSource: android.content.Context mContext
com.facebook.soloader.NativeDeps$1: boolean val$extractToDisk
com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator: com.polidea.rxandroidble2.internal.util.ScanRecordParser scanRecordParser
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideScanPreconditionVerifierFactory: bleshadow.javax.inject.Provider scanPreconditionVerifierForApi18Provider
com.bleplx.adapter.BleModule: io.reactivex.disposables.Disposable scanSubscription
com.polidea.rxandroidble2.internal.util.ScanRecordParser: int UUID_BYTES_16_BIT
okhttp3.Cache$CacheResponseBody$1: okio.Source $source
com.polidea.rxandroidble2.RxBleDeviceServices$1: java.util.UUID val$serviceUuid
okhttp3.internal.ws.MessageDeflater: okio.DeflaterSink deflaterSink
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnectionPool connectionPool
okhttp3.internal.ws.WebSocketExtensions: boolean perMessageDeflate
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher nativeCallbackDispatcher
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_AFFECTED_NODES
com.polidea.rxandroidble2.internal.RxBleLog: com.polidea.rxandroidble2.internal.logger.LoggerSetup loggerSetup
okhttp3.internal.ws.WebSocketWriter: okio.Buffer$UnsafeCursor maskCursor
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String REACT_CLASS
okhttp3.internal.connection.ExchangeFinder: okhttp3.EventListener eventListener
com.polidea.rxandroidble2.internal.util.UUIDUtil: com.polidea.rxandroidble2.internal.util.ScanRecordParser parser
okhttp3.internal.http2.PushObserver$Companion: okhttp3.internal.http2.PushObserver$Companion $$INSTANCE
com.polidea.rxandroidble2.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.facebook.react.bridge.CallbackImpl: boolean mInvoked
com.facebook.react.uimanager.UIManagerModule: java.util.concurrent.CopyOnWriteArrayList mUIManagerListeners
com.polidea.rxandroidble2.internal.connection.ConnectionParametersImpl: int timeout
io.reactivex.internal.subscriptions.DeferredScalarSubscription: long serialVersionUID
com.polidea.rxandroidble2.internal.util.CharacteristicPropertiesParser: int propertyRead
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: okio.Source $fileSource
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
com.polidea.rxandroidble2.exceptions.BleGattOperationType: com.polidea.rxandroidble2.exceptions.BleGattOperationType DESCRIPTOR_WRITE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA
com.facebook.soloader.Elf64_Ehdr: int e_shentsize
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: long serialVersionUID
io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber$InnerObserver: long serialVersionUID
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String REACT_CLASS
com.polidea.rxandroidble2.exceptions.BleDisconnectedException: int UNKNOWN_STATUS
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ANIMATING
com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl: com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator internalScanResultCreator
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider scanSettingsEmulatorProvider
okhttp3.internal.platform.Android10Platform: boolean isSupported
okhttp3.internal.connection.RealConnection: long IDLE_CONNECTION_HEALTHY_NS
io.reactivex.internal.subscriptions.SubscriptionArbiter: long serialVersionUID
androidx.appcompat.app.AppCompatActivity: java.lang.String DELEGATE_TAG
com.facebook.react.views.textinput.ReactTextInputManager: int UNSET
com.polidea.rxandroidble2.RxBleClientImpl: com.polidea.rxandroidble2.internal.util.LocationServicesStatus locationServicesStatus
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModuleSpec mSpec
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$10: java.util.UUID val$descriptorUuid
com.polidea.rxandroidble2.internal.connection.ConnectorImpl: com.polidea.rxandroidble2.internal.serialization.ClientOperationQueue clientOperationQueue
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation: com.polidea.rxandroidble2.internal.connection.RxBleGattCallback rxBleGattCallback
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] $VALUES
com.facebook.react.uimanager.BaseViewManager: float CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider mProvider
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: long serialVersionUID
okhttp3.OkHttpClient$Builder: boolean retryOnConnectionFailure
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_END
com.facebook.react.bridge.GuardedAsyncTask: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
com.polidea.rxandroidble2.internal.util.ScanRecordParser: int DATA_TYPE_SERVICE_UUIDS_128_BIT_PARTIAL
com.facebook.soloader.Api18TraceUtils: int MAX_SECTION_NAME_LENGTH
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Object sProgressBarCtorLock
io.reactivex.internal.operators.observable.ObservableCache$CacheDisposable: long serialVersionUID
io.reactivex.exceptions.CompositeException$CompositeExceptionCausalChain: long serialVersionUID
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
io.reactivex.internal.operators.observable.ObservableReplay$InnerDisposable: long serialVersionUID
okhttp3.internal.http2.Http2ExchangeCodec: java.util.List HTTP_2_SKIPPED_REQUEST_HEADERS
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator: io.reactivex.ObservableTransformer emulateMatchLost
okhttp3.internal.platform.Platform: java.util.logging.Logger logger
io.reactivex.internal.operators.flowable.FlowableSingle$SingleElementSubscriber: long serialVersionUID
okhttp3.internal.http2.ErrorCode: int httpCode
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_FRAGMENT_CREATE
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: long serialVersionUID
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory factory
com.polidea.rxandroidble2.RxBleClientImpl_Factory: bleshadow.javax.inject.Provider scanRecordParserProvider
com.polidea.rxandroidble2.internal.connection.IllegalOperationMessageCreator: com.polidea.rxandroidble2.internal.util.CharacteristicPropertiesParser propertiesParser
okhttp3.Request$Builder: okhttp3.HttpUrl url
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: bleshadow.javax.inject.Provider connectorImplProvider
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$2: int val$windowInMillis
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: boolean $inFinished$inlined
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: boolean $cancelable
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber: long serialVersionUID
com.facebook.soloader.Elf32_Ehdr: int e_flags
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_END
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: java.lang.String NAME
com.polidea.rxandroidble2.internal.scan.ScanRecordImplCompat: java.lang.String deviceName
com.ghostcommv2.BuildConfig: int VERSION_CODE
okhttp3.internal.http2.Http2: int TYPE_WINDOW_UPDATE
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider provideIsAndroidWearProvider
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: long serialVersionUID
com.facebook.soloader.NativeLibrary: java.util.List mLibraryNames
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: long serialVersionUID
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue settingsListenerQueue
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_METHOD_NAME
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl: com.polidea.rxandroidble2.internal.serialization.OperationPriorityFifoBlockingQueue queue
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTModernEventEmitter mFabricEventEmitter
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_AES_256_CBC_SHA
com.facebook.react.views.textinput.ReactTextInputManager: int SET_MOST_RECENT_EVENT_COUNT
okhttp3.internal.concurrent.TaskRunner$RealBackend: java.util.concurrent.ThreadPoolExecutor executor
io.reactivex.internal.operators.flowable.FlowableFromArray$ArrayConditionalSubscription: long serialVersionUID
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable$3: com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable this$0
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule$ContentHandler mWebSocketContentHandler
okhttp3.internal.http2.Hpack: java.util.Map NAME_TO_FIRST_INDEX
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
okhttp3.OkHttpClient$Builder: long minWebSocketMessageToCompress
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.jni.HybridData mHybridData
com.polidea.rxandroidble2.scan.ScanFilter: java.lang.String mDeviceName
com.facebook.soloader.NativeDepsUnpacker: java.lang.String NATIVE_DEPS_FILE_NAME
com.facebook.soloader.ElfFileChannel: java.io.File mFile
okhttp3.OkHttpClient: java.util.List DEFAULT_CONNECTION_SPECS
com.polidea.rxandroidble2.NotificationSetupMode: com.polidea.rxandroidble2.NotificationSetupMode QUICK_SETUP
io.reactivex.Flowable: int BUFFER_SIZE
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: long serialVersionUID
okhttp3.internal.http2.Http2Writer: boolean client
io.reactivex.internal.disposables.SequentialDisposable: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableCreate$MissingEmitter: long serialVersionUID
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_3DES_EDE_CBC_SHA
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_URI
io.reactivex.internal.subscribers.InnerQueuedSubscriber: long serialVersionUID
com.polidea.rxandroidble2.internal.operations.MtuRequestOperation_Factory: bleshadow.javax.inject.Provider requestedMtuProvider
okhttp3.HttpUrl: java.util.List queryNamesAndValues
io.reactivex.internal.operators.flowable.FlowableConcatArray$ConcatArraySubscriber: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableReplay$SizeAndTimeBoundReplayBuffer: long serialVersionUID
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi31: boolean isNearbyPermissionNeverForLoc
okhttp3.RequestBody$Companion$toRequestBody$2: int $byteCount
com.polidea.rxandroidble2.internal.QueueOperation$1: com.polidea.rxandroidble2.internal.serialization.QueueReleaseInterface val$queueReleaseInterface
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter_Factory: bleshadow.javax.inject.Provider macAddressProvider
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String PROXY_CONNECTION
okhttp3.internal.connection.RealConnection: okio.BufferedSource source
com.polidea.rxandroidble2.LogConstants: int UUIDS_FULL
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.TurboModuleManager$ModuleProvider mTurboModuleProvider
io.reactivex.exceptions.OnErrorNotImplementedException: long serialVersionUID
okhttp3.internal.platform.Android10Platform: okhttp3.internal.platform.Android10Platform$Companion Companion
okhttp3.Response$Builder: long sentRequestAtMillis
okhttp3.Dispatcher: int maxRequests
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: com.facebook.soloader.ExtractFromZipSoSource$ZipDso[] mDsos
okhttp3.internal.http2.Header: java.lang.String TARGET_PATH_UTF8
okhttp3.internal.tls.OkHostnameVerifier: okhttp3.internal.tls.OkHostnameVerifier INSTANCE
okhttp3.CacheControl: boolean isPublic
okhttp3.internal.http2.Http2: okhttp3.internal.http2.Http2 INSTANCE
io.reactivex.subjects.PublishSubject$PublishDisposable: long serialVersionUID
com.polidea.rxandroidble2.internal.util.ClientStateObservable_Factory: bleshadow.javax.inject.Provider bleAdapterStateObservableProvider
com.polidea.rxandroidble2.exceptions.BleDisconnectedException: int state
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String mName
com.ghostcommv2.BuildConfig: boolean DEBUG
androidx.drawerlayout.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_CODE
com.polidea.rxandroidble2.internal.operations.DisconnectOperation: com.polidea.rxandroidble2.internal.connection.ConnectionStateChangeListener connectionStateChangeListener
com.polidea.rxandroidble2.RxBleClientImpl_Factory: bleshadow.javax.inject.Provider internalToExternalScanResultMapFunctionProvider
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl: android.bluetooth.BluetoothGatt bluetoothGatt
okhttp3.internal.cache.DiskLruCache: int redundantOpCount
com.polidea.rxandroidble2.internal.connection.DescriptorWriter_Factory: bleshadow.javax.inject.Provider operationsProvider
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider clientStateObservableProvider
okhttp3.Protocol: okhttp3.Protocol HTTP_1_1
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode SETTINGS_TIMEOUT
com.himelbrand.ble.peripheral.RNBLEModule: android.bluetooth.BluetoothGattServerCallback mGattServerCallback
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.reflect.Method setHostname
com.facebook.react.bridge.ReadableNativeMap$1: com.facebook.react.bridge.ReadableNativeMap this$0
com.facebook.react.bridge.Inspector$Page: java.lang.String mTitle
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: java.lang.String SHARED_PREFERENCES_PREFIX
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_START
okhttp3.HttpUrl$Builder: java.util.List encodedPathSegments
com.polidea.rxandroidble2.ClientComponent$NamedExecutors: java.lang.String CONNECTION_QUEUE
com.reactnativecommunity.asyncstorage.AsyncStorageModule$5: com.reactnativecommunity.asyncstorage.AsyncStorageModule this$0
okhttp3.HttpUrl: java.util.List pathSegments
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: java.lang.String NAME
okhttp3.Protocol: okhttp3.Protocol[] $VALUES
okhttp3.CacheControl$Builder: boolean immutable
okhttp3.CertificatePinner: okhttp3.CertificatePinner$Companion Companion
com.polidea.rxandroidble2.internal.util.CheckerLocationProvider_Factory: bleshadow.javax.inject.Provider contentResolverProvider
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: bleshadow.javax.inject.Provider longWriteOperationBuilderImplProvider
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String val$assetUrl
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.concurrent.Task writerTask
okhttp3.internal.http2.Header: java.lang.String TARGET_AUTHORITY_UTF8
okhttp3.internal.ws.MessageDeflaterKt: okio.ByteString EMPTY_DEFLATE_BLOCK
com.facebook.soloader.Elf64_Dyn: int d_un
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: java.lang.String NAME
com.polidea.rxandroidble2.RxBleClientImpl_Factory: bleshadow.javax.inject.Provider operationQueueProvider
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mSourceURL
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode REFUSED_STREAM
com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration: java.util.concurrent.TimeUnit timeoutTimeUnit
okhttp3.ResponseBody: java.io.Reader reader
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: java.lang.String NAME
com.polidea.rxandroidble2.ClientComponent$BluetoothConstants: java.lang.String ENABLE_INDICATION_VALUE
okhttp3.Cache: int ENTRY_BODY
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: okhttp3.internal.cache.DiskLruCache$Entry this$0
okhttp3.internal.http2.Hpack$Writer: int dynamicTableByteCount
okhttp3.Route: okhttp3.Address address
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String mColorScheme
okhttp3.internal.ws.RealWebSocket: long minimumDeflateSize
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5$3: com.polidea.rxandroidble2.internal.util.QueueReleasingEmitterWrapper val$emitterWrapper
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsConnectableCheckerFactory: bleshadow.javax.inject.Provider deviceSdkProvider
okhttp3.internal.cache.DiskLruCache: java.io.File directory
com.reactnativecommunity.asyncstorage.AsyncStorageExpoMigration: java.lang.String LOG_TAG
com.polidea.rxandroidble2.internal.util.ScanRecordParser_Factory$InstanceHolder: com.polidea.rxandroidble2.internal.util.ScanRecordParser_Factory INSTANCE
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener mTouchExplorationStateChangeListener
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$2$1: com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$2 this$1
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSink sink
okhttp3.Response: okhttp3.Request request
okhttp3.Address: okhttp3.Dns dns
io.reactivex.internal.operators.flowable.FlowableRange$BaseRangeSubscription: long serialVersionUID
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_STYLE
okhttp3.Address: okhttp3.CertificatePinner certificatePinner
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl_Factory: bleshadow.javax.inject.Provider serviceDiscoveryManagerProvider
com.facebook.jni.NativeRunnable: com.facebook.jni.HybridData mHybridData
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache: com.polidea.rxandroidble2.internal.cache.DeviceComponentWeakReference$Provider deviceComponentReferenceProvider
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$2$1: com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry val$entry
okhttp3.MediaType: java.lang.String QUOTED
io.reactivex.internal.operators.observable.ObservableInterval$IntervalObserver: long serialVersionUID
com.facebook.react.modules.network.NetworkingModule: java.lang.String mDefaultUserAgent
okhttp3.CacheControl$Builder: int minFreshSeconds
okhttp3.OkHttpClient$Builder: java.util.List protocols
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$3$2: com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$3 this$0
com.facebook.react.bridge.ModuleHolder: boolean mIsInitializing
com.polidea.rxandroidble2.exceptions.BleCannotSetCharacteristicNotificationException: int reason
okhttp3.Address: java.util.List connectionSpecs
com.facebook.react.bridge.JavaOnlyArray: java.util.List mBackingList
com.polidea.rxandroidble2.internal.operations.ConnectOperation: com.polidea.rxandroidble2.internal.util.BleConnectionCompat connectionCompat
okio.Timeout: boolean hasDeadline
com.polidea.rxandroidble2.internal.operations.LegacyScanOperation$1: io.reactivex.ObservableEmitter val$emitter
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_BACKGROUND
com.facebook.react.bridge.CatalystInstanceImpl: boolean mInitialized
okhttp3.internal.http2.Http2Stream: long writeBytesMaximum
com.bleplx.adapter.BleModule: android.util.SparseArray discoveredCharacteristics
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6: int val$batchSize
okhttp3.internal.concurrent.TaskQueue: okhttp3.internal.concurrent.Task activeTask
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: okio.BufferedSink $sink
androidx.activity.ComponentActivity: androidx.core.view.MenuHostHelper mMenuHostHelper
okhttp3.CipherSuite: okhttp3.CipherSuite$Companion Companion
okhttp3.internal.http2.Hpack$Writer: okhttp3.internal.http2.Header[] dynamicTable
io.reactivex.internal.operators.mixed.SingleFlatMapObservable$FlatMapObserver: long serialVersionUID
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: okhttp3.internal.http2.ErrorCode $errorCode$inlined
com.polidea.rxandroidble2.internal.RxBleDeviceImpl_Factory: bleshadow.javax.inject.Provider connectorProvider
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideBluetoothGattFactory: bleshadow.javax.inject.Provider bluetoothGattProvider
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RealConnectionPool connectionPool
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: okhttp3.internal.http1.Http1ExchangeCodec this$0
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: bleshadow.javax.inject.Provider macAddressProvider
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber: long serialVersionUID
com.facebook.react.bridge.JSIModuleRegistry: java.util.Map mModules
okhttp3.CacheControl: int minFreshSeconds
com.bleplx.adapter.BleModule: com.bleplx.adapter.utils.DisposableMap connectingDevices
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider checkerScanPermissionProvider
com.polidea.rxandroidble2.internal.logger.LoggerSetup: boolean shouldLogScannedPeripherals
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA
okhttp3.Cache$RealCacheRequest: boolean done
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.android.CloseGuard closeGuard
okhttp3.internal.http2.Http2Stream$FramingSource: okhttp3.Headers trailers
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: java.lang.String $name
okhttp3.CacheControl$Builder: int maxAgeSeconds
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: long serialVersionUID
okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGELESS_LOADING_END
com.facebook.react.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: java.lang.String methodName
okhttp3.internal.http2.Http2Connection: int nextStreamId
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: long serialVersionUID
io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable: long serialVersionUID
okhttp3.internal.Util: byte[] EMPTY_BYTE_ARRAY
okhttp3.MultipartBody: byte[] DASHDASH
okhttp3.internal.http2.Huffman: okhttp3.internal.http2.Huffman INSTANCE
kotlin.random.Random$Default$Serialized: long serialVersionUID
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_STRING
okhttp3.internal.http.ExchangeCodec$Companion: okhttp3.internal.http.ExchangeCodec$Companion $$INSTANCE
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: okio.BufferedSource $source
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideFinalizationCloseableFactory: bleshadow.javax.inject.Provider interactionExecutorServiceProvider
okhttp3.internal.cache.DiskLruCache: kotlin.text.Regex LEGAL_KEY_PATTERN
com.facebook.soloader.SysUtil: java.lang.String TAG
io.reactivex.internal.util.NotificationLite$SubscriptionNotification: long serialVersionUID
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl_Factory: bleshadow.javax.inject.Provider callbackSchedulerProvider
androidx.activity.ComponentActivity: androidx.activity.contextaware.ContextAwareHelper mContextAwareHelper
com.polidea.rxandroidble2.internal.connection.ConnectionModule_MinimumMtuFactory$InstanceHolder: com.polidea.rxandroidble2.internal.connection.ConnectionModule_MinimumMtuFactory INSTANCE
com.polidea.rxandroidble2.exceptions.BleGattOperationType: com.polidea.rxandroidble2.exceptions.BleGattOperationType CHARACTERISTIC_CHANGED
com.polidea.rxandroidble2.internal.scan.ScanRecordImplCompat: java.util.Map serviceData
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion Companion
com.facebook.soloader.NativeDepsUnpacker: byte STATE_DIRTY
com.facebook.soloader.Elf32_Shdr: int sh_name
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: com.facebook.soloader.ExtractFromZipSoSource this$0
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String servedDateString
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber: long serialVersionUID
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_START
okhttp3.HttpUrl: java.lang.String USERNAME_ENCODE_SET
com.facebook.react.bridge.ReactContext: java.lang.String EARLY_NATIVE_MODULE_EXCEPTION_MESSAGE
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber$OtherSubscriber: long serialVersionUID
com.polidea.rxandroidble2.internal.operations.MtuRequestOperation_Factory: bleshadow.javax.inject.Provider rxBleGattCallbackProvider
okhttp3.internal.ws.WebSocketWriter: boolean writerClosed
okhttp3.internal.http2.PushObserver: okhttp3.internal.http2.PushObserver$Companion Companion
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_2
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult: com.polidea.rxandroidble2.scan.ScanRecord scanRecord
com.facebook.react.config.ReactFeatureFlags: boolean enableBridgelessArchitecture
com.polidea.rxandroidble2.internal.RxBleDeviceImpl_Factory: bleshadow.javax.inject.Provider checkerConnectPermissionProvider
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_URI
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi21_Factory: bleshadow.javax.inject.Provider rxBleAdapterWrapperProvider
okhttp3.internal.ws.WebSocketReader: boolean readingCompressedMessage
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_END
io.reactivex.internal.operators.observable.ObservableUsing$UsingObserver: long serialVersionUID
com.bleplx.adapter.BleModule: void lambda$changeAdapterState$18(com.bleplx.adapter.utils.SafeExecutor,java.lang.String,java.lang.Throwable)
com.bleplx.BlePlxModule: void logLevel(com.facebook.react.bridge.Promise)
com.polidea.rxandroidble2.internal.connection.ConnectionStateChangeListener: void onConnectionStateChange(com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState)
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl$2: java.lang.Object apply(java.lang.Object)
com.polidea.rxandroidble2.internal.operations.LegacyScanOperation: void stopScan(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,java.lang.Object)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType getThreadType()
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache: java.util.Set entrySet()
com.polidea.rxandroidble2.internal.DeviceModule_ProvidesDisconnectTimeoutConfFactory: com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration get()
com.polidea.rxandroidble2.internal.util.DisposableUtil$1: void onSuccess(java.lang.Object)
androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl: android.view.textclassifier.TextClassifier getTextClassifier(android.widget.TextView)
okhttp3.FormBody$Companion: FormBody$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.JavaNetAuthenticator: JavaNetAuthenticator()
okhttp3.internal.http1.Http1ExchangeCodec: void writeRequestHeaders(okhttp3.Request)
okhttp3.internal.http1.HeadersReader$Companion: HeadersReader$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.reactivex.Observable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function,boolean,int)
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)
com.polidea.rxandroidble2.internal.RxBleDeviceImpl_Factory: java.lang.Object get()
com.facebook.react.uimanager.LayoutShadowNode: void setPosition(java.lang.String)
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: com.polidea.rxandroidble2.RxBleDevice provideDevice()
io.reactivex.Flowable: io.reactivex.Flowable throttleLatest(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
com.facebook.react.uimanager.UIManagerModule: void removeSubviewsFromContainerWithID(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation: com.polidea.rxandroidble2.exceptions.BleException provideException(android.os.DeadObjectException)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void getInitialURL(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedSplitBundleFromNetworkLoader(java.lang.String,java.lang.String)
kotlin.text.Regex: java.lang.Object writeReplace()
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String normalize(java.lang.String,int)
com.polidea.rxandroidble2.internal.logger.LoggerUtil: com.polidea.rxandroidble2.internal.logger.LoggerUtil$AttributeLogWrapper wrap(android.bluetooth.BluetoothGattCharacteristic,boolean)
io.reactivex.Observable: io.reactivex.Observable combineLatestDelayError(java.lang.Iterable,io.reactivex.functions.Function,int)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi18_Factory: java.lang.Object get()
com.polidea.rxandroidble2.ClientComponent$ClientModule: android.location.LocationManager provideLocationManager(android.content.Context)
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String,java.lang.Throwable)
com.polidea.rxandroidble2.internal.operations.LegacyScanOperation: java.lang.Object createScanCallback(io.reactivex.ObservableEmitter)
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Observable setupNotification(android.bluetooth.BluetoothGattCharacteristic,com.polidea.rxandroidble2.NotificationSetupMode)
com.facebook.react.modules.websocket.WebSocketModule: void invalidate()
okhttp3.HttpUrl: java.lang.String queryParameterValue(int)
okhttp3.internal.connection.RealConnection: okhttp3.internal.connection.RealConnectionPool getConnectionPool()
okhttp3.internal.platform.android.Android10SocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
com.polidea.rxandroidble2.internal.util.CheckerLocationProvider: boolean isLocationProviderEnabledBelowApi28()
com.facebook.react.bridge.ReactMarkerConstants: ReactMarkerConstants(java.lang.String,int)
com.polidea.rxandroidble2.internal.operations.ScanOperationApi18: android.bluetooth.BluetoothAdapter$LeScanCallback createScanCallback(io.reactivex.ObservableEmitter)
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult: com.polidea.rxandroidble2.scan.ScanRecord getScanRecord()
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideCharacteristicPropertiesParserFactory: com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideCharacteristicPropertiesParserFactory create()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
okhttp3.internal.concurrent.Task: Task(java.lang.String,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.Arguments: Arguments()
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: void removeListeners(java.lang.Integer)
okhttp3.Cache: int getWriteAbortCount$okhttp()
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecuteGuarded(java.lang.Object)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
okhttp3.FormBody: FormBody(java.util.List,java.util.List)
com.facebook.soloader.ApplicationSoSource: java.lang.String toString()
okhttp3.OkHttpClient$Builder: void setHostnameVerifier$okhttp(javax.net.ssl.HostnameVerifier)
com.facebook.react.views.modal.ReactModalHostView: void setHardwareAccelerated(boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.http2.Http2Connection: void access$setAwaitPongsReceived$p(okhttp3.internal.http2.Http2Connection,long)
com.facebook.react.views.scroll.ReactScrollViewManager: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactScrollView: void setSendMomentumEvents(boolean)
okhttp3.internal.http.ExchangeCodec: void flushRequest()
com.facebook.react.animated.NativeAnimatedModule: void enqueueFrameCallback()
com.polidea.rxandroidble2.internal.operations.OperationsProvider: com.polidea.rxandroidble2.internal.operations.MtuRequestOperation provideMtuChangeOperation(int)
io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.functions.Function)
io.reactivex.Observable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedFragment(java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignItems(java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleInteropUtils: java.lang.String createJniSignature(java.lang.String,java.lang.String,java.lang.Class[],java.lang.Class)
okhttp3.TlsVersion: okhttp3.TlsVersion forJavaName(java.lang.String)
okhttp3.internal.http2.Http2Connection: long access$getWriteBytesMaximum$p(okhttp3.internal.http2.Http2Connection)
com.facebook.react.uimanager.ViewGroupManager: java.lang.Class getShadowNodeClass()
com.polidea.rxandroidble2.ClientComponent$ClientModule: io.reactivex.Scheduler provideBluetoothCallbacksScheduler()
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: okio.Timeout timeout()
io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function6)
com.polidea.rxandroidble2.RxBleClientImpl: java.util.Set getConnectedPeripherals()
com.facebook.yoga.YogaNodeJNIBase: long replaceChild(com.facebook.yoga.YogaNodeJNIBase,int)
io.reactivex.internal.util.HashMapSupplier: io.reactivex.internal.util.HashMapSupplier valueOf(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void setVisible(android.view.View,boolean)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaScriptExecutor create()
okhttp3.internal.http2.Http2Stream: void receiveData(okio.BufferedSource,int)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.RuntimeExecutor getUnbufferedRuntimeExecutor()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String getEffectiveTldPlusOne(java.lang.String)
okhttp3.internal.platform.Platform: boolean isCleartextTrafficPermitted(java.lang.String)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$3: io.reactivex.Observable apply(android.bluetooth.BluetoothGattCharacteristic)
io.reactivex.Flowable: io.reactivex.Flowable window(java.util.concurrent.Callable)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothInteractionSchedulerFactory: io.reactivex.Scheduler get()
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()
okhttp3.EventListener$Companion: EventListener$Companion()
okio.ForwardingSink: okio.Sink -deprecated_delegate()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.bridge.UIManager: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.polidea.rxandroidble2.scan.ScanFilter: byte[] getServiceDataMask()
com.facebook.react.bridge.JavaScriptExecutor: JavaScriptExecutor(com.facebook.jni.HybridData)
com.facebook.soloader.SoLoader: java.lang.String makeLdLibraryPath()
com.facebook.react.views.image.ReactImageManager: void setLoadingIndicatorSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.views.view.ReactViewManager: void nextFocusRight(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel[] values()
com.facebook.soloader.UnpackingSoSource$InputDsoStream: void write(java.io.DataOutput,byte[])
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDeviceSdkFactory: ClientComponent_ClientModule_ProvideDeviceSdkFactory()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: int getAlpha(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
okio.AsyncTimeout: void access$setHead$cp(okio.AsyncTimeout)
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KCallable compute()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean isIdle()
com.polidea.rxandroidble2.internal.scan.ScanRecordImplNativeWrapper: int getTxPowerLevel()
com.facebook.react.bridge.WritableNativeMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.polidea.rxandroidble2.internal.operations.ConnectOperation_Factory: ConnectOperation_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
okhttp3.HttpUrl$Builder: void removeAllCanonicalQueryParameters(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
okhttp3.Cache$Entry: boolean matches(okhttp3.Request,okhttp3.Response)
com.bleplx.adapter.BleModule: boolean supportsBluetoothLowEnergy()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
okhttp3.Handshake$Companion: okhttp3.Handshake get(javax.net.ssl.SSLSession)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(android.view.View,double)
okhttp3.MediaType: java.util.regex.Pattern access$getPARAMETER$cp()
com.polidea.rxandroidble2.internal.util.ByteAssociation: int hashCode()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$7: io.reactivex.ObservableSource apply(io.reactivex.Observable)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion: okhttp3.internal.platform.android.AndroidCertificateChainCleaner buildIfSupported(javax.net.ssl.X509TrustManager)
androidx.appcompat.app.AppCompatActivity: void onContentChanged()
com.himelbrand.ble.peripheral.RNBLEModule: void start(com.facebook.react.bridge.Promise)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay valueOf(java.lang.String)
com.polidea.rxandroidble2.internal.operations.ReadRssiOperation_Factory: com.polidea.rxandroidble2.internal.operations.ReadRssiOperation newInstance(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration)
androidx.core.graphics.PaintCompat$Api23Impl: boolean hasGlyph(android.graphics.Paint,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: okhttp3.Response lambda$sendRequestInternal$0(java.lang.String,com.facebook.react.bridge.ReactApplicationContext,int,okhttp3.Interceptor$Chain)
com.facebook.react.animated.NativeAnimatedModule: void addPreOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
okhttp3.internal.cache.CacheRequest: okio.Sink body()
com.facebook.react.uimanager.LayoutShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
com.facebook.soloader.UnpackingSoSource$InputDso: int available()
com.facebook.react.bridge.NativeModule: void onCatalystInstanceDestroy()
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind valueOf(java.lang.String)
io.reactivex.observers.DisposableSingleObserver: void dispose()
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.Class getShadowNodeClass()
com.polidea.rxandroidble2.scan.ScanSettings$Builder: com.polidea.rxandroidble2.scan.ScanSettings$Builder setScanMode(int)
okhttp3.Response: boolean isSuccessful()
com.facebook.soloader.ElfFileChannel: com.facebook.soloader.ElfByteChannel truncate(long)
androidx.core.app.NavUtils$Api16Impl: boolean navigateUpTo(android.app.Activity,android.content.Intent)
io.reactivex.Single: io.reactivex.Single zipWith(io.reactivex.SingleSource,io.reactivex.functions.BiFunction)
okhttp3.internal.http1.Http1ExchangeCodec: okio.Sink newKnownLengthSink()
com.polidea.rxandroidble2.internal.DeviceModule: com.polidea.rxandroidble2.internal.connection.ConnectionStateChangeListener provideConnectionStateChangeListener(com.jakewharton.rxrelay2.BehaviorRelay)
com.polidea.rxandroidble2.internal.util.ByteAssociationUtil: io.reactivex.functions.Predicate descriptorPredicate(android.bluetooth.BluetoothGattDescriptor)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()
com.facebook.soloader.SysUtil: com.facebook.soloader.FileLocker getOrCreateLockOnDir(java.io.File,java.io.File,boolean)
com.facebook.react.modules.network.NetworkingModule: okhttp3.MultipartBody$Builder constructMultipartBody(com.facebook.react.bridge.ReadableArray,java.lang.String,int)
com.polidea.rxandroidble2.internal.serialization.QueueReleaseInterface: void release()
com.facebook.react.uimanager.BaseViewManager: void setTestId(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
com.polidea.rxandroidble2.internal.connection.MtuWatcher$1: boolean test(java.lang.Throwable)
io.reactivex.Single: io.reactivex.Single fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String getName()
com.facebook.react.modules.blob.FileReaderModule: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
okhttp3.internal.http2.Http2: java.lang.String formattedType$okhttp(int)
com.facebook.soloader.SoLoader: boolean loadLibrary(java.lang.String)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskFinished(double)
okhttp3.HttpUrl: HttpUrl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,java.util.List,java.lang.String,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
okhttp3.internal.ws.RealWebSocket: boolean close(int,java.lang.String)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style[] values()
com.polidea.rxandroidble2.internal.DeviceModule_ProvidesDisconnectTimeoutConfFactory: com.polidea.rxandroidble2.internal.DeviceModule_ProvidesDisconnectTimeoutConfFactory create(bleshadow.javax.inject.Provider)
io.reactivex.Observable: io.reactivex.Observable flatMapSingle(io.reactivex.functions.Function,boolean)
com.facebook.react.modules.debug.AnimationsDebugModule: void startRecordingFps()
com.polidea.rxandroidble2.RxBleClient: io.reactivex.Observable scanBleDevices(java.util.UUID[])
com.polidea.rxandroidble2.RxBleDevice: java.lang.String getMacAddress()
okhttp3.internal.cache.CacheStrategy: CacheStrategy(okhttp3.Request,okhttp3.Response)
com.polidea.rxandroidble2.internal.serialization.QueueAwaitReleaseInterface: void awaitRelease()
okhttp3.OkHttpClient$Builder: void setWriteTimeout$okhttp(int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightJNI(long,float)
okhttp3.internal.cache.DiskLruCache$snapshots$1: java.lang.Object next()
okio.ForwardingSink: okio.Sink delegate()
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: com.facebook.hermes.intl.IPlatformCollator$CaseFirst valueOf(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
io.reactivex.Flowable: io.reactivex.Flowable generate(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)
com.facebook.soloader.UnpackingSoSource$InputDsoStream: java.io.InputStream getStream()
okhttp3.internal.cache.DiskLruCache: long size()
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.polidea.rxandroidble2.internal.connection.ConnectionModule_GattWriteMtuOverheadFactory: int gattWriteMtuOverhead()
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: DalvikPurgeableDecoder()
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getNameFromAnnotation(java.lang.Class)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(android.view.View,java.lang.Integer)
io.reactivex.Single: io.reactivex.Single hide()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void initialize()
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
androidx.appcompat.app.AppCompatDelegate$Api33Impl: void localeManagerSetApplicationLocales(java.lang.Object,android.os.LocaleList)
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: Http1ExchangeCodec$AbstractSource(okhttp3.internal.http1.Http1ExchangeCodec)
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int,io.reactivex.functions.Action)
io.reactivex.Observable: io.reactivex.Observable fromFuture(java.util.concurrent.Future)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewStartOffset()
io.reactivex.Observable: io.reactivex.Observable startWith(io.reactivex.ObservableSource)
io.reactivex.Flowable: io.reactivex.Flowable scanWith(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)
com.facebook.react.views.textinput.ReactEditText: void setSelectionWatcher(com.facebook.react.views.textinput.SelectionWatcher)
com.facebook.react.bridge.PromiseImpl: PromiseImpl(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideCharacteristicPropertiesParserFactory$InstanceHolder: ConnectionModule_ProvideCharacteristicPropertiesParserFactory$InstanceHolder()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: Jdk8WithJettyBootPlatform(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class)
com.polidea.rxandroidble2.RxBleClientImpl_Factory: com.polidea.rxandroidble2.RxBleClientImpl get()
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()
kotlin.random.Random$Default$Serialized: java.lang.Object readResolve()
com.polidea.rxandroidble2.scan.ScanFilter: int getManufacturerId()
com.facebook.react.bridge.WritableNativeArray: void pushArray(com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
com.facebook.react.views.textinput.ReactTextInputManager: void setColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
io.reactivex.Observable: io.reactivex.Observable delay(long,java.util.concurrent.TimeUnit,boolean)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String)
okhttp3.Handshake: okhttp3.TlsVersion -deprecated_tlsVersion()
io.reactivex.Flowable: io.reactivex.Flowable generate(io.reactivex.functions.Consumer)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$3: AsyncStorageModule$3(com.reactnativecommunity.asyncstorage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback,com.facebook.react.bridge.ReadableArray)
okhttp3.HttpUrl: java.lang.String -deprecated_encodedFragment()
io.reactivex.Flowable: io.reactivex.Flowable retry(long,io.reactivex.functions.Predicate)
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable: void subscribeActual(io.reactivex.SingleObserver)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.facebook.soloader.DirectorySoSource: DirectorySoSource(java.io.File,int)
okio.Timeout: void intersectWith(okio.Timeout,kotlin.jvm.functions.Function0)
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: int hashCode()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
com.polidea.rxandroidble2.helpers.AdvertisedServiceUUIDExtractor: AdvertisedServiceUUIDExtractor()
com.facebook.fbreact.specs.NativeTimingSpec: java.lang.String getName()
okhttp3.internal.connection.RealConnection: void access$setHandshake$p(okhttp3.internal.connection.RealConnection,okhttp3.Handshake)
com.facebook.react.views.scroll.ReactScrollView: void setScrollAwayTopPaddingEnabledUnstable(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
io.reactivex.Flowable: io.reactivex.Flowable switchOnNextDelayError(org.reactivestreams.Publisher,int)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator: io.reactivex.ObservableTransformer emulateCallbackType(int)
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideBluetoothGattFactory: android.bluetooth.BluetoothGatt get()
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: boolean isSupported()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
okhttp3.Connection: java.net.Socket socket()
io.reactivex.Flowable: io.reactivex.Flowable zip(java.lang.Iterable,io.reactivex.functions.Function)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
okhttp3.Dispatcher: int runningCallsCount()
androidx.appcompat.widget.ListPopupWindow$Api24Impl: int getMaxAvailableHeight(android.widget.PopupWindow,android.view.View,int,boolean)
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.core.TimingModule)
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlay: void setOverlays(java.util.List)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
okhttp3.internal.http.ExchangeCodec: void writeRequestHeaders(okhttp3.Request)
com.polidea.rxandroidble2.ConnectionSetup$Builder: com.polidea.rxandroidble2.ConnectionSetup$Builder setOperationTimeout(com.polidea.rxandroidble2.Timeout)
com.facebook.react.bridge.WritableNativeMap: void putString(java.lang.String,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setPointerEnterCapture(android.view.View,boolean)
io.reactivex.Observable: void blockingSubscribe(io.reactivex.functions.Consumer)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,float)
okhttp3.OkHttpClient$Builder: void setConnectionSpecs$okhttp(java.util.List)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void addListener(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: void putBoolean(java.lang.String,boolean)
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
androidx.appcompat.widget.SwitchCompat: void setThumbTextPadding(int)
okhttp3.HttpUrl: java.lang.String -deprecated_password()
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: io.reactivex.Observable observeDisconnect()
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
com.ghostcommv2.MainApplication: MainApplication()
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
io.reactivex.Observable: io.reactivex.Observable buffer(long,java.util.concurrent.TimeUnit,int)
com.facebook.soloader.SoLoader$1: SoLoader$1(boolean,java.lang.String,java.lang.String,java.lang.Runtime,java.lang.reflect.Method)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPointerEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Integer)
io.reactivex.Observable: java.lang.Object blockingLast()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.facebook.react.bridge.JavaJSExecutor: void setGlobalVariable(java.lang.String,java.lang.String)
com.polidea.rxandroidble2.internal.operations.LegacyScanOperation: boolean startScan(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,java.lang.Object)
okhttp3.internal.http2.PushObserver: void onReset(int,okhttp3.internal.http2.ErrorCode)
com.facebook.react.modules.blob.BlobModule: byte[] resolve(android.net.Uri)
okhttp3.HttpUrl: java.net.URI -deprecated_uri()
com.reactnativecommunity.asyncstorage.SerialExecutor: void execute(java.lang.Runnable)
com.facebook.react.fabric.FabricUIManager: void onHostPause()
kotlin.jvm.internal.PropertyReference: boolean isConst()
okhttp3.Cache$urls$1: Cache$urls$1(okhttp3.Cache)
okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()
androidx.appcompat.widget.TooltipCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
io.reactivex.internal.operators.single.SingleInternalHelper$NoSuchElementCallable: io.reactivex.internal.operators.single.SingleInternalHelper$NoSuchElementCallable valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(okio.Buffer)
com.facebook.react.fabric.interop.InteropEventEmitter: void overrideEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
okhttp3.internal.http2.Http2ExchangeCodec$Companion: Http2ExchangeCodec$Companion()
com.facebook.react.views.modal.ReactModalHostView: void setOnRequestCloseListener(com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener)
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: boolean isCreatingModule()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.NativeMethodCallInvokerHolder getNativeMethodCallInvokerHolder()
io.reactivex.Single: io.reactivex.Single flatMap(io.reactivex.functions.Function)
io.reactivex.Observable: io.reactivex.Observable switchOnNext(io.reactivex.ObservableSource,int)
okhttp3.internal.ws.MessageDeflater: void deflate(okio.Buffer)
io.reactivex.Single: io.reactivex.Single fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.polidea.rxandroidble2.RxBleClient$State: com.polidea.rxandroidble2.RxBleClient$State valueOf(java.lang.String)
com.polidea.rxandroidble2.internal.operations.OperationsProvider: com.polidea.rxandroidble2.internal.operations.CharacteristicReadOperation provideReadCharacteristic(android.bluetooth.BluetoothGattCharacteristic)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.facebook.soloader.NativeDeps: java.lang.String[] awaitGetDepsFromPrecomputedDeps(java.lang.String)
com.polidea.rxandroidble2.internal.operations.OperationsProvider: com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation provideConnectionPriorityChangeOperation(int,long,java.util.concurrent.TimeUnit)
io.reactivex.Observable: io.reactivex.Observable switchMapMaybeDelayError(io.reactivex.functions.Function)
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean requestIsOneShot(java.io.IOException,okhttp3.Request)
io.reactivex.Flowable: io.reactivex.Single sequenceEqual(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiPredicate)
okhttp3.internal.ws.WebSocketExtensions: java.lang.Integer component2()
com.facebook.react.bridge.ReadableNativeMap: boolean getBoolean(java.lang.String)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsAndroidWearFactory: java.lang.Boolean get()
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map getModuleMap()
com.facebook.react.fabric.FabricUIManager: void onRequestEventBeat()
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignContentJNI(long,int)
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setIsClippedToScreen(android.widget.PopupWindow,boolean)
com.polidea.rxandroidble2.RxBleClient$State: com.polidea.rxandroidble2.RxBleClient$State[] values()
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.bridge.CxxModuleWrapper: CxxModuleWrapper(com.facebook.jni.HybridData)
io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(java.lang.Iterable,int,int)
com.bleplx.adapter.BleModule: java.util.List descriptorsForService(int,java.lang.String)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper getFragmentManagerHelper()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue access$getWriterQueue$p(okhttp3.internal.http2.Http2Connection)
com.polidea.rxandroidble2.scan.ScanFilter$Builder: ScanFilter$Builder()
com.facebook.react.bridge.ReactContext: void removeWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
com.polidea.rxandroidble2.internal.operations.CharacteristicReadOperation: CharacteristicReadOperation(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration,android.bluetooth.BluetoothGattCharacteristic)
androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)
okhttp3.internal.ws.WebSocketProtocol: WebSocketProtocol()
okhttp3.MultipartBody: java.util.List -deprecated_parts()
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
okhttp3.Cookie: Cookie(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,kotlin.jvm.internal.DefaultConstructorMarker)
com.polidea.rxandroidble2.internal.operations.ReadRssiOperation: boolean startOperation(android.bluetooth.BluetoothGatt)
io.reactivex.Single: io.reactivex.Single retryWhen(io.reactivex.functions.Function)
com.facebook.react.uimanager.UIManagerModule: void onHostResume()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: int getStyleFromString(java.lang.String)
okhttp3.internal.http2.Http2Reader$Handler: void priority(int,int,int,boolean)
com.polidea.rxandroidble2.internal.util.CheckerPermission_Factory: com.polidea.rxandroidble2.internal.util.CheckerPermission get()
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Integer extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.soloader.SoLoader$TestOnlyUtils: void resetStatus()
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,int,com.facebook.react.bridge.ReadableArray)
kotlin.SynchronizedLazyImpl: java.lang.Object writeReplace()
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.Throwable)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyToByteArray(long,byte[],int,int)
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter: io.reactivex.Observable asValueOnlyObservable()
okhttp3.ResponseBody$Companion$asResponseBody$1: okhttp3.MediaType contentType()
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$2: DisconnectionRouter$2(com.polidea.rxandroidble2.internal.connection.DisconnectionRouter)
com.polidea.rxandroidble2.internal.operations.DescriptorReadOperation: boolean startOperation(android.bluetooth.BluetoothGatt)
com.polidea.rxandroidble2.internal.connection.ConnectorImpl: io.reactivex.Observable observeDisconnections(com.polidea.rxandroidble2.internal.connection.ConnectionComponent)
okhttp3.EventListener$Factory: okhttp3.EventListener create(okhttp3.Call)
androidx.core.view.ViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper: void stopLegacyLeScan(android.bluetooth.BluetoothAdapter$LeScanCallback)
com.polidea.rxandroidble2.RxBleClient: com.polidea.rxandroidble2.RxBleClient create(android.content.Context)
okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1: java.text.DateFormat initialValue()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
com.facebook.react.uimanager.BaseViewManager: void setPointerEnter(android.view.View,boolean)
io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer)
com.facebook.react.uimanager.ViewGroupManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.polidea.rxandroidble2.internal.logger.LoggerUtil: void logOperationRunning(com.polidea.rxandroidble2.internal.operations.Operation)
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsReferenceBaselineJNI(long)
okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()
okhttp3.HttpUrl: java.lang.String redact()
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager_Factory: com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager newInstance(com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueue,android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.operations.OperationsProvider)
okhttp3.CacheControl$Companion: CacheControl$Companion()
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
io.reactivex.Observable: io.reactivex.Observable concatMapEagerDelayError(io.reactivex.functions.Function,boolean)
okhttp3.CacheControl: CacheControl(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
com.polidea.rxandroidble2.RxBleScanResult: java.lang.String toString()
com.facebook.soloader.DirectorySoSource: void loadDependencies(java.lang.String,com.facebook.soloader.ElfByteChannel,int,android.os.StrictMode$ThreadPolicy)
com.polidea.rxandroidble2.ConnectionSetup: ConnectionSetup(boolean,boolean,com.polidea.rxandroidble2.Timeout)
okhttp3.Headers$Companion: okhttp3.Headers of(java.lang.String[])
com.polidea.rxandroidble2.internal.util.DisposableUtil: io.reactivex.observers.DisposableSingleObserver disposableSingleObserverFromEmitter(io.reactivex.ObservableEmitter)
com.facebook.soloader.UnpackingSoSource: boolean depsChanged(byte[],byte[])
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.WritableMap copy()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.view.ReactViewManager: void handleSetPressed(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType valueOf(java.lang.String)
com.polidea.rxandroidble2.ClientComponent$ClientModule: com.polidea.rxandroidble2.scan.BackgroundScanner bindBackgroundScanner(com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl)
okhttp3.HttpUrl$Builder: java.lang.String toString()
io.reactivex.Flowable: io.reactivex.Flowable sample(org.reactivestreams.Publisher)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
okhttp3.internal.cache.DiskLruCache$Snapshot: DiskLruCache$Snapshot(okhttp3.internal.cache.DiskLruCache,java.lang.String,long,java.util.List,long[])
com.facebook.react.animated.EventAnimationDriver: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
androidx.core.app.ComponentActivity: boolean superDispatchKeyEvent(android.view.KeyEvent)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentVoiceOverState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.polidea.rxandroidble2.internal.scan.ScanRecordImplCompat: java.util.Map getServiceData()
com.polidea.rxandroidble2.RxBleDeviceServices$5: java.lang.Object apply(java.lang.Object)
com.facebook.react.modules.clipboard.ClipboardModule: void setString(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable skipLast(int)
com.facebook.react.views.textinput.ReactEditText: int getStagedInputType()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(android.view.View)
okhttp3.Authenticator$Companion: Authenticator$Companion()
com.polidea.rxandroidble2.exceptions.BleScanException: BleScanException(int,java.util.Date)
io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
androidx.appcompat.widget.DropDownListView$Api33Impl: boolean isSelectedChildViewEnabled(android.widget.AbsListView)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
io.reactivex.internal.subscriptions.EmptySubscription: io.reactivex.internal.subscriptions.EmptySubscription valueOf(java.lang.String)
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher: void notifyNativeConnectionStateCallback(android.bluetooth.BluetoothGatt,int,int)
com.facebook.react.modules.image.ImageLoaderModule: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
com.polidea.rxandroidble2.internal.connection.ConnectionParametersImpl: int getSlaveLatency()
androidx.core.os.TraceCompat$Api18Impl: void beginSection(java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setMaxHeight(com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
com.himelbrand.ble.peripheral.RNBLEModule: void addCharacteristicToService(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)
androidx.core.view.ViewCompat$Api15Impl: boolean hasOnClickListeners(android.view.View)
okhttp3.internal.Util: boolean isSensitiveHeader(java.lang.String)
com.bleplx.adapter.BleModule: void changeAdapterState(com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
com.polidea.rxandroidble2.exceptions.BleDisconnectedException: com.polidea.rxandroidble2.exceptions.BleDisconnectedException adapterDisabled(java.lang.String)
io.reactivex.Observable: io.reactivex.Observable generate(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: java.lang.String getName()
com.facebook.react.modules.core.JSTimers: void callIdleCallbacks(double)
io.reactivex.Flowable: io.reactivex.Observable toObservable()
com.facebook.react.bridge.ReadableNativeMap: boolean equals(java.lang.Object)
okhttp3.internal.cache.DiskLruCache$Entry: boolean getZombie$okhttp()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideFinalizationCloseableFactory: ClientComponent_ClientModule_ProvideFinalizationCloseableFactory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.soloader.UnpackingSoSource: java.lang.String getLibraryPath(java.lang.String)
com.polidea.rxandroidble2.internal.connection.ConnectionModule_GattWriteMtuOverheadFactory$InstanceHolder: ConnectionModule_GattWriteMtuOverheadFactory$InstanceHolder()
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.Throwable)
com.facebook.react.views.view.ReactViewGroup: void setRemoveClippedSubviews(boolean)
com.facebook.react.bridge.UIManagerListener: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
io.reactivex.Observable: io.reactivex.Single any(io.reactivex.functions.Predicate)
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl_Factory: ClientOperationQueueImpl_Factory(bleshadow.javax.inject.Provider)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String)
okhttp3.Request$Builder: void setBody$okhttp(okhttp3.RequestBody)
com.facebook.react.modules.debug.DevSettingsModule: void reloadWithReason(java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher[] values()
com.facebook.react.fabric.FabricUIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
io.reactivex.observers.DisposableObserver: void onStart()
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: void nativePinBitmap(android.graphics.Bitmap)
io.reactivex.Observable: java.lang.Iterable blockingMostRecent(java.lang.Object)
kotlin.jvm.internal.PropertyReference: int hashCode()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setRole(java.lang.String)
com.facebook.react.fabric.ReactNativeConfig: double getDouble(java.lang.String)
androidx.fragment.app.FragmentActivity: void onResumeFragments()
okhttp3.internal.tls.CertificateChainCleaner$Companion: okhttp3.internal.tls.CertificateChainCleaner get(java.security.cert.X509Certificate[])
com.facebook.react.views.image.ReactImageView: void setBorderWidth(float)
okhttp3.OkHttpClient: OkHttpClient()
io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,boolean)
okhttp3.internal.http2.Http2Connection: void pushHeadersLater$okhttp(int,java.util.List,boolean)
okhttp3.TlsVersion: java.lang.String javaName()
io.reactivex.Flowable: io.reactivex.Flowable zipIterable(java.lang.Iterable,io.reactivex.functions.Function,boolean,int)
okhttp3.HttpUrl: java.net.URI uri()
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiFunction)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothCallbacksSchedulerFactory: ClientComponent_ClientModule_ProvideBluetoothCallbacksSchedulerFactory()
okhttp3.internal.cache.DiskLruCache: void access$setMostRecentTrimFailed$p(okhttp3.internal.cache.DiskLruCache,boolean)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void flattenAnimatedNodeOffset(double)
okhttp3.HttpUrl: java.lang.String scheme()
com.facebook.soloader.NativeDeps$1: NativeDeps$1(android.content.Context,boolean)
io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.internal.http2.Http2Stream$FramingSink: void write(okio.Buffer,long)
androidx.drawerlayout.widget.DrawerLayout: void setScrimColor(int)
okhttp3.MultipartReader$Part: okio.BufferedSource body()
okhttp3.Address: okhttp3.Authenticator -deprecated_proxyAuthenticator()
okhttp3.internal.http.ExchangeCodec: okhttp3.internal.connection.RealConnection getConnection()
com.facebook.soloader.MinElf$ISA: java.lang.String toString()
okhttp3.internal.http2.Hpack$Reader: Hpack$Reader(okio.Source,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.reactivex.Single: io.reactivex.Single error(java.lang.Throwable)
io.reactivex.Single: io.reactivex.Flowable concatArray(io.reactivex.SingleSource[])
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)
okhttp3.internal.proxy.NullProxySelector: java.util.List select(java.net.URI)
com.polidea.rxandroidble2.internal.RxBleDeviceImpl: io.reactivex.Observable observeConnectionStateChanges()
com.facebook.react.fabric.FabricUIManager: void onAnimationStarted()
com.facebook.react.ReactRootView: java.lang.String getJSModuleName()
okhttp3.HttpUrl: java.lang.String password()
okhttp3.ConnectionSpec$Builder: void setCipherSuites$okhttp(java.lang.String[])
okhttp3.OkHttpClient$Builder: java.net.ProxySelector getProxySelector$okhttp()
com.facebook.react.bridge.ColorPropConverter: int resolveThemeAttribute(android.content.Context,java.lang.String)
com.facebook.react.ReactActivity: void onWindowFocusChanged(boolean)
com.polidea.rxandroidble2.internal.ScanResultInterface: com.polidea.rxandroidble2.scan.ScanRecord getScanRecord()
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType valueOf(java.lang.String)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type[] values()
okhttp3.internal.cache2.Relay$Companion: okhttp3.internal.cache2.Relay edit(java.io.File,okio.Source,okio.ByteString,long)
okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)
com.bleplx.adapter.BleModule: java.util.List getServicesForDevice(java.lang.String)
com.facebook.soloader.SoSource: java.io.File unpackLibrary(java.lang.String)
com.facebook.react.bridge.FallbackJSBundleLoader: FallbackJSBundleLoader(java.util.List)
okhttp3.internal.concurrent.TaskQueue$execute$1: TaskQueue$execute$1(kotlin.jvm.functions.Function0,java.lang.String,boolean,java.lang.String,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetOverflowJNI(long,int)
okhttp3.internal.platform.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)
com.polidea.rxandroidble2.internal.operations.ReadRssiOperation: io.reactivex.Single getCallback(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback)
com.facebook.react.modules.appearance.AppearanceModule: void removeListeners(double)
okhttp3.Callback: void onFailure(okhttp3.Call,java.io.IOException)
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: java.util.Map getConstants()
okhttp3.internal.connection.ExchangeFinder: boolean sameHostAndPort(okhttp3.HttpUrl)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getConstants()
kotlin.jvm.internal.Lambda: int getArity()
com.polidea.rxandroidble2.exceptions.BleGattException: BleGattException(int,com.polidea.rxandroidble2.exceptions.BleGattOperationType)
okhttp3.internal.http2.Http2Connection: boolean access$isShutdown$p(okhttp3.internal.http2.Http2Connection)
com.facebook.soloader.ExoSoSource$ExoUnpacker$FileBackedInputDsoIterator: ExoSoSource$ExoUnpacker$FileBackedInputDsoIterator(com.facebook.soloader.ExoSoSource$ExoUnpacker)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
io.reactivex.Observable: io.reactivex.Observable distinctUntilChanged()
io.reactivex.Flowable: io.reactivex.Single sequenceEqual(org.reactivestreams.Publisher,org.reactivestreams.Publisher)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: boolean unstable_shouldEnableLegacyModuleInterop()
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.facebook.fbreact.specs.NativeAppearanceSpec: void addListener(java.lang.String)
com.facebook.jni.HybridData$Destructor: void deleteNative(long)
com.facebook.react.fabric.FabricUIManager: void setJSResponder(int,int,int,boolean)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder username(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setCursorColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideCharacteristicPropertiesParserFactory$InstanceHolder: com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideCharacteristicPropertiesParserFactory access$000()
io.reactivex.Flowable: io.reactivex.Flowable concatWith(io.reactivex.SingleSource)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDisableIntervalMomentum(boolean)
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: void close()
com.facebook.react.modules.toast.ToastModule: ToastModule(com.facebook.react.bridge.ReactApplicationContext)
com.polidea.rxandroidble2.internal.serialization.OperationPriorityFifoBlockingQueue: OperationPriorityFifoBlockingQueue()
okhttp3.internal.cache.CacheStrategy: okhttp3.Request getNetworkRequest()
io.reactivex.Flowable: io.reactivex.Flowable timeInterval()
com.polidea.rxandroidble2.scan.ScanFilter: java.lang.String getDeviceAddress()
okhttp3.internal.cache.DiskLruCache$Entry: void setZombie$okhttp(boolean)
com.bleplx.adapter.BleModule: void lambda$safeReadCharacteristicForDevice$36(com.bleplx.adapter.utils.SafeExecutor,java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.SwitchCompat: void setTrackTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.Observable: io.reactivex.Observable mergeDelayError(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.Integer)
com.polidea.rxandroidble2.exceptions.BleConflictingNotificationAlreadySetException: BleConflictingNotificationAlreadySetException(java.util.UUID,boolean)
io.reactivex.Observable: io.reactivex.Single sequenceEqual(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiPredicate)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
com.polidea.rxandroidble2.LogOptions: LogOptions(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.lang.Boolean,com.polidea.rxandroidble2.LogOptions$Logger)
io.reactivex.Observable: io.reactivex.Observable mergeArrayDelayError(io.reactivex.ObservableSource[])
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow valueOf(java.lang.String)
com.facebook.react.bridge.JSIModuleProvider: com.facebook.react.bridge.JSIModule get()
com.facebook.react.bridge.ReadableNativeArray: boolean equals(java.lang.Object)
com.polidea.rxandroidble2.internal.logger.LoggerUtil: LoggerUtil()
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: RxBleGattCallback(io.reactivex.Scheduler,com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider,com.polidea.rxandroidble2.internal.connection.DisconnectionRouter,com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
okhttp3.Request: okhttp3.RequestBody body()
okhttp3.internal.Util: java.util.List toHeaderList(okhttp3.Headers)
com.polidea.rxandroidble2.helpers.LocationServicesOkObservable_Factory: com.polidea.rxandroidble2.helpers.LocationServicesOkObservable_Factory create(bleshadow.javax.inject.Provider)
com.polidea.rxandroidble2.RxBleConnection$WriteOperationRetryStrategy$LongWriteFailure: com.polidea.rxandroidble2.exceptions.BleGattException getCause()
io.reactivex.Observable: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
com.polidea.rxandroidble2.internal.connection.IllegalOperationMessageCreator_Factory: IllegalOperationMessageCreator_Factory(bleshadow.javax.inject.Provider)
io.reactivex.Flowable: io.reactivex.Flowable sorted()
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: boolean onHeaders(int,java.util.List,boolean)
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: RouteSelector$resetNextProxy$1(okhttp3.internal.connection.RouteSelector,java.net.Proxy,okhttp3.HttpUrl)
com.polidea.rxandroidble2.RxBleClient: java.util.Set getBondedDevices()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideTargetSdkFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideTargetSdkFactory create(bleshadow.javax.inject.Provider)
com.facebook.react.views.text.ReactRawTextManager: ReactRawTextManager()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReadableNativeMap: int hashCode()
com.himelbrand.ble.peripheral.RNBLEModule: void addService(java.lang.String,java.lang.Boolean)
com.facebook.react.modules.network.NetworkingModule: void addRequest(int)
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl_Factory: com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.internal.ws.RealWebSocket: void onReadMessage(java.lang.String)
okhttp3.MultipartBody: java.lang.String boundary()
com.facebook.react.bridge.ReadableNativeMap$2: ReadableNativeMap$2(com.facebook.react.bridge.ReadableNativeMap,java.lang.String[])
com.polidea.rxandroidble2.RxBleDevice: io.reactivex.Observable observeConnectionStateChanges()
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType valueOf(java.lang.String)
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.http.ExchangeCodec find(okhttp3.OkHttpClient,okhttp3.internal.http.RealInterceptorChain)
com.bleplx.adapter.errors.BleErrorCode: com.bleplx.adapter.errors.BleErrorCode[] values()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideTargetSdkFactory: java.lang.Integer get()
io.reactivex.Flowable: io.reactivex.Flowable takeLast(int)
com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl: BackgroundScannerImpl(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter,com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator,com.polidea.rxandroidble2.internal.scan.InternalToExternalScanResultConverter)
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge[] values()
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.debug.DevSettingsModule)
com.polidea.rxandroidble2.RxBleDeviceServices: RxBleDeviceServices(java.util.List)
androidx.fragment.app.FragmentActivity: void markFragmentsCreated()
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: DaggerClientComponent$DeviceComponentImpl(com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl,java.lang.String)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: BouncyCastleSocketAdapter()
io.reactivex.Flowable: io.reactivex.Flowable zipWith(java.lang.Iterable,io.reactivex.functions.BiFunction)
com.polidea.rxandroidble2.internal.scan.ScanRecordImplCompat: java.util.List getServiceUuids()
com.polidea.rxandroidble2.internal.util.CheckerScanPermission_Factory: CheckerScanPermission_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState: RxBleConnection$RxBleConnectionState(java.lang.String,int,java.lang.String)
com.polidea.rxandroidble2.RxBleConnection$LongWriteOperationBuilder: com.polidea.rxandroidble2.RxBleConnection$LongWriteOperationBuilder setMaxBatchSize(int)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.reactivex.Flowable: io.reactivex.Single lastOrError()
okhttp3.Challenge: java.nio.charset.Charset charset()
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: Android10SocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.JavaMethodWrapper$10: com.facebook.react.bridge.Promise extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.fabric.FabricUIManager: void onHostResume()
com.polidea.rxandroidble2.internal.RxBleLog: void w(java.lang.Throwable,java.lang.String,java.lang.Object[])
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(com.facebook.react.views.progressbar.ProgressBarContainerView,double)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion: StandardAndroidSocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder certificatePinner(okhttp3.CertificatePinner)
io.reactivex.Observable: io.reactivex.Observable sample(io.reactivex.ObservableSource,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontVariant(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.ReadableArray)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableIndicationValueFactory$InstanceHolder: ClientComponent_ClientModule_ProvideEnableIndicationValueFactory$InstanceHolder()
okhttp3.OkHttpClient$Builder: java.util.List interceptors()
com.polidea.rxandroidble2.LogOptions$Builder: com.polidea.rxandroidble2.LogOptions$Builder setMacAddressLogSetting(java.lang.Integer)
okhttp3.internal.connection.RealConnection: okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams$okhttp(okhttp3.internal.connection.Exchange)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
com.facebook.soloader.ExoSoSource$ExoUnpacker$FileBackedInputDsoIterator: boolean hasNext()
io.reactivex.Flowable: io.reactivex.Flowable doAfterTerminate(io.reactivex.functions.Action)
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String getName()
com.facebook.react.bridge.queue.MessageQueueThread: void resetPerfStats()
okhttp3.ConnectionSpec: boolean equals(java.lang.Object)
com.facebook.react.bridge.NativeMap: NativeMap(com.facebook.jni.HybridData)
androidx.core.util.ObjectsCompat$Api19Impl: int hash(java.lang.Object[])
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
com.polidea.rxandroidble2.internal.connection.ConnectionParametersImpl: int getConnectionInterval()
com.polidea.rxandroidble2.internal.util.QueueReleasingEmitterWrapper: QueueReleasingEmitterWrapper(io.reactivex.ObservableEmitter,com.polidea.rxandroidble2.internal.serialization.QueueReleaseInterface)
okhttp3.internal.platform.OpenJSSEPlatform$Companion: OpenJSSEPlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(java.lang.Iterable,int)
okhttp3.internal.http.StatusLine$Companion: StatusLine$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Completable writeDescriptor(java.util.UUID,java.util.UUID,java.util.UUID,byte[])
okhttp3.Call: void enqueue(okhttp3.Callback)
com.reactnativecommunity.asyncstorage.SerialExecutor$1: void run()
com.polidea.rxandroidble2.internal.connection.DisconnectAction_Factory: com.polidea.rxandroidble2.internal.connection.DisconnectAction newInstance(com.polidea.rxandroidble2.internal.serialization.ClientOperationQueue,com.polidea.rxandroidble2.internal.operations.DisconnectOperation)
com.facebook.react.modules.dialog.DialogModule: void invalidate()
com.facebook.react.bridge.ModuleHolder: boolean hasInstance()
com.facebook.react.modules.network.NetworkingModule: void addListener(java.lang.String)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDeviceSdkFactory: java.lang.Integer get()
com.facebook.soloader.ElfByteChannel: int read(java.nio.ByteBuffer,long)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignItemsJNI(long,int)
io.reactivex.Observable: io.reactivex.Single toMap(io.reactivex.functions.Function)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
okhttp3.internal.http2.Http2Stream: void waitForIo$okhttp()
com.polidea.rxandroidble2.LogOptions$Logger: void log(int,java.lang.String,java.lang.String)
com.facebook.react.bridge.ReactMarkerConstants: boolean hasMatchingNameMarker()
com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation_Factory: com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation get()
androidx.core.os.BundleApi21ImplKt: void putSize(android.os.Bundle,java.lang.String,android.util.Size)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeMemcpy(long,long,int)
okhttp3.internal.cache.DiskLruCache: int getValueCount$okhttp()
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.JavaOnlyMap: java.util.HashMap toHashMap()
com.facebook.react.bridge.ModuleHolder: java.lang.String getClassName()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] getLocalTypeArray()
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: com.facebook.react.bridge.WritableArray toByteArray(byte[])
okhttp3.Route: java.net.InetSocketAddress socketAddress()
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.JSEngineResolutionAlgorithm: com.facebook.react.JSEngineResolutionAlgorithm valueOf(java.lang.String)
com.facebook.soloader.SoLoader: SoLoader()
com.facebook.react.bridge.ReactMarker: void clearFabricMarkerListeners()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: JSCJavaScriptExecutorFactory(java.lang.String,java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long,boolean,int)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator_Factory: java.lang.Object get()
com.facebook.react.bridge.DynamicFromMap: boolean asBoolean()
okio.AsyncTimeout: boolean exit()
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$2: boolean isDisconnectedOrDisconnecting(int)
okhttp3.ConnectionSpec: java.lang.String toString()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.NativeMethodCallInvokerHolder getNativeMethodCallInvokerHolder()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel[] values()
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(java.lang.String,double)
kotlin.jvm.internal.CallableReference: boolean isSuspend()
com.polidea.rxandroidble2.internal.operations.ScanOperationApi21: boolean startScan(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,java.lang.Object)
io.reactivex.BackpressureOverflowStrategy: io.reactivex.BackpressureOverflowStrategy[] values()
com.polidea.rxandroidble2.internal.RxBleLog$1: RxBleLog$1()
io.reactivex.Observable: java.lang.Iterable blockingIterable()
okhttp3.HttpUrl: java.lang.String -deprecated_host()
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String getName()
io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.appcompat.app.AppCompatActivity: void onStop()
okhttp3.MultipartBody$Part$Companion: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody)
com.facebook.react.views.modal.ReactModalHostView: int getChildCount()
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.String,javax.inject.Provider)
io.reactivex.Observable: io.reactivex.Observable sample(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi18_Factory: com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi18 newInstance()
okhttp3.internal.connection.Exchange: boolean isCoalescedConnection$okhttp()
okhttp3.ResponseBody: okhttp3.ResponseBody create(java.lang.String,okhttp3.MediaType)
com.bleplx.adapter.BleModule: io.reactivex.ObservableSource lambda$safeConnectToDevice$28(com.polidea.rxandroidble2.RxBleConnection)
com.facebook.react.ReactNativeHost: com.facebook.react.bridge.JavaScriptExecutorFactory getJavaScriptExecutorFactory()
com.bleplx.adapter.BleModule: java.lang.String getLogLevel()
com.reactnativecommunity.asyncstorage.AsyncStorageModule$6: AsyncStorageModule$6(com.reactnativecommunity.asyncstorage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback)
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence getAccessibilityClassName()
com.facebook.react.bridge.BaseJavaModule: void initialize()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$11: void protectedRun(io.reactivex.ObservableEmitter,com.polidea.rxandroidble2.internal.serialization.QueueReleaseInterface)
okhttp3.internal.http2.Hpack$Writer: void resizeHeaderTable(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.polidea.rxandroidble2.RxBleAdapterStateObservable$1: RxBleAdapterStateObservable$1(com.polidea.rxandroidble2.RxBleAdapterStateObservable,android.content.Context)
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function9)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: NativeJpegTranscoderFactory(int,boolean,boolean)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
okhttp3.internal.publicsuffix.PublicSuffixDatabase$findMatchingRule$1: PublicSuffixDatabase$findMatchingRule$1(okhttp3.internal.publicsuffix.PublicSuffixDatabase)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getJSCallInvokerHolder()
com.facebook.react.ReactActivity: void onBackPressed()
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion: StandardAndroidSocketAdapter$Companion()
com.facebook.react.bridge.CallbackImpl: CallbackImpl(com.facebook.react.bridge.JSInstance,int)
com.facebook.react.bridge.ModuleHolder: void destroy()
okhttp3.Response: int -deprecated_code()
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
okhttp3.internal.http2.Http2Stream$FramingSink: void setClosed(boolean)
okhttp3.internal.http2.Http2Connection: void close$okhttp(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode,java.io.IOException)
com.facebook.react.animated.NativeAnimatedModule: void willMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getHitSlopRect()
okhttp3.internal.http2.Hpack$Writer: void adjustDynamicTableByteCount()
okhttp3.internal.connection.RealConnection: boolean routeMatchesAny(java.util.List)
okio.ForwardingSource: okio.Source -deprecated_delegate()
com.polidea.rxandroidble2.DaggerClientComponent: com.polidea.rxandroidble2.ClientComponent$Builder builder()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
com.facebook.jni.DestructorThread$Terminus: void destruct()
com.facebook.react.modules.core.TimingModule: void deleteTimer(double)
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
com.polidea.rxandroidble2.DaggerClientComponent$Builder: DaggerClientComponent$Builder()
okhttp3.internal.http2.Http2Stream: boolean isLocallyInitiated()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean ensureDatabase()
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(okio.ByteString,int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cookieJar(okhttp3.CookieJar)
androidx.activity.ComponentActivity: void removeOnTrimMemoryListener(androidx.core.util.Consumer)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
com.facebook.react.bridge.ReactBridge: void staticInit()
okhttp3.internal.cache2.Relay: okio.ByteString metadata()
com.facebook.soloader.FileLocker: void close()
com.polidea.rxandroidble2.helpers.ByteArrayBatchObservable$1: void accept(io.reactivex.Emitter)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder fragment(java.lang.String)
okhttp3.internal.http.StatusLine: java.lang.String toString()
io.reactivex.Flowable: io.reactivex.Flowable flatMapSingle(io.reactivex.functions.Function,boolean,int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(android.view.View,boolean)
okhttp3.Handshake: java.security.Principal -deprecated_peerPrincipal()
okhttp3.OkHttpClient$Builder: java.net.Proxy getProxy$okhttp()
com.facebook.soloader.SoLoader: boolean isInitialized()
com.reactnativecommunity.asyncstorage.AsyncStorageModule$5: void doInBackgroundGuarded(java.lang.Void[])
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableNotificationValueFactory: byte[] get()
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$7: DisconnectionRouter$7()
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign[] values()
com.polidea.rxandroidble2.scan.ScanFilter: boolean equals(java.lang.Object)
com.facebook.react.modules.network.NetworkingModule: void initialize()
okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)
com.facebook.fbreact.specs.NativeAppStateSpec: void addListener(java.lang.String)
com.facebook.react.bridge.ReadableNativeArray: ReadableNativeArray(com.facebook.jni.HybridData)
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache: java.lang.Object put(java.lang.Object,java.lang.Object)
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: io.reactivex.Completable setCharacteristicNotification(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,boolean)
io.reactivex.Observable: io.reactivex.Observable takeLast(long,java.util.concurrent.TimeUnit,boolean)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeValue(double,double)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthJNI(long,float)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideRecommendedConnectRuntimePermissionNamesFactory: ClientComponent_ClientModule_ProvideRecommendedConnectRuntimePermissionNamesFactory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.turbomodule.core.TurboModuleInteropUtils: int getJsArgCount(java.lang.String,java.lang.String,java.lang.Class[])
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices: java.lang.String createServiceName(android.bluetooth.BluetoothGattService)
com.polidea.rxandroidble2.exceptions.BleScanException: int getReason()
okhttp3.internal.http.RetryAndFollowUpInterceptor: int retryAfter(okhttp3.Response,int)
okhttp3.internal.concurrent.TaskQueue$schedule$2: TaskQueue$schedule$2(kotlin.jvm.functions.Function0,java.lang.String,java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.appcompat.widget.SearchView: int getInputType()
okhttp3.internal.platform.android.DeferredSocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.internal.http2.Http2Writer: void goAway(int,okhttp3.internal.http2.ErrorCode,byte[])
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: java.lang.String binarySearch(byte[],byte[][],int)
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl: ConnectionOperationQueueImpl(java.lang.String,com.polidea.rxandroidble2.internal.connection.DisconnectionRouterOutput,java.util.concurrent.ExecutorService,io.reactivex.Scheduler)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilder: com.polidea.rxandroidble2.internal.scan.ScanSetup build(com.polidea.rxandroidble2.scan.ScanSettings,com.polidea.rxandroidble2.scan.ScanFilter[])
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
io.reactivex.Observable: io.reactivex.Observable skipLast(long,java.util.concurrent.TimeUnit,boolean)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void finishOperationBatch()
com.polidea.rxandroidble2.helpers.ValueInterpreter: int unsignedBytesToInt(byte,byte)
io.reactivex.Flowable: io.reactivex.Flowable concatMapSingle(io.reactivex.functions.Function)
com.polidea.rxandroidble2.internal.util.ClientStateObservable$3: java.lang.Object apply(java.lang.Object)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableNotificationValueFactory: ClientComponent_ClientModule_ProvideEnableNotificationValueFactory()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager(com.facebook.react.views.scroll.FpsListener)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder allEnabledCipherSuites()
io.reactivex.Observable: io.reactivex.Observable buffer(io.reactivex.ObservableSource,java.util.concurrent.Callable)
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactScrollView)
com.facebook.soloader.NativeDeps: boolean useDepsFile(android.content.Context,boolean,boolean)
okhttp3.internal.http.HttpHeaders: java.lang.String readToken(okio.Buffer)
okhttp3.Cookie: boolean secure()
okhttp3.HttpUrl$Builder: void setPort$okhttp(int)
com.facebook.react.uimanager.UIManagerModule: java.lang.String getName()
okhttp3.MediaType$Companion: okhttp3.MediaType -deprecated_parse(java.lang.String)
com.polidea.rxandroidble2.internal.operations.CharacteristicWriteOperation: CharacteristicWriteOperation(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration,android.bluetooth.BluetoothGattCharacteristic,byte[])
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$1: void accept(java.lang.Throwable)
com.polidea.rxandroidble2.ClientComponent$ClientModule: int provideDeviceSdk()
com.facebook.react.modules.core.JSTimers: void callTimers(com.facebook.react.bridge.WritableArray)
okhttp3.internal.Util: java.lang.String peerName(java.net.Socket)
com.facebook.yoga.YogaNative: void jni_YGNodeRemoveAllChildrenJNI(long)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetAspectRatioJNI(long)
io.reactivex.Flowable: io.reactivex.Flowable mergeWith(io.reactivex.MaybeSource)
okhttp3.internal.connection.RealCall: boolean isExecuted()
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices: void appendDescriptorNameHeader(java.lang.StringBuilder,android.bluetooth.BluetoothGattDescriptor)
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewBackgroundDrawable getOrCreateReactViewBackground()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec viewManagerSpec(javax.inject.Provider)
okhttp3.OkHttpClient: boolean followSslRedirects()
androidx.activity.ComponentActivity: void removeOnConfigurationChangedListener(androidx.core.util.Consumer)
okhttp3.internal.http2.Http2Stream$FramingSink: void setFinished(boolean)
com.facebook.react.bridge.ModuleHolder: java.lang.String getName()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
okhttp3.internal.platform.OpenJSSEPlatform$Companion: boolean isSupported()
com.facebook.react.turbomodule.core.TurboModuleInteropUtils$ParsingException: TurboModuleInteropUtils$ParsingException(java.lang.String,java.lang.String)
com.facebook.react.views.view.ReactViewManager: void nextFocusUp(com.facebook.react.views.view.ReactViewGroup,int)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothAdapterFactory: android.bluetooth.BluetoothAdapter provideBluetoothAdapter()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDeviceSdkFactory$InstanceHolder: ClientComponent_ClientModule_ProvideDeviceSdkFactory$InstanceHolder()
com.bleplx.adapter.BleModule: void clearActiveConnections()
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: boolean deleteDatabase()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: boolean isAutoMirrored(android.graphics.drawable.Drawable)
okhttp3.internal.http2.Http2Stream: void receiveRstStream(okhttp3.internal.http2.ErrorCode)
okhttp3.Response: okhttp3.CacheControl -deprecated_cacheControl()
io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,long)
com.facebook.react.bridge.JSIModuleRegistry: com.facebook.react.bridge.JSIModule getModule(com.facebook.react.bridge.JSIModuleType)
okhttp3.internal.http2.Header$Companion: Header$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.connection.RealCall: java.io.IOException timeoutExit(java.io.IOException)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)
com.facebook.react.bridge.WritableNativeMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAllowFontScaling(boolean)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
com.facebook.soloader.nativeloader.NativeLoaderDelegate: java.lang.String getLibraryPath(java.lang.String)
com.facebook.soloader.DirectorySoSource: java.lang.String[] getDependencies(java.lang.String,com.facebook.soloader.ElfByteChannel)
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: java.lang.Object invoke()
com.facebook.soloader.UnpackingSoSource$InputDsoIterator: void close()
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: io.reactivex.Observable getOnDescriptorRead()
okhttp3.HttpUrl: java.lang.String queryParameterName(int)
com.facebook.react.uimanager.BaseViewManager: void logUnsupportedPropertyWarning(java.lang.String)
com.facebook.react.modules.blob.BlobModule: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
com.polidea.rxandroidble2.ClientComponent$ClientModule: java.util.concurrent.ExecutorService provideBluetoothInteractionExecutorService()
com.polidea.rxandroidble2.ClientComponent: com.polidea.rxandroidble2.RxBleClient rxBleClient()
com.polidea.rxandroidble2.exceptions.BleConflictingNotificationAlreadySetException: java.util.UUID getCharacteristicUuid()
okhttp3.Interceptor$Chain: okhttp3.Call call()
io.reactivex.Observable: io.reactivex.Observable concatMapEagerDelayError(io.reactivex.functions.Function,int,int,boolean)
io.reactivex.Flowable: io.reactivex.Flowable doOnError(io.reactivex.functions.Consumer)
com.facebook.react.views.image.ReactImageManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFilter(android.graphics.Bitmap,boolean)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
okhttp3.Response$Builder: okhttp3.Response getNetworkResponse$okhttp()
okhttp3.Cookie$Companion: boolean pathMatch(okhttp3.HttpUrl,java.lang.String)
com.facebook.react.bridge.ReactContext: void onHostPause()
com.facebook.react.bridge.JavaJSExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor create()
com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator: com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult create(android.bluetooth.BluetoothDevice,int,byte[])
com.facebook.react.bridge.interop.InteropModuleRegistry: boolean checkReactFeatureFlagsConditions()
com.facebook.react.runtime.ReactInstance: com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl getNativeMethodCallInvokerHolder()
io.reactivex.Observable: io.reactivex.Observable mergeArrayDelayError(int,int,io.reactivex.ObservableSource[])
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
okhttp3.internal.connection.RealCall$CallReference: RealCall$CallReference(okhttp3.internal.connection.RealCall,java.lang.Object)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.polidea.rxandroidble2.scan.ScanFilter: boolean matchesServiceUuid(java.util.UUID,java.util.UUID,java.util.UUID)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideScanPreconditionVerifierFactory: com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifier provideScanPreconditionVerifier(int,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
okhttp3.FormBody$Companion: FormBody$Companion()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour[] values()
com.facebook.react.bridge.WritableNativeMap: com.facebook.react.bridge.WritableMap copy()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendAccessibilityServiceChangeEvent(boolean)
okhttp3.internal.platform.android.AndroidSocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
com.facebook.react.uimanager.ViewGroupManager: int getChildCount(android.view.ViewGroup)
com.bleplx.BlePlxModule: void disable(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeBugReportingSpec: void setCategoryID(java.lang.String)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: void close()
com.reactnativecommunity.asyncstorage.AsyncStorageExpoMigration: AsyncStorageExpoMigration()
okhttp3.internal.Util: void assertThreadHoldsLock(java.lang.Object)
com.bleplx.BlePlxModule: void discoverAllServicesAndCharacteristicsForDevice(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.Call: void cancel()
com.polidea.rxandroidble2.internal.operations.ConnectOperation$4: ConnectOperation$4(com.polidea.rxandroidble2.internal.operations.ConnectOperation)
okhttp3.internal.http2.Http2Connection$Builder: void setSocket$okhttp(java.net.Socket)
io.reactivex.Observable: io.reactivex.Observable delay(io.reactivex.functions.Function)
com.polidea.rxandroidble2.internal.util.CharacteristicPropertiesParser: boolean propertiesIntContains(int,int)
com.bleplx.BlePlxModule: java.util.Map getConstants()
androidx.appcompat.widget.AppCompatCheckBox: void setFilters(android.text.InputFilter[])
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getPlayProviderFactory()
io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,int,long,java.util.concurrent.TimeUnit)
okhttp3.CertificatePinner: CertificatePinner(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$1: void onSubscribe(io.reactivex.disposables.Disposable)
com.facebook.react.animated.NativeAnimatedModule: void addListener(java.lang.String)
io.reactivex.Observable: io.reactivex.Observable intervalRange(long,long,long,long,java.util.concurrent.TimeUnit)
com.polidea.rxandroidble2.helpers.ByteArrayBatchObservable$1: ByteArrayBatchObservable$1(com.polidea.rxandroidble2.helpers.ByteArrayBatchObservable)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
io.reactivex.Flowable: io.reactivex.Single toMap(io.reactivex.functions.Function,io.reactivex.functions.Function)
com.facebook.react.bridge.JavaOnlyArray: java.util.ArrayList toArrayList()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsNearbyPermissionNeverForLocationFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsNearbyPermissionNeverForLocationFactory create(bleshadow.javax.inject.Provider)
com.facebook.react.views.view.ReactViewManager: java.lang.String getName()
io.reactivex.Flowable: io.reactivex.Single toSortedList(java.util.Comparator)
com.polidea.rxandroidble2.scan.ScanFilter: android.os.ParcelUuid getServiceUuidMask()
com.facebook.react.devsupport.LogBoxModule: LogBoxModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(android.content.Context)
io.reactivex.Flowable: java.lang.Object blockingSingle()
com.facebook.react.bridge.JavaMethodWrapper$10: JavaMethodWrapper$10()
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RealConnection findConnection(int,int,int,int,boolean)
com.facebook.soloader.SoLoader: void initSoLoader(com.facebook.soloader.SoFileLoader)
io.reactivex.Single: io.reactivex.Flowable concat(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)
okhttp3.RequestBody: okhttp3.RequestBody create(java.io.File,okhttp3.MediaType)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.TurboReactPackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection[] values()
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Completable requestConnectionPriority(int,long,java.util.concurrent.TimeUnit)
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Single readRssi()
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1: ConscryptSocketAdapter$Companion$factory$1()
com.facebook.react.modules.blob.BlobModule: void initialize()
com.facebook.yoga.YogaErrata: com.facebook.yoga.YogaErrata[] values()
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
okhttp3.Challenge: java.util.Map -deprecated_authParams()
com.facebook.react.modules.appstate.AppStateModule: java.util.Map getTypedExportedConstants()
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable timestamp(java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter_Factory: com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter newInstance(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDisabled(com.facebook.react.views.text.ReactTextView,boolean)
com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper: void stopLeScan(android.app.PendingIntent)
com.facebook.react.modules.appstate.AppStateModule: void sendAppStateChangeEvent()
io.reactivex.Observable: io.reactivex.Observable mergeDelayError(io.reactivex.ObservableSource)
com.facebook.soloader.FileLocker: com.facebook.soloader.FileLocker tryLock(java.io.File)
com.facebook.react.modules.appstate.AppStateModule: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationManagerFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationManagerFactory create(bleshadow.javax.inject.Provider)
io.reactivex.Flowable: io.reactivex.Flowable retry(io.reactivex.functions.Predicate)
androidx.activity.ComponentActivity: void addOnNewIntentListener(androidx.core.util.Consumer)
com.facebook.react.uimanager.ViewGroupManager: void addView(android.view.ViewGroup,android.view.View,int)
okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient$okhttp(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setDistanceToTriggerSync(int)
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.jni.HybridData initHybrid(com.facebook.react.fabric.ComponentFactory)
com.polidea.rxandroidble2.internal.RxBleLog: void setLogLevel(int)
com.polidea.rxandroidble2.R: R()
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.modules.appearance.AppearanceModule: void addListener(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeColor(int)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl_Factory: RxBleConnectionImpl_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: Http2Connection$$special$$inlined$schedule$1(java.lang.String,java.lang.String,okhttp3.internal.http2.Http2Connection,long)
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl: com.polidea.rxandroidble2.RxBleConnection$LongWriteOperationBuilder setWriteOperationAckStrategy(com.polidea.rxandroidble2.RxBleConnection$WriteOperationAckStrategy)
com.bleplx.adapter.BleModule: void safeConnectToDevice(com.polidea.rxandroidble2.RxBleDevice,boolean,int,com.bleplx.adapter.RefreshGattMoment,java.lang.Long,int,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnEventCallback,com.bleplx.adapter.OnErrorCallback)
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: void setModule(com.facebook.react.bridge.NativeModule)
okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry getEntry$okhttp()
com.facebook.react.views.image.ReactImageView: void setProgressiveRenderingEnabled(boolean)
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
okhttp3.internal.ws.RealWebSocket: void runWriter()
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)
com.polidea.rxandroidble2.internal.util.DisposableUtil: DisposableUtil()
com.facebook.react.fabric.FabricUIManager: void startSurface(com.facebook.react.interfaces.fabric.SurfaceHandler,android.content.Context,android.view.View)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
io.reactivex.Flowable: io.reactivex.Flowable limit(long)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationManagerFactory: android.location.LocationManager provideLocationManager(android.content.Context)
androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl: android.view.ViewPropertyAnimator setUpdateListener(android.view.ViewPropertyAnimator,android.animation.ValueAnimator$AnimatorUpdateListener)
okhttp3.internal.http2.Hpack$Reader: void insertIntoDynamicTable(int,okhttp3.internal.http2.Header)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()
com.polidea.rxandroidble2.exceptions.BleScanException: java.lang.String reasonDescription(int)
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder()
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi23: ScanSetupBuilderImplApi23(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator,com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator,com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter)
com.facebook.react.modules.websocket.WebSocketModule: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
com.reactnativecommunity.asyncstorage.AsyncStorageExpoMigration: long getLastModifiedTimeInMillis(java.io.File)
com.facebook.react.bridge.JavaJSExecutor: java.lang.String executeJSCall(java.lang.String,java.lang.String)
com.facebook.react.fabric.FabricUIManager: void stopSurface(int)
okhttp3.CertificatePinner: okio.ByteString sha1Hash(java.security.cert.X509Certificate)
okhttp3.internal.http2.Http2ExchangeCodec: void cancel()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: ReactQueueConfigurationSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map createExportedCustomDirectEventTypeConstants()
com.reactnativecommunity.asyncstorage.AsyncLocalStorageUtil: AsyncLocalStorageUtil()
com.polidea.rxandroidble2.scan.ScanRecord: byte[] getServiceData(android.os.ParcelUuid)
okhttp3.CookieJar$Companion: CookieJar$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.soloader.NativeLibrary: void initialNativeCheck()
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6$1: CharacteristicLongWriteOperation$6$1(com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6)
okhttp3.internal.cache.CacheStrategy$Factory: long cacheResponseAge()
com.oblador.vectoricons.VectorIconsModule: VectorIconsModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.queue.MessageQueueThread: boolean isIdle()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Observable queue(com.polidea.rxandroidble2.RxBleCustomOperation,com.polidea.rxandroidble2.internal.Priority)
com.facebook.react.views.scroll.ReactScrollView: android.widget.OverScroller getOverScrollerFromParent()
com.reactnativecommunity.asyncstorage.AsyncStorageModule$1: AsyncStorageModule$1(com.reactnativecommunity.asyncstorage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback,com.facebook.react.bridge.ReadableArray)
com.facebook.react.defaults.DefaultReactNativeHost: com.facebook.react.ReactHost toReactHost(android.content.Context)
okhttp3.HttpUrl: java.lang.String -deprecated_scheme()
okhttp3.internal.http.RealInterceptorChain: okhttp3.Connection connection()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay valueOf(java.lang.String)
com.polidea.rxandroidble2.helpers.ValueInterpreter: int unsignedBytesToInt(byte,byte,byte,byte)
com.facebook.react.modules.permissions.PermissionsModule: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache: void putAll(java.util.Map)
androidx.core.view.ViewCompat$Api17Impl: void setLayerPaint(android.view.View,android.graphics.Paint)
io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long,boolean,int)
com.polidea.rxandroidble2.internal.cache.DeviceComponentWeakReference: boolean contains(java.lang.Object)
com.polidea.rxandroidble2.exceptions.BleDisconnectedException: BleDisconnectedException(java.lang.Throwable,java.lang.String)
com.facebook.jni.HybridData$Destructor: void destruct()
com.polidea.rxandroidble2.helpers.ValueInterpreter: int getTypeLen(int)
okhttp3.internal.http1.Http1ExchangeCodec: okio.Sink createRequestBody(okhttp3.Request,long)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsAndroidWearFactory: ClientComponent_ClientModule_ProvideIsAndroidWearFactory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.devsupport.JSCHeapCapture: void captureComplete(java.lang.String,java.lang.String)
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)
okhttp3.internal.ws.RealWebSocket$Companion: RealWebSocket$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: okhttp3.internal.platform.android.AndroidSocketAdapter access$build(okhttp3.internal.platform.android.AndroidSocketAdapter$Companion,java.lang.Class)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$2: io.reactivex.ObservableSource apply(io.reactivex.Observable)
com.facebook.react.runtime.ReactSurfaceView: int getUIManagerType()
okhttp3.internal.http2.Http2Stream$FramingSink: void close()
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxFontSizeMultiplier(com.facebook.react.views.textinput.ReactEditText,float)
io.reactivex.Single: io.reactivex.Single error(java.util.concurrent.Callable)
com.facebook.react.devsupport.LogBoxModule: void show()
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason[] values()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
okhttp3.internal.concurrent.TaskQueue: okhttp3.internal.concurrent.TaskRunner getTaskRunner$okhttp()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
com.facebook.react.views.modal.ReactModalHostView: android.app.Activity getCurrentActivity()
com.facebook.react.fabric.SurfaceHandlerBinding: void setDisplayModeNative(int)
io.reactivex.Single: io.reactivex.Single timer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.facebook.react.views.text.ReactTextView: void setGravityHorizontal(int)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Single getCharacteristic(java.util.UUID)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder path(java.lang.String)
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable: DisconnectOperation$DisconnectGattObservable(android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,io.reactivex.Scheduler)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
com.facebook.yoga.YogaGutter: com.facebook.yoga.YogaGutter[] values()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.ReadableMap getInspectorDataForInstance(int,android.view.View)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.Cache$Companion: boolean varyMatches(okhttp3.Response,okhttp3.Headers,okhttp3.Request)
com.facebook.react.views.scroll.ReactScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
okhttp3.FormBody: long contentLength()
okhttp3.internal.http2.Http2Stream$FramingSource: void updateConnectionFlowControl(long)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
okhttp3.internal.concurrent.TaskRunner: java.util.logging.Logger access$getLogger$cp()
io.reactivex.Flowable: io.reactivex.Flowable delay(io.reactivex.functions.Function)
io.reactivex.Observable: io.reactivex.Observable mergeWith(io.reactivex.CompletableSource)
io.reactivex.Observable: io.reactivex.Observable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create$default(okhttp3.ResponseBody$Companion,okio.ByteString,okhttp3.MediaType,int,java.lang.Object)
androidx.activity.ComponentActivity: void addOnTrimMemoryListener(androidx.core.util.Consumer)
okhttp3.internal.http2.Http2Writer: okhttp3.internal.http2.Hpack$Writer getHpackWriter()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$7: RxBleConnectionImpl$7(com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl,java.util.UUID,java.util.UUID,java.util.UUID)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: void run()
okhttp3.internal.http2.Http2ExchangeCodec: long reportedContentLength(okhttp3.Response)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$1: io.reactivex.Observable apply(com.polidea.rxandroidble2.exceptions.BleGattException)
com.facebook.react.views.textinput.ReactEditText: java.lang.String getReturnKeyType()
com.facebook.react.bridge.UIManager: void updateRootLayoutSpecs(int,int,int,int,int)
com.facebook.react.modules.network.NetworkingModule: void addRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
okhttp3.internal.http1.Http1ExchangeCodec$Companion: Http1ExchangeCodec$Companion()
okhttp3.internal.connection.RouteDatabase: boolean shouldPostpone(okhttp3.Route)
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] $values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
androidx.core.widget.TextViewCompat$Api16Impl: int getMinLines(android.widget.TextView)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.facebook.react.ReactNativeHost: com.facebook.react.devsupport.interfaces.DevLoadingViewManager getDevLoadingViewManager()
com.facebook.react.bridge.CatalystInstance: void registerSegment(int,java.lang.String)
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideCharacteristicPropertiesParserFactory: ConnectionModule_ProvideCharacteristicPropertiesParserFactory()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.util.Map getTypedExportedConstants()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
com.facebook.soloader.ElfFileChannel: int write(java.nio.ByteBuffer)
com.facebook.soloader.DirectorySoSource: java.lang.String toString()
com.facebook.yoga.YogaNative: long jni_YGNodeCloneJNI(long)
io.reactivex.Single: io.reactivex.Flowable repeatUntil(io.reactivex.functions.BooleanSupplier)
okhttp3.ConnectionSpec$Builder: java.lang.String[] getCipherSuites$okhttp()
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String,java.lang.Throwable)
com.bleplx.adapter.BleModule: void writeCharacteristic(int,java.lang.String,boolean,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
com.facebook.react.modules.debug.DevSettingsModule: void setIsShakeToShowDevMenuEnabled(boolean)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
okhttp3.internal.ws.RealWebSocket$Close: RealWebSocket$Close(int,okio.ByteString,long)
okhttp3.Route: java.lang.String toString()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
com.facebook.react.views.image.ReactImageView: void setResizeMethod(com.facebook.react.views.image.ImageResizeMethod)
com.facebook.react.views.textinput.ReactTextInputManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.polidea.rxandroidble2.internal.connection.ConnectionModule: com.polidea.rxandroidble2.internal.util.CharacteristicPropertiesParser provideCharacteristicPropertiesParser()
io.reactivex.Observable: io.reactivex.Observable timestamp()
com.facebook.react.uimanager.BaseViewManager: void setImportantForAccessibility(android.view.View,java.lang.String)
io.reactivex.Observable: io.reactivex.Observable serialize()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
okio.Timeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap()
com.facebook.react.uimanager.BaseViewManager: void setMoveShouldSetResponder(android.view.View,boolean)
com.facebook.jni.DestructorThread$DestructorList: void enqueue(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.uimanager.BaseViewManager: void setNativeId(android.view.View,java.lang.String)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
androidx.activity.ComponentActivity: void access$001(androidx.activity.ComponentActivity)
com.reactnativecommunity.asyncstorage.AsyncStoragePackage$1: AsyncStoragePackage$1(com.reactnativecommunity.asyncstorage.AsyncStoragePackage)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String getJSModuleName()
io.reactivex.internal.functions.Functions$NaturalComparator: io.reactivex.internal.functions.Functions$NaturalComparator[] values()
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1(okhttp3.internal.cache.DiskLruCache$Editor,int)
com.facebook.react.bridge.ReadableArray: double getDouble(int)
okhttp3.HttpUrl: int hashCode()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityRole(android.view.View,java.lang.String)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideRecommendedConnectRuntimePermissionNamesFactory: java.lang.Object get()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDeviceSdkFactory: int provideDeviceSdk()
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback_Factory: java.lang.Object get()
com.polidea.rxandroidble2.internal.DeviceComponent$Builder: com.polidea.rxandroidble2.internal.DeviceComponent$Builder macAddress(java.lang.String)
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi18_Factory: ScanPreconditionsVerifierApi18_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap(java.lang.Object[])
okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)
com.polidea.rxandroidble2.internal.operations.DisconnectOperation_Factory: com.polidea.rxandroidble2.internal.operations.DisconnectOperation get()
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture: void captureHeap(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: void dispatchMessage(android.os.Message)
okhttp3.internal.http2.Http2Connection: void access$setIntervalPongsReceived$p(okhttp3.internal.http2.Http2Connection,long)
io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)
com.facebook.react.views.textinput.ReactEditText: void setAllowFontScaling(boolean)
okhttp3.Cache$RealCacheRequest: okhttp3.internal.cache.DiskLruCache$Editor access$getEditor$p(okhttp3.Cache$RealCacheRequest)
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType[] values()
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry: void run(com.polidea.rxandroidble2.internal.serialization.QueueSemaphore,io.reactivex.Scheduler)
com.polidea.rxandroidble2.scan.ScanRecord: java.util.List getServiceUuids()
okhttp3.internal.http2.Huffman$Node: int getTerminalBitCount()
okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)
okhttp3.internal.connection.RealCall$timeout$1: void timedOut()
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] buildArgumentExtractors(java.lang.Class[])
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager: ServiceDiscoveryManager(com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueue,android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.operations.OperationsProvider)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinHeightJNI(long)
com.facebook.jni.DestructorThread$DestructorStack: void push(com.facebook.jni.DestructorThread$Destructor)
com.facebook.soloader.SysUtil: void mkdirOrThrow(java.io.File)
com.polidea.rxandroidble2.scan.ScanRecord: java.util.List getServiceSolicitationUuids()
androidx.tracing.TraceApi29Impl: boolean isEnabled()
com.facebook.react.bridge.DynamicFromObject: void recycle()
com.facebook.react.bridge.JavaScriptExecutor: java.lang.String getName()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,int)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setHotLoadingEnabled(boolean)
okhttp3.internal.http2.PushObserver: boolean onData(int,okio.BufferedSource,int,boolean)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithoutIndexingIndexedName(int)
com.facebook.react.modules.appregistry.AppRegistry: void runApplication(java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
okhttp3.internal.Util: okhttp3.Headers toHeaders(java.util.List)
com.facebook.soloader.NativeDepsUnpacker: byte[] readNativeDepsFromDisk(android.content.Context)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Object)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideComputationSchedulerFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideComputationSchedulerFactory create()
com.facebook.react.modules.permissions.PermissionsModule: com.facebook.react.modules.core.PermissionAwareActivity getPermissionAwareActivity()
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState mapConnectionStateToRxBleConnectionStatus(int)
com.facebook.imagepipeline.memory.NativeMemoryChunk: byte nativeReadByte(long)
com.facebook.react.views.textinput.ReactEditText: void setSubmitBehavior(java.lang.String)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.polidea.rxandroidble2.internal.ScanResultInterface: java.lang.String getAddress()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl startNewBackgroundThread(java.lang.String,long,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
okhttp3.internal.cache.DiskLruCache: okio.BufferedSink access$getJournalWriter$p(okhttp3.internal.cache.DiskLruCache)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.internal.http2.Hpack$Writer: void insertIntoDynamicTable(okhttp3.internal.http2.Header)
okhttp3.ResponseBody$Companion$asResponseBody$1: ResponseBody$Companion$asResponseBody$1(okio.BufferedSource,okhttp3.MediaType,long)
io.reactivex.internal.functions.Functions$HashSetCallable: io.reactivex.internal.functions.Functions$HashSetCallable valueOf(java.lang.String)
okhttp3.internal.platform.android.SocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
io.reactivex.Observable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function,boolean)
io.reactivex.Flowable: io.reactivex.Flowable timeout(org.reactivestreams.Publisher,io.reactivex.functions.Function)
com.facebook.react.bridge.JavaMethodWrapper$9: JavaMethodWrapper$9()
com.facebook.react.bridge.DynamicFromObject: boolean isNull()
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
okhttp3.internal.ws.WebSocketExtensions: boolean component5()
okhttp3.internal.http2.Settings: int getHeaderTableSize()
com.facebook.react.bridge.WritableNativeArray: void pushString(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] values()
io.reactivex.Observable: io.reactivex.Observable timeout(io.reactivex.ObservableSource,io.reactivex.functions.Function)
okhttp3.internal.cache.DiskLruCache: void access$setHasJournalErrors$p(okhttp3.internal.cache.DiskLruCache,boolean)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsNearbyPermissionNeverForLocationFactory: java.lang.Boolean get()
com.facebook.react.bridge.JavaOnlyMap: void putNull(java.lang.String)
com.polidea.rxandroidble2.internal.operations.ReadRssiOperation: ReadRssiOperation(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothInteractionExecutorServiceFactory: java.util.concurrent.ExecutorService get()
com.bleplx.adapter.BleModule: void lambda$readRSSIForDevice$4(com.bleplx.adapter.Device,com.bleplx.adapter.utils.SafeExecutor,java.lang.String,java.lang.Integer)
com.polidea.rxandroidble2.internal.operations.ConnectOperation: io.reactivex.Single getConnectedBluetoothGatt()
okhttp3.internal.connection.RealConnection: okhttp3.Route route()
com.polidea.rxandroidble2.internal.cache.CacheEntry: boolean equals(java.lang.Object)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
okhttp3.internal.platform.OpenJSSEPlatform$Companion: okhttp3.internal.platform.OpenJSSEPlatform buildIfSupported()
com.polidea.rxandroidble2.internal.scan.ScanRecordImplCompat: android.util.SparseArray getManufacturerSpecificData()
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$3: void onError(java.lang.Throwable)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.util.List)
com.polidea.rxandroidble2.internal.util.CheckerPermission: boolean isPermissionGranted(java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
okhttp3.Headers$Builder: okhttp3.Headers$Builder addAll(okhttp3.Headers)
com.polidea.rxandroidble2.internal.operations.ConnectOperation$2: io.reactivex.Single apply(io.reactivex.Single)
com.facebook.react.bridge.ProxyJavaScriptExecutor: ProxyJavaScriptExecutor(com.facebook.react.bridge.JavaJSExecutor)
com.polidea.rxandroidble2.scan.ScanFilter: boolean matches(com.polidea.rxandroidble2.internal.ScanResultInterface)
io.reactivex.Flowable: io.reactivex.Flowable concatArray(org.reactivestreams.Publisher[])
okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.SSLContext newSSLContext()
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException: JavaJSExecutor$ProxyExecutorException(java.lang.Throwable)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: void delete(java.io.File)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskFinished(double)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)
com.polidea.rxandroidble2.internal.operations.ConnectOperation$5: ConnectOperation$5(com.polidea.rxandroidble2.internal.operations.ConnectOperation)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
okhttp3.ConnectionSpec: java.util.List tlsVersions()
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
io.reactivex.Observable: io.reactivex.Observable concatWith(io.reactivex.ObservableSource)
io.reactivex.Flowable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function)
com.facebook.soloader.DirectApkSoSource: void append(java.lang.String,java.lang.String)
okhttp3.MultipartReader: okio.Options access$getAfterBoundaryOptions$cp()
okhttp3.internal.concurrent.TaskQueue: void shutdown()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
okhttp3.internal.platform.OpenJSSEPlatform: OpenJSSEPlatform(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void removeListeners(double)
com.reactnativecommunity.asyncstorage.R: R()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
com.facebook.react.modules.statusbar.StatusBarModule: StatusBarModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.ViewGroupManager: void addViews(android.view.ViewGroup,java.util.List)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.concurrent.TaskRunner getTaskRunner$okhttp()
com.polidea.rxandroidble2.internal.util.DisposableUtil: io.reactivex.observers.DisposableObserver disposableObserverFromEmitter(io.reactivex.ObservableEmitter)
okhttp3.internal.cache.DiskLruCache$Entry: java.util.List getCleanFiles$okhttp()
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1: okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket)
okhttp3.internal.Util: boolean canParseAsIpAddress(java.lang.String)
com.facebook.soloader.nativeloader.NativeLoader: boolean loadLibrary(java.lang.String)
com.facebook.react.bridge.CxxCallbackImpl: CxxCallbackImpl(com.facebook.jni.HybridData)
com.polidea.rxandroidble2.RxBleClientImpl: io.reactivex.MaybeSource lambda$bluetoothAdapterOffExceptionObservable$4(com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState)
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer()
com.facebook.react.bridge.Inspector$RemoteConnection: void onDisconnect()
com.oblador.vectoricons.VectorIconsModule: void getImageForFont(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,com.facebook.react.bridge.Promise)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$10: RxBleConnectionImpl$10(com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl,java.util.UUID,java.util.UUID,java.util.UUID)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideContentResolverFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideContentResolverFactory create(bleshadow.javax.inject.Provider)
com.polidea.rxandroidble2.internal.RxBleDeviceImpl: io.reactivex.ObservableSource lambda$establishConnection$1(com.polidea.rxandroidble2.ConnectionSetup)
com.polidea.rxandroidble2.internal.util.ByteAssociation: ByteAssociation(java.lang.Object,byte[])
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi18_Factory: com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi18 get()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.polidea.rxandroidble2.internal.util.ClientStateObservable$2: ClientStateObservable$2(com.polidea.rxandroidble2.internal.util.LocationServicesStatus)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void forceRTL(boolean)
com.facebook.react.bridge.JavaScriptModuleRegistry: JavaScriptModuleRegistry()
io.reactivex.Observable: io.reactivex.Observable distinctUntilChanged(io.reactivex.functions.Function)
okhttp3.Cookie: boolean equals(java.lang.Object)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$4: RxBleConnectionImpl$4(com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl)
okhttp3.OkHttpClient$Builder: void setDns$okhttp(okhttp3.Dns)
io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(java.lang.Iterable,io.reactivex.functions.Function)
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.net.URL)
io.reactivex.Observable: io.reactivex.Observable amb(java.lang.Iterable)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$IntSupplier: int get()
com.polidea.rxandroidble2.internal.util.ByteAssociationUtil$1: ByteAssociationUtil$1(java.util.UUID)
com.facebook.yoga.YogaNative: YogaNative()
com.polidea.rxandroidble2.internal.util.CheckerLocationProvider: boolean isLocationProviderEnabled()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
io.reactivex.Flowable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: java.lang.String[] getSupportedAbis()
com.polidea.rxandroidble2.utils.StandardUUIDsParser: java.lang.String getServiceName(java.util.UUID)
com.facebook.react.fabric.SurfaceHandlerBinding: void setPropsNative(com.facebook.react.bridge.NativeMap)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsConnectableCheckerFactory: com.polidea.rxandroidble2.internal.scan.IsConnectableChecker get()
com.polidea.rxandroidble2.RxBleConnection$Connector: io.reactivex.Single prepareConnection(boolean)
io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function8)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removeAllQueryParameters(java.lang.String)
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,int)
okhttp3.OkHttpClient$Builder: okhttp3.CookieJar getCookieJar$okhttp()
com.polidea.rxandroidble2.helpers.LocationServicesOkObservable_Factory: LocationServicesOkObservable_Factory(bleshadow.javax.inject.Provider)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAccessibilityRole(java.lang.String)
okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager x509TrustManager()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityValue(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.common.mapbuffer.ReadableMapBuffer getStateMapBufferDataImpl()
com.facebook.fresco.ui.common.VisibilityState: com.facebook.fresco.ui.common.VisibilityState[] values()
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
okhttp3.internal.concurrent.TaskRunner$Backend: long nanoTime()
com.bleplx.adapter.BleModule: void lambda$safeWriteCharacteristicForDevice$37(com.bleplx.adapter.utils.SafeExecutor,java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: void setViewZIndex(android.view.View,int)
okhttp3.internal.Internal: okhttp3.Headers$Builder addHeaderLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String)
io.reactivex.Observable: io.reactivex.Observable mergeWith(io.reactivex.ObservableSource)
com.facebook.react.bridge.ReactContext: boolean hasActiveReactInstance()
io.reactivex.Observable: io.reactivex.Observable withLatestFrom(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function4)
io.reactivex.Flowable: io.reactivex.Flowable sample(org.reactivestreams.Publisher,boolean)
okhttp3.internal.io.FileSystem: long size(java.io.File)
com.facebook.soloader.UnpackingSoSource: void extractDso(com.facebook.soloader.UnpackingSoSource$InputDso,byte[])
okhttp3.Request$Builder: okhttp3.Request$Builder head()
okhttp3.internal.tls.BasicTrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
com.facebook.react.bridge.ReadableNativeArray: int hashCode()
okhttp3.internal.http2.Http2Reader: void readWindowUpdate(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
okhttp3.Response$Builder: Response$Builder(okhttp3.Response)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void disable()
okhttp3.internal.concurrent.TaskRunner: void afterRun(okhttp3.internal.concurrent.Task,long)
com.facebook.react.bridge.ReactMarker: void nativeLogMarker(java.lang.String,long)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part create(okhttp3.RequestBody)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable)
okhttp3.Cache$Entry: Cache$Entry(okhttp3.Response)
io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function3)
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache: com.polidea.rxandroidble2.internal.DeviceComponent remove(java.lang.Object)
okhttp3.MultipartBody$Part: MultipartBody$Part(okhttp3.Headers,okhttp3.RequestBody,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String,long)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothCallbacksSchedulerFactory: java.lang.Object get()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendTouchExplorationChangeEvent(boolean)
com.polidea.rxandroidble2.LogOptions: java.lang.Boolean getShouldLogAttributeValues()
com.facebook.soloader.SoLoader: void initDummySoSource()
com.facebook.react.views.textinput.ReactTextInputManager: void setKeyboardType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.Object next()
com.polidea.rxandroidble2.internal.util.ScanRecordParser: android.os.ParcelUuid parseUuidFrom(byte[])
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle[] values()
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDisplayJNI(long)
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
com.facebook.react.bridge.UiThreadUtil: void assertOnUiThread()
androidx.appcompat.app.AppCompatActivity: void onSupportContentChanged()
okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: java.lang.Integer getViewZIndex(android.view.View)
com.facebook.react.bridge.DynamicFromArray: void recycle()
com.bleplx.adapter.BleModule: void writeCharacteristicForDevice(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,boolean,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.toast.ToastModule)
okhttp3.MultipartBody: void writeTo(okio.BufferedSink)
okhttp3.OkHttpClient: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner()
io.reactivex.Flowable: io.reactivex.Flowable onErrorResumeNext(io.reactivex.functions.Function)
com.facebook.react.modules.permissions.PermissionsModule: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.polidea.rxandroidble2.ConnectionSetup$Builder: ConnectionSetup$Builder()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: boolean getUnsupported()
okhttp3.JavaNetCookieJar: java.util.List decodeHeaderAsJavaNetCookies(okhttp3.HttpUrl,java.lang.String)
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: void close()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderColor(com.facebook.react.views.text.ReactTextView,int,java.lang.Integer)
okhttp3.FormBody: java.lang.String value(int)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void removeListeners(double)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapOffsets(java.util.List)
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify[] values()
okhttp3.internal.http2.Settings: Settings()
com.ghostcommv2.R$mipmap: R$mipmap()
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeToastAndroidSpec: NativeToastAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.textinput.ReactTextInputManager: void setSubmitBehavior(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingLeft()
com.facebook.soloader.SoLoader$WrongAbiError: SoLoader$WrongAbiError(java.lang.Throwable,java.lang.String)
com.polidea.rxandroidble2.scan.ScanSettings$Builder: com.polidea.rxandroidble2.scan.ScanSettings$Builder setShouldCheckLocationServicesState(boolean)
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object getCallerContext()
io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function7)
io.reactivex.Single: io.reactivex.Single contains(java.lang.Object,io.reactivex.functions.BiPredicate)
com.facebook.soloader.SysUtil$LollipopSysdeps: SysUtil$LollipopSysdeps()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideConnectionQueueExecutorServiceFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideConnectionQueueExecutorServiceFactory create()
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideBluetoothGattFactory: java.lang.Object get()
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory: io.reactivex.Observable get()
com.facebook.hermes.intl.DateTimeFormat: java.util.Map resolvedOptions()
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withReadTimeout(int,java.util.concurrent.TimeUnit)
okhttp3.internal.io.FileSystem: okio.Sink sink(java.io.File)
com.facebook.react.bridge.Arguments$1: java.lang.Object get(int)
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentBuilder: com.polidea.rxandroidble2.internal.connection.ConnectionComponent build()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
okhttp3.internal.http2.Header: okhttp3.internal.http2.Header copy$default(okhttp3.internal.http2.Header,okio.ByteString,okio.ByteString,int,java.lang.Object)
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$1: void onSuccess(android.bluetooth.BluetoothGatt)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getConstants()
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Boolean extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
io.reactivex.Observable: io.reactivex.Observable timeInterval(io.reactivex.Scheduler)
com.facebook.jni.HybridData: HybridData()
io.reactivex.Flowable: io.reactivex.Flowable flatMapMaybe(io.reactivex.functions.Function,boolean,int)
com.polidea.rxandroidble2.internal.RxBleLog: boolean getShouldLogScannedPeripherals()
androidx.appcompat.app.AppCompatActivity: void setSupportProgress(int)
okhttp3.HttpUrl: java.lang.String encodedUsername()
com.facebook.react.views.scroll.ReactScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeValue(double,double)
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setEndFillColor(int)
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion: ConscryptSocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionTypeJNI(long,int)
com.facebook.fbreact.specs.NativeAppStateSpec: void removeListeners(double)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.polidea.rxandroidble2.internal.operations.DisconnectOperation: com.polidea.rxandroidble2.exceptions.BleException provideException(android.os.DeadObjectException)
com.facebook.soloader.DirectorySoSource: int loadLibraryFrom(java.lang.String,int,java.io.File,android.os.StrictMode$ThreadPolicy)
io.reactivex.Observable: io.reactivex.Observable merge(io.reactivex.ObservableSource,int)
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
com.facebook.react.fabric.SurfaceHandlerBinding: void setSurfaceIdNative(int)
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: io.reactivex.Observable lambda$setupModeTransformer$4(io.reactivex.Completable,io.reactivex.Observable)
io.reactivex.internal.disposables.EmptyDisposable: io.reactivex.internal.disposables.EmptyDisposable[] values()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
okhttp3.OkHttpClient$Builder: javax.net.ssl.X509TrustManager getX509TrustManagerOrNull$okhttp()
okhttp3.Address: okhttp3.HttpUrl -deprecated_url()
com.facebook.react.bridge.CxxModuleWrapperBase: CxxModuleWrapperBase(com.facebook.jni.HybridData)
io.reactivex.Observable: io.reactivex.Completable switchMapCompletableDelayError(io.reactivex.functions.Function)
com.facebook.react.views.unimplementedview.ReactUnimplementedView: void setName(java.lang.String)
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: boolean lambda$observeOnCharacteristicChangeCallbacks$7(com.polidea.rxandroidble2.internal.util.CharacteristicNotificationId,com.polidea.rxandroidble2.internal.util.CharacteristicChangedEvent)
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackgroundGuarded()
com.polidea.rxandroidble2.internal.operations.ConnectOperation: io.reactivex.Single getBluetoothGattAndChangeStatusToConnected()
io.reactivex.internal.util.NotificationLite: io.reactivex.internal.util.NotificationLite[] values()
okhttp3.internal.connection.RealConnection: java.net.Socket access$getSocket$p(okhttp3.internal.connection.RealConnection)
io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(java.lang.Iterable,io.reactivex.functions.Function,int)
com.polidea.rxandroidble2.RxBleClient: boolean isConnectRuntimePermissionGranted()
com.facebook.react.fabric.FabricUIManager: void preallocateView(int,int,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,boolean)
com.polidea.rxandroidble2.ConnectionSetup$Builder: com.polidea.rxandroidble2.ConnectionSetup$Builder setSuppressIllegalOperationCheck(boolean)
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
com.facebook.react.views.textinput.ReactEditText: void setBorderRadius(float)
com.facebook.react.bridge.ModuleSpec: java.lang.String getName()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToEnd(boolean)
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable$3: DisconnectOperation$DisconnectGattObservable$3(com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable)
com.polidea.rxandroidble2.scan.ScanFilter$Builder: com.polidea.rxandroidble2.scan.ScanFilter$Builder setServiceData(android.os.ParcelUuid,byte[])
okhttp3.internal.cache.DiskLruCache$Editor: okio.Sink newSink(int)
okhttp3.OkHttpClient$Builder: void setCookieJar$okhttp(okhttp3.CookieJar)
io.reactivex.subscribers.TestSubscriber$EmptySubscriber: io.reactivex.subscribers.TestSubscriber$EmptySubscriber[] values()
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.RealCall getCall$okhttp()
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
com.facebook.react.modules.intent.IntentModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.intent.IntentModule)
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable publish(int)
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(int,okio.Buffer)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT valueOf(java.lang.String)
io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,int)
com.facebook.react.fabric.FabricUIManager: void profileNextBatch()
com.facebook.react.uimanager.SimpleViewManager: SimpleViewManager()
com.facebook.soloader.UnpackingSoSource$InputDso: java.lang.String getFileName()
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope[] values()
io.reactivex.Flowable: io.reactivex.Flowable window(long,long)
com.facebook.react.uimanager.UIManagerModule: void clearJSResponder()
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: io.reactivex.CompletableTransformer teardownModeTransformer(com.polidea.rxandroidble2.internal.connection.DescriptorWriter,android.bluetooth.BluetoothGattCharacteristic,byte[],com.polidea.rxandroidble2.NotificationSetupMode)
com.polidea.rxandroidble2.internal.operations.ScanOperationApi21$1: ScanOperationApi21$1(com.polidea.rxandroidble2.internal.operations.ScanOperationApi21)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter_Factory: java.lang.Object get()
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory locationServicesOkObservableApi23Factory()
com.facebook.react.bridge.JavaMethodWrapper$7: JavaMethodWrapper$7()
com.facebook.react.uimanager.BaseViewManager: void setShadowColor(android.view.View,int)
io.reactivex.Observable: io.reactivex.Observable timeout(long,java.util.concurrent.TimeUnit)
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,int)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: java.util.List getEagerInitModuleNames()
okhttp3.MultipartBody$Part: okhttp3.RequestBody -deprecated_body()
okhttp3.Headers: okhttp3.Headers of(java.util.Map)
com.polidea.rxandroidble2.internal.util.CheckerConnectPermission_Factory: com.polidea.rxandroidble2.internal.util.CheckerConnectPermission newInstance(com.polidea.rxandroidble2.internal.util.CheckerPermission,java.lang.String[][])
com.facebook.react.modules.systeminfo.AndroidInfoModule: void invalidate()
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
okhttp3.ConnectionSpec: java.util.List -deprecated_tlsVersions()
okhttp3.internal.http.RealResponseBody: okio.BufferedSource source()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectionColor(com.facebook.react.views.text.ReactTextView,java.lang.Integer)
com.facebook.react.bridge.CxxModuleWrapperBase: java.lang.String getName()
com.facebook.react.fabric.ReactNativeConfig: long getInt64(java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setBackfaceVisibility(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
io.reactivex.Flowable: io.reactivex.Single toSortedList()
okhttp3.internal.cache.DiskLruCache: boolean remove(java.lang.String)
com.facebook.react.bridge.ModuleHolder: void markInitializable()
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation: io.reactivex.Observable writeBatchAndObserve(int,java.nio.ByteBuffer,com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$IntSupplier)
io.reactivex.Single: io.reactivex.Single delay(long,java.util.concurrent.TimeUnit)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request getRequest$okhttp()
com.facebook.react.bridge.GuardedAsyncTask: void doInBackgroundGuarded(java.lang.Object[])
okhttp3.Request$Builder: okhttp3.RequestBody getBody$okhttp()
io.reactivex.Single: io.reactivex.Single delaySubscription(org.reactivestreams.Publisher)
com.facebook.react.uimanager.BaseViewManager: void setShouldBlockNativeResponder(android.view.View,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
okhttp3.Response$Builder: okhttp3.Response$Builder priorResponse(okhttp3.Response)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexWrapJNI(long,int)
com.polidea.rxandroidble2.scan.ScanSettings: com.polidea.rxandroidble2.internal.scan.ExternalScanSettingsExtension copyWithCallbackType(int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodes(double,double)
okhttp3.internal.http2.ErrorCode$Companion: okhttp3.internal.http2.ErrorCode fromHttp2(int)
io.reactivex.Observable: io.reactivex.Observable concatMapDelayError(io.reactivex.functions.Function,int,boolean)
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Single writeCharacteristic(android.bluetooth.BluetoothGattCharacteristic,byte[])
com.reactnativecommunity.asyncstorage.SerialExecutor: void scheduleNext()
okhttp3.Call$Factory: okhttp3.Call newCall(okhttp3.Request)
com.facebook.react.views.scroll.ReactScrollView: void setPagingEnabled(boolean)
io.reactivex.Single: io.reactivex.Single onErrorReturnItem(java.lang.Object)
com.facebook.react.bridge.ReadableNativeArray: int getJNIPassCounter()
com.polidea.rxandroidble2.RxBleDeviceServices$4: RxBleDeviceServices$4(com.polidea.rxandroidble2.RxBleDeviceServices,java.util.UUID)
com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState: boolean isUsable()
okio.SegmentedByteString: java.lang.Object writeReplace()
io.reactivex.Flowable: io.reactivex.Flowable throttleLatest(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.facebook.react.bridge.ReadableNativeArray: int getInt(int)
okhttp3.MultipartBody$Companion: MultipartBody$Companion()
com.facebook.react.bridge.CallbackImpl: void invoke(java.lang.Object[])
com.polidea.rxandroidble2.ClientComponent$ClientModule: java.lang.String[][] provideRecommendedConnectRuntimePermissionNames(int,int)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setHeaders(com.facebook.react.bridge.ReadableMap)
com.facebook.hermes.intl.OptionHelpers$OptionType: com.facebook.hermes.intl.OptionHelpers$OptionType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
okhttp3.Protocol: java.lang.String toString()
com.facebook.react.bridge.JavaOnlyArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.CatalystInstanceImpl: void jniHandleMemoryPressure(int)
com.facebook.react.uimanager.ComponentNameResolver: java.lang.String[] getComponentNames()
com.facebook.fresco.ui.common.ImageLoadStatus: com.facebook.fresco.ui.common.ImageLoadStatus[] values()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String getName()
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: void stopRecordingFps(double)
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] values()
okhttp3.internal.platform.android.AndroidLog: java.lang.String loggerTag(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
com.bleplx.BlePlxModule: java.lang.String getName()
com.polidea.rxandroidble2.internal.util.DisposableUtil$2: void onComplete()
com.facebook.react.views.modal.ReactModalHostView: void setTransparent(boolean)
okhttp3.internal.http2.Http2Reader: void close()
com.facebook.react.bridge.JSIModuleHolder: void notifyJSInstanceDestroy()
io.reactivex.Flowable: io.reactivex.Flowable throttleFirst(long,java.util.concurrent.TimeUnit)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: void run()
okhttp3.internal.platform.BouncyCastlePlatform$Companion: BouncyCastlePlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.soloader.SysUtil: int findAbiScore(java.lang.String[],java.lang.String)
okhttp3.internal.cache.FaultHidingSink: void flush()
com.bleplx.adapter.ConnectionState: com.bleplx.adapter.ConnectionState valueOf(java.lang.String)
com.polidea.rxandroidble2.scan.ScanSettings: int getMatchMode()
okhttp3.internal.http2.Http2Connection$Builder: boolean getClient$okhttp()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideComputationSchedulerFactory: io.reactivex.Scheduler provideComputationScheduler()
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: void initialize(java.lang.String)
okhttp3.internal.concurrent.TaskRunner$Backend: void coordinatorNotify(okhttp3.internal.concurrent.TaskRunner)
com.facebook.soloader.ElfFileChannel: boolean isOpen()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSink getSink()
io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long)
com.facebook.react.views.scroll.ReactScrollView: void setSnapOffsets(java.util.List)
okhttp3.MultipartBody: MultipartBody(okio.ByteString,okhttp3.MediaType,java.util.List)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Single readDescriptor(java.util.UUID,java.util.UUID,java.util.UUID)
okhttp3.internal.ws.RealWebSocket$connect$1: void onFailure(okhttp3.Call,java.io.IOException)
okhttp3.internal.Util: int indexOfNonWhitespace(java.lang.String,int)
com.polidea.rxandroidble2.LogOptions: java.lang.Integer getUuidLogSetting()
com.polidea.rxandroidble2.internal.connection.LoggingIllegalOperationHandler_Factory: com.polidea.rxandroidble2.internal.connection.LoggingIllegalOperationHandler_Factory create(bleshadow.javax.inject.Provider)
okhttp3.internal.http2.Http2Stream: long getWriteBytesMaximum()
okhttp3.OkHttpClient$Builder: javax.net.ssl.SSLSocketFactory getSslSocketFactoryOrNull$okhttp()
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager_Factory: com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager get()
com.polidea.rxandroidble2.RxBleDevice: com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState getConnectionState()
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: DaggerClientComponent$DeviceComponentImpl(com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl,java.lang.String,com.polidea.rxandroidble2.DaggerClientComponent$1)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
okhttp3.EventListener: void responseBodyStart(okhttp3.Call)
com.polidea.rxandroidble2.RxBleDeviceServices$4: android.bluetooth.BluetoothGattDescriptor apply(android.bluetooth.BluetoothGattCharacteristic)
io.reactivex.Flowable: io.reactivex.Flowable window(long)
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImagePadding(com.facebook.react.views.textinput.ReactEditText,int)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadPong(okio.ByteString)
io.reactivex.Observable: io.reactivex.Observable unsafeCreate(io.reactivex.ObservableSource)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendReduceMotionChangeEvent()
okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)
com.facebook.soloader.SoLoader: void prependSoSource(com.facebook.soloader.SoSource)
com.facebook.hermes.intl.DateTimeFormat: DateTimeFormat(java.util.List,java.util.Map)
com.facebook.react.bridge.ReactMarker$FabricMarkerListener: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function8)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addWebSocketHandler(double)
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$2: void onConnectionUpdated(android.bluetooth.BluetoothGatt,int,int,int,int)
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl$1: ClientOperationQueueImpl$1(com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl,io.reactivex.Scheduler)
com.polidea.rxandroidble2.scan.ScanFilter: android.os.ParcelUuid getServiceDataUuid()
io.reactivex.Flowable: io.reactivex.Flowable buffer(int,java.util.concurrent.Callable)
okio.AsyncTimeout: okio.Source source(okio.Source)
com.facebook.react.views.text.ReactRawTextManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.bleplx.adapter.BleModule: void safeWriteCharacteristicForDevice(com.bleplx.adapter.Characteristic,byte[],java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$3$2: java.lang.Object apply(java.lang.Object)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
androidx.activity.ComponentActivity: void setContentView(android.view.View)
io.reactivex.Observable: io.reactivex.Observable scanWith(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec createDefault()
com.polidea.rxandroidble2.internal.util.BleConnectionCompat: java.lang.Object getIBluetoothManager()
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl$2: ClientOperationQueueImpl$2(com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl,com.polidea.rxandroidble2.internal.operations.Operation)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
com.facebook.soloader.SoSource: void addToLdLibraryPath(java.util.Collection)
okhttp3.internal.platform.ConscryptPlatform$Companion: okhttp3.internal.platform.ConscryptPlatform buildIfSupported()
io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)
com.facebook.react.turbomodule.core.TurboModuleInteropUtils: java.util.List getMethodDescriptorsFromModule(com.facebook.react.bridge.NativeModule)
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: long read(okio.Buffer,long)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: NativeDeviceInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus[] values()
com.facebook.react.views.image.ReactImageManager: void setBorderRadius(com.facebook.react.views.image.ReactImageView,int,float)
com.polidea.rxandroidble2.internal.scan.InternalToExternalScanResultConverter_Factory: InternalToExternalScanResultConverter_Factory(bleshadow.javax.inject.Provider)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothCallbacksSchedulerFactory: io.reactivex.Scheduler get()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.facebook.react.views.modal.ReactModalHostView: android.app.Dialog getDialog()
io.reactivex.Observable: io.reactivex.Observable skipUntil(io.reactivex.ObservableSource)
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableArray fromJSONArray(org.json.JSONArray)
io.reactivex.Observable: io.reactivex.Single isEmpty()
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasRunJSBundle()
okhttp3.CookieJar: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
com.bleplx.adapter.BleModule: void lambda$readRSSIForDevice$5(com.bleplx.adapter.utils.SafeExecutor,java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentBuilder: com.polidea.rxandroidble2.internal.connection.ConnectionComponent$Builder autoConnect(boolean)
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer getReadBuffer()
androidx.core.app.ComponentActivity: boolean shouldDumpInternalState(java.lang.String[])
okhttp3.HttpUrl$Companion: void writeCanonicalized(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$3: ConnectionOperationQueueImpl$3(com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl)
com.facebook.react.views.textinput.ReactTextInputManager: void setEditable(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeAddRoundedCornersFilter(android.graphics.Bitmap,int,int,int,int)
okhttp3.internal.http2.Http2Stream: void setWriteBytesTotal$okhttp(long)
okhttp3.Cache$Companion: Cache$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation_Factory: com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegments(java.lang.String)
okhttp3.HttpUrl$Builder$Companion: int portColonOffset(java.lang.String,int,int)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: NativeNetworkingAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
io.reactivex.Flowable: io.reactivex.Flowable error(java.lang.Throwable)
com.facebook.react.bridge.CatalystInstanceImpl: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: void closeDatabase()
okhttp3.Handshake: java.security.Principal peerPrincipal()
com.polidea.rxandroidble2.LogOptions$Builder: com.polidea.rxandroidble2.LogOptions$Builder setLogLevel(java.lang.Integer)
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholder(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToAlignment(int)
com.facebook.react.bridge.interop.InteropModuleRegistry: boolean shouldReturnInteropModule(java.lang.Class)
com.facebook.fbreact.specs.NativeImageEditorSpec: void cropImage(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api18Impl: boolean isInLayout(android.view.View)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
okhttp3.Interceptor$Companion: okhttp3.Interceptor invoke(kotlin.jvm.functions.Function1)
androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)
io.reactivex.Observable: io.reactivex.Observable skip(long,java.util.concurrent.TimeUnit)
okhttp3.internal.cache.DiskLruCache$Entry: DiskLruCache$Entry(okhttp3.internal.cache.DiskLruCache,java.lang.String)
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: io.reactivex.Observable observeOnCharacteristicChangeCallbacks(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,com.polidea.rxandroidble2.internal.util.CharacteristicNotificationId)
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
com.polidea.rxandroidble2.internal.operations.LegacyScanOperation$1: void onLeScan(android.bluetooth.BluetoothDevice,int,byte[])
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl_Factory: com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl newInstance(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices,com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration,io.reactivex.Scheduler,io.reactivex.Scheduler,bleshadow.javax.inject.Provider)
okhttp3.CertificatePinner$check$1: java.util.List invoke()
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity valueOf(java.lang.String)
com.facebook.soloader.ApkSoSource: ApkSoSource(android.content.Context,java.io.File,java.lang.String,int)
com.facebook.react.modules.network.NetworkingModule: void clearCookies(com.facebook.react.bridge.Callback)
io.reactivex.Observable: io.reactivex.Observable doAfterTerminate(io.reactivex.functions.Action)
androidx.appcompat.widget.SearchView: int getMaxWidth()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: com.polidea.rxandroidble2.internal.connection.RxBleGattCallback gattCallback()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(android.view.View,boolean)
okhttp3.Cache: int writeAbortCount()
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1: java.lang.Object invoke(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
io.reactivex.Flowable: io.reactivex.Flowable delaySubscription(long,java.util.concurrent.TimeUnit)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openSettings(com.facebook.react.bridge.Promise)
com.polidea.rxandroidble2.internal.operations.ScanOperationApi21: android.bluetooth.le.ScanCallback createScanCallback(io.reactivex.ObservableEmitter)
okhttp3.MediaType$Companion: okhttp3.MediaType get(java.lang.String)
com.facebook.soloader.UnpackingSoSource: com.facebook.soloader.UnpackingSoSource$Unpacker makeUnpacker(byte)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(android.view.ViewGroup,android.view.View,int)
com.polidea.rxandroidble2.internal.RxBleDeviceProvider: com.polidea.rxandroidble2.RxBleDevice getBleDevice(java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.List getMethodDescriptorsFromModule(com.facebook.react.bridge.NativeModule)
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KMutableProperty$Setter getSetter()
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl: com.polidea.rxandroidble2.RxBleConnection$LongWriteOperationBuilder setCharacteristicUuid(java.util.UUID)
io.reactivex.Observable: io.reactivex.Observable mergeDelayError(java.lang.Iterable)
okhttp3.internal.http2.Http2Connection: void access$setIntervalPingsSent$p(okhttp3.internal.http2.Http2Connection,long)
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: void stopBroadcast(com.facebook.react.bridge.Promise)
com.bleplx.adapter.BleModule: void lambda$requestConnectionPriorityForDevice$0(com.bleplx.adapter.utils.SafeExecutor,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
com.bleplx.BlePlxModule: void readDescriptorForDevice(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
io.reactivex.Observable: io.reactivex.Observable sample(long,java.util.concurrent.TimeUnit,boolean)
com.bleplx.BlePlxModule: void monitorCharacteristicForDevice(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.polidea.rxandroidble2.ClientComponent$ClientModule: io.reactivex.Scheduler bindTimeoutScheduler(io.reactivex.Scheduler)
io.reactivex.Single: io.reactivex.Single wrap(io.reactivex.SingleSource)
com.facebook.react.bridge.WritableArray: void pushDouble(double)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase access$getInstance$cp()
io.reactivex.Flowable: java.lang.Iterable blockingIterable(int)
com.facebook.react.uimanager.UIManagerModule: java.util.Map getConstants()
com.facebook.fbreact.specs.NativeAppStateSpec: NativeAppStateSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era valueOf(java.lang.String)
okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.util.Date)
com.polidea.rxandroidble2.internal.RxBleLog: void e(java.lang.String,java.lang.Object[])
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)
okhttp3.MediaType$Companion: okhttp3.MediaType -deprecated_get(java.lang.String)
com.polidea.rxandroidble2.internal.operations.DisconnectOperation_Factory: com.polidea.rxandroidble2.internal.operations.DisconnectOperation_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.internal.ws.RealWebSocket: int receivedPongCount()
okhttp3.OkHttpClient$Builder: int getCallTimeout$okhttp()
okhttp3.internal.connection.ExchangeFinder: okhttp3.Address getAddress$okhttp()
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher: void notifyNativeChangedCallback(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic)
com.polidea.rxandroidble2.scan.ScanSettings: int getNumOfMatches()
com.facebook.soloader.ExtractFromZipSoSource: ExtractFromZipSoSource(android.content.Context,java.lang.String,java.io.File,java.lang.String)
com.reactnativecommunity.asyncstorage.SerialExecutor$1: SerialExecutor$1(com.reactnativecommunity.asyncstorage.SerialExecutor,java.lang.Runnable)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
com.polidea.rxandroidble2.internal.util.ClientStateObservable$1: java.lang.Boolean apply(java.lang.Long)
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay valueOf(java.lang.String)
okhttp3.internal.Util: boolean hasIntersection(java.lang.String[],java.lang.String[],java.util.Comparator)
okhttp3.internal.connection.Exchange: okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams()
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.ReactCallback: void decrementPendingJSCalls()
io.reactivex.Observable: io.reactivex.Observable take(long,java.util.concurrent.TimeUnit)
com.facebook.react.bridge.ReactContext: boolean isOnNativeModulesQueueThread()
okio.AsyncTimeout: long access$getIDLE_TIMEOUT_NANOS$cp()
com.facebook.react.bridge.JavaOnlyArray: void pushNull()
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeOffset(double,double)
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1: boolean matchesSocket(javax.net.ssl.SSLSocket)
io.reactivex.internal.util.NotificationLite: io.reactivex.internal.util.NotificationLite valueOf(java.lang.String)
com.facebook.soloader.UnpackingSoSource$1: UnpackingSoSource$1(com.facebook.soloader.UnpackingSoSource,java.io.File,byte[],com.facebook.soloader.UnpackingSoSource$DsoManifest,java.io.File,com.facebook.soloader.FileLocker,java.lang.Boolean)
com.polidea.rxandroidble2.internal.RxBleLog: void i(java.lang.String,java.lang.Object[])
androidx.appcompat.view.menu.MenuPopupHelper$Api17Impl: void getRealSize(android.view.Display,android.graphics.Point)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation: io.reactivex.functions.Function bufferIsNotEmptyAndOperationHasBeenAcknowledgedAndNotUnsubscribed(com.polidea.rxandroidble2.RxBleConnection$WriteOperationAckStrategy,java.nio.ByteBuffer,com.polidea.rxandroidble2.internal.util.QueueReleasingEmitterWrapper)
com.facebook.react.fabric.FabricUIManager: void sendAccessibilityEvent(int,int)
okhttp3.internal.connection.RealConnection: void noNewExchanges$okhttp()
androidx.activity.ComponentActivity: void removeMenuProvider(androidx.core.view.MenuProvider)
okhttp3.MultipartReader$Part: MultipartReader$Part(okhttp3.Headers,okio.BufferedSource)
io.reactivex.Observable: io.reactivex.Single toList(int)
okhttp3.internal.connection.Exchange: void noNewExchangesOnConnection()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.Observable: io.reactivex.Completable ignoreElements()
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$4: ServiceDiscoveryManager$4()
okhttp3.Cookie: boolean -deprecated_httpOnly()
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: GingerbreadPurgeableDecoder()
com.polidea.rxandroidble2.internal.connection.IllegalOperationMessageCreator_Factory: com.polidea.rxandroidble2.internal.connection.IllegalOperationMessageCreator newInstance(com.polidea.rxandroidble2.internal.util.CharacteristicPropertiesParser)
com.polidea.rxandroidble2.internal.RxBleDeviceImpl: android.bluetooth.BluetoothDevice getBluetoothDevice()
com.facebook.soloader.SysUtil: void fallocateIfSupported(java.io.FileDescriptor,long)
com.facebook.react.uimanager.BaseViewManager: void setStartShouldSetResponderCapture(android.view.View,boolean)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxySelector(java.net.ProxySelector)
io.reactivex.Single: io.reactivex.Single compose(io.reactivex.SingleTransformer)
com.facebook.react.views.image.ReactImageView: void setBlurRadius(float)
okhttp3.HttpUrl$Companion: void toQueryString$okhttp(java.util.List,java.lang.StringBuilder)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
io.reactivex.Observable: io.reactivex.Observable buffer(io.reactivex.ObservableSource,io.reactivex.functions.Function,java.util.concurrent.Callable)
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: long runOnce()
com.reactnativecommunity.asyncstorage.AsyncStorageExpoMigration: void migrate(android.content.Context)
com.polidea.rxandroidble2.scan.ScanRecord: java.util.Map getServiceData()
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices_Factory: com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices get()
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT[] values()
androidx.activity.ComponentActivity: void addOnConfigurationChangedListener(androidx.core.util.Consumer)
okhttp3.internal.cache2.Relay$Companion: Relay$Companion()
com.facebook.drawee.view.DraweeView: void setGlobalLegacyVisibilityHandlingEnabled(boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightJNI(long,float)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void endScroll()
com.facebook.react.modules.vibration.VibrationModule: void vibrate(double)
com.facebook.react.modules.blob.BlobModule: void addNetworkingHandler()
com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider: android.bluetooth.BluetoothGatt getBluetoothGatt()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.polidea.rxandroidble2.internal.scan.ExternalScanSettingsExtension: com.polidea.rxandroidble2.internal.scan.ExternalScanSettingsExtension copyWithCallbackType(int)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign valueOf(java.lang.String)
okhttp3.Request: okhttp3.HttpUrl url()
okhttp3.internal.Util: int indexOfLastNonAsciiWhitespace$default(java.lang.String,int,int,int,java.lang.Object)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void setListBytes(byte[],byte[])
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightAutoJNI(long)
com.polidea.rxandroidble2.LogOptions: com.polidea.rxandroidble2.LogOptions$Logger getLogger()
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Class getShadowNodeClass()
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody build()
com.facebook.react.bridge.NativeModule: void initialize()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(com.facebook.react.views.progressbar.ProgressBarContainerView)
okhttp3.OkHttpClient$Builder: okhttp3.EventListener$Factory getEventListenerFactory$okhttp()
com.bleplx.adapter.BleModule: void requestConnectionPriorityForDevice(java.lang.String,int,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
com.facebook.react.turbomodule.core.NativeModuleSoLoader: void maybeLoadSoLibrary()
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl get(java.net.URI)
okhttp3.internal.http2.Http2Reader$ContinuationSource: int getLength()
com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl: NativeMethodCallInvokerHolderImpl(com.facebook.jni.HybridData)
okhttp3.HttpUrl$Builder: HttpUrl$Builder()
com.facebook.react.bridge.JavaJSExecutor: void close()
okhttp3.internal.platform.Platform$Companion: void resetForTests(okhttp3.internal.platform.Platform)
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyJNI(long)
okhttp3.internal.cache.DiskLruCache: boolean access$getCivilizedFileSystem$p(okhttp3.internal.cache.DiskLruCache)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$3: RxBleConnectionImpl$3(com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl,com.polidea.rxandroidble2.NotificationSetupMode)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatRadioButton: void setFilters(android.text.InputFilter[])
com.facebook.react.modules.dialog.DialogModule: java.util.Map getTypedExportedConstants()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getJSQueueThreadSpec()
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.dialog.DialogModule)
okhttp3.Response: okhttp3.ResponseBody peekBody(long)
okhttp3.internal.Util: java.util.List filterList(java.lang.Iterable,kotlin.jvm.functions.Function1)
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: io.reactivex.CompletableSource lambda$teardownModeTransformer$6(com.polidea.rxandroidble2.NotificationSetupMode,android.bluetooth.BluetoothGattCharacteristic,com.polidea.rxandroidble2.internal.connection.DescriptorWriter,byte[],io.reactivex.Completable)
com.polidea.rxandroidble2.helpers.LocationServicesOkObservable: LocationServicesOkObservable(io.reactivex.Observable)
okhttp3.internal.http2.Http2Reader$ContinuationSource: int getLeft()
com.facebook.soloader.DirectApkSoSource: void prepare(int)
okhttp3.CookieJar$Companion$NoCookies: java.util.List loadForRequest(okhttp3.HttpUrl)
okhttp3.Cache$Entry: void writeTo(okhttp3.internal.cache.DiskLruCache$Editor)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.textinput.ReactEditText createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.HttpUrl: java.lang.String query()
okhttp3.internal.http2.Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1: Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1()
com.polidea.rxandroidble2.internal.connection.ConnectorImpl: io.reactivex.Observable obtainRxBleConnection(com.polidea.rxandroidble2.internal.connection.ConnectionComponent)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.Handshake$Companion$handshake$1: java.util.List invoke()
com.facebook.soloader.UnpackingSoSource: boolean refreshLocked(com.facebook.soloader.FileLocker,int,byte[])
com.facebook.react.modules.intent.IntentModule: void getInitialURL(com.facebook.react.bridge.Promise)
com.polidea.rxandroidble2.internal.util.CharacteristicPropertiesParser: CharacteristicPropertiesParser(int,int,int,int,int,int,int)
com.polidea.rxandroidble2.RxBleClient: com.polidea.rxandroidble2.RxBleClient$State getState()
okhttp3.internal.http2.Http2ExchangeCodec: okio.Source openResponseBodySource(okhttp3.Response)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothAdapterFactory: ClientComponent_ClientModule_ProvideBluetoothAdapterFactory()
okhttp3.internal.http2.Http2Stream$StreamTimeout: java.io.IOException newTimeoutException(java.io.IOException)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.bridge.NativeModule)
com.bleplx.BlePlxModule: boolean isRequestPossibleHandler(java.lang.String,com.facebook.react.bridge.Promise)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: int getMtu()
com.facebook.react.views.text.ReactTextView: int getGravityHorizontal()
okhttp3.Cookie: boolean matches(okhttp3.HttpUrl)
com.polidea.rxandroidble2.scan.ScanCallbackType: com.polidea.rxandroidble2.scan.ScanCallbackType valueOf(java.lang.String)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void readTheList()
io.reactivex.Observable: io.reactivex.Observable retry()
okhttp3.internal.connection.RouteException: RouteException(java.io.IOException)
com.polidea.rxandroidble2.internal.DeviceModule: DeviceModule()
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
okhttp3.internal.connection.Exchange: Exchange(okhttp3.internal.connection.RealCall,okhttp3.EventListener,okhttp3.internal.connection.ExchangeFinder,okhttp3.internal.http.ExchangeCodec)
com.facebook.react.bridge.BaseJavaModule: void invalidate()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignSelfJNI(long)
com.facebook.react.modules.debug.DevSettingsModule: void setIsDebuggingRemotely(boolean)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationManagerFactory: android.location.LocationManager get()
com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper_Factory: com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper get()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
okhttp3.OkHttpClient$Builder: okhttp3.Dispatcher getDispatcher$okhttp()
androidx.fragment.app.FragmentActivity: void validateRequestPermissionsRequestCode(int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName[] values()
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$2: void onNext(java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable onErrorResumeNext(io.reactivex.functions.Function)
com.bleplx.adapter.BleModule: void lambda$changeAdapterState$17(com.bleplx.adapter.utils.SafeExecutor,java.lang.String,com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState)
okhttp3.Response: okhttp3.Response cacheResponse()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeOffset(double,double)
com.facebook.react.bridge.UIManager: java.lang.String resolveCustomDirectEventName(java.lang.String)
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.ExchangeFinder getFinder$okhttp()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void close()
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void setLocale(android.content.res.Configuration,java.util.Locale)
io.reactivex.internal.util.ArrayListSupplier: io.reactivex.internal.util.ArrayListSupplier[] values()
com.polidea.rxandroidble2.RxBleClientImpl: void lambda$scanBleDevices$0(com.polidea.rxandroidble2.scan.ScanResult)
com.facebook.soloader.SoLoader: int getSoSourcesVersion()
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View)
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache: boolean containsKey(java.lang.Object)
okhttp3.Request$Builder: okhttp3.Request$Builder patch(okhttp3.RequestBody)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: int getJSArgumentsNeeded()
io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
okhttp3.internal.cache2.Relay$RelaySource: okio.Timeout timeout()
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(com.facebook.react.views.view.ReactViewGroup)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
okhttp3.OkHttpClient$Builder: void setEventListenerFactory$okhttp(okhttp3.EventListener$Factory)
com.polidea.rxandroidble2.internal.scan.InternalToExternalScanResultConverter: java.lang.Object apply(java.lang.Object)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetFlexBasisJNI(long)
okhttp3.MediaType: java.lang.String -deprecated_subtype()
io.reactivex.Observable: io.reactivex.Observable concatMapEager(io.reactivex.functions.Function,int,int)
androidx.appcompat.widget.SwitchCompat: void setSwitchMinWidth(int)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)
com.facebook.react.fabric.events.EventEmitterWrapper: void dispatchEvent(java.lang.String,com.facebook.react.bridge.NativeMap,int)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.bridge.CxxCallbackImpl: void invoke(java.lang.Object[])
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
okhttp3.Response$Builder: void setHandshake$okhttp(okhttp3.Handshake)
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi31_Factory: com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi31 newInstance(com.polidea.rxandroidble2.internal.util.CheckerLocationProvider,com.polidea.rxandroidble2.internal.util.CheckerScanPermission,boolean,boolean)
io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi18_Factory: java.lang.Object get()
com.polidea.rxandroidble2.internal.scan.ScanRecordImplCompat: int getAdvertiseFlags()
com.polidea.rxandroidble2.internal.util.ByteAssociation: boolean equals(java.lang.Object)
com.facebook.react.bridge.ProxyJavaScriptExecutor: java.lang.String getName()
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher: void notifyNativeServicesDiscoveredCallback(android.bluetooth.BluetoothGatt,int)
io.reactivex.Observable: io.reactivex.Observable doFinally(io.reactivex.functions.Action)
com.facebook.fbreact.specs.NativeBugReportingSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap)
com.polidea.rxandroidble2.scan.ScanFilter: boolean equals(java.lang.Object,java.lang.Object)
okhttp3.Response: java.lang.String toString()
com.polidea.rxandroidble2.internal.operations.OperationsProvider: com.polidea.rxandroidble2.internal.operations.DescriptorWriteOperation provideWriteDescriptor(android.bluetooth.BluetoothGattDescriptor,byte[])
io.reactivex.Flowable: io.reactivex.Single toMap(io.reactivex.functions.Function)
okhttp3.RequestBody$Companion$toRequestBody$1: long contentLength()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostResume()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.bridge.JSONArguments: JSONArguments()
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarIndeterminate(boolean)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
okhttp3.internal.platform.AndroidPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.Request: okhttp3.RequestBody -deprecated_body()
io.reactivex.Flowable: io.reactivex.parallel.ParallelFlowable parallel()
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.facebook.react.uimanager.ViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: PublicSuffixDatabase$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Request$Builder: java.lang.String getMethod$okhttp()
okhttp3.Request: boolean isHttps()
okhttp3.internal.platform.AndroidPlatform: boolean isCleartextTrafficPermitted(java.lang.String)
okhttp3.Dispatcher: void setIdleCallback(java.lang.Runnable)
io.reactivex.Flowable: io.reactivex.Single collectInto(java.lang.Object,io.reactivex.functions.BiConsumer)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: android.bluetooth.BluetoothGattCallback getBluetoothGattCallback()
androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)
io.reactivex.Observable: io.reactivex.Observable doOnSubscribe(io.reactivex.functions.Consumer)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.NativeArray measureLinesMapBuffer(com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,float,float)
com.facebook.react.bridge.ReactContext: void initializeInteropModules(com.facebook.react.bridge.ReactContext)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void extractAnimatedNodeOffset(double)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
okhttp3.RequestBody: void writeTo(okio.BufferedSink)
com.facebook.react.fabric.FabricUIManager: void onHostDestroy()
com.facebook.react.modules.intent.IntentModule: IntentModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getTypedExportedConstants()
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadPing(okio.ByteString)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
io.reactivex.Observable: io.reactivex.Observable switchOnNextDelayError(io.reactivex.ObservableSource)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
com.facebook.react.modules.appstate.AppStateModule: AppStateModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactScrollView,int)
com.facebook.soloader.nativeloader.NativeLoader: boolean loadLibrary(java.lang.String,int)
okhttp3.Call: boolean isCanceled()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: void setUnsupported(boolean)
io.reactivex.Single: io.reactivex.SingleObserver subscribeWith(io.reactivex.SingleObserver)
okhttp3.Handshake$Companion$get$1: java.lang.Object invoke()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void announceForAccessibilityWithOptions(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl access$1900(com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl)
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher_Factory$InstanceHolder: com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher_Factory access$000()
com.facebook.soloader.DirectorySoSource: java.io.File unpackLibrary(java.lang.String)
com.facebook.react.bridge.Arguments: void addEntry(com.facebook.react.bridge.WritableNativeMap,java.lang.String,java.lang.Object)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.PushObserver getPushObserver$okhttp()
com.polidea.rxandroidble2.internal.DeviceModule_ProvideConnectionStateRelayFactory$InstanceHolder: DeviceModule_ProvideConnectionStateRelayFactory$InstanceHolder()
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: io.reactivex.Observable getOnDescriptorWrite()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: void afterHandshake(javax.net.ssl.SSLSocket)
okhttp3.internal.http2.Header: okhttp3.internal.http2.Header copy(okio.ByteString,okio.ByteString)
com.facebook.react.animated.NativeAnimatedModule: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)
com.facebook.react.bridge.NativeMap: java.lang.String toString()
io.reactivex.Observable: io.reactivex.Completable concatMapCompletable(io.reactivex.functions.Function)
com.facebook.soloader.UnpackingSoSource: void deleteUnmentionedFiles(com.facebook.soloader.UnpackingSoSource$Dso[])
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.polidea.rxandroidble2.scan.ScanCallbackType: ScanCallbackType(java.lang.String,int)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: int getTextDirection(android.view.View)
io.reactivex.Observable: io.reactivex.Observable switchIfEmpty(io.reactivex.ObservableSource)
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: void initialize(java.lang.Boolean,java.lang.Boolean,com.polidea.rxandroidble2.Timeout)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Observable observeConnectionParametersUpdates()
okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)
okhttp3.internal.concurrent.Task: void setNextExecuteNanoTime$okhttp(long)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode()
com.facebook.react.devsupport.HMRClient: void setup(java.lang.String,java.lang.String,java.lang.String,int,boolean)
io.reactivex.Flowable: io.reactivex.Flowable concatMap(io.reactivex.functions.Function)
com.polidea.rxandroidble2.RxBleDeviceServices: io.reactivex.Single getDescriptor(java.util.UUID,java.util.UUID)
com.facebook.soloader.MinElf$ISA: MinElf$ISA(java.lang.String,int,java.lang.String)
com.facebook.react.fabric.StateWrapperImpl: com.facebook.jni.HybridData initHybrid()
com.polidea.rxandroidble2.RxBleClientImpl: com.polidea.rxandroidble2.scan.BackgroundScanner getBackgroundScanner()
okhttp3.internal.http1.HeadersReader: java.lang.String readLine()
okhttp3.OkHttpClient: okhttp3.Cache -deprecated_cache()
okhttp3.internal.http2.Http2Reader: void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
okhttp3.ResponseBody: byte[] bytes()
com.polidea.rxandroidble2.internal.scan.ScanFilterInterface: boolean matches(com.polidea.rxandroidble2.internal.ScanResultInterface)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
androidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
com.bleplx.BlePlxModule: void devices(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder domain(java.lang.String,boolean)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: AndroidSocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Headers: long byteCount()
com.polidea.rxandroidble2.scan.ScanSettings: com.polidea.rxandroidble2.scan.ScanSettings copyWithCallbackType(int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startListeningToAnimatedNodeValue(double)
okhttp3.internal.http2.Huffman$Node: int getSymbol()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: NativeActionSheetManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.ConnectionPool: ConnectionPool(int,long,java.util.concurrent.TimeUnit)
io.reactivex.Observable: java.lang.Object as(io.reactivex.ObservableConverter)
okhttp3.Address: java.util.List protocols()
com.polidea.rxandroidble2.internal.connection.NoRetryStrategy: io.reactivex.ObservableSource apply(io.reactivex.Observable)
com.polidea.rxandroidble2.RxBleClient: java.lang.String[] getRecommendedConnectRuntimePermissions()
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: ReactDatabaseSupplier(android.content.Context)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext)
com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper_Factory: RxBleAdapterWrapper_Factory(bleshadow.javax.inject.Provider)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String)
com.facebook.soloader.UnpackingSoSource: UnpackingSoSource(android.content.Context,java.lang.String)
com.polidea.rxandroidble2.internal.connection.ConnectionSubscriptionWatcher: void onConnectionUnsubscribed()
okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion: RetryAndFollowUpInterceptor$Companion()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.bleplx.BlePlxModule: void writeCharacteristic(int,java.lang.String,java.lang.Boolean,java.lang.String,com.facebook.react.bridge.Promise)
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult: java.lang.String getDeviceName()
okhttp3.internal.connection.Exchange$RequestBodySink: void write(okio.Buffer,long)
com.polidea.rxandroidble2.internal.RxBleDeviceImpl: com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState getConnectionState()
com.facebook.react.uimanager.LayoutShadowNode: void setGap(float)
okhttp3.internal.concurrent.TaskRunner$runnable$1: TaskRunner$runnable$1(okhttp3.internal.concurrent.TaskRunner)
okhttp3.Interceptor$Chain: int writeTimeoutMillis()
io.reactivex.Flowable: io.reactivex.Flowable switchOnNext(org.reactivestreams.Publisher,int)
com.facebook.soloader.NativeDeps: boolean processDepsBytes(byte[],byte[])
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: TurboModuleManager$ModuleHolder()
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])
com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration: TimeoutConfiguration(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.internal.io.FileSystem: okio.Sink appendingSink(java.io.File)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void removeListeners(double)
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxLength(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.views.scroll.ReactScrollView: int getScrollEventThrottle()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeValue(double,double)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexDirectionJNI(long,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
okhttp3.Cache: int writeSuccessCount()
com.polidea.rxandroidble2.internal.connection.MtuProvider: int getMtu()
com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation: io.reactivex.Single getCallback(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback)
com.facebook.soloader.NativeDeps: int getOffsetForLib(java.lang.String)
com.facebook.react.bridge.ReactBridge: long getLoadEndTime()
com.facebook.react.bridge.CatalystInstanceImpl: void addJSIModules(java.util.List)
com.facebook.react.views.text.ReactTextViewManager: ReactTextViewManager(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideScanSetupProviderFactory: ClientComponent_ClientModule_ProvideScanSetupProviderFactory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okio.AsyncTimeout: long access$remainingNanos(okio.AsyncTimeout,long)
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: void write(okio.Buffer,long)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl_Factory: java.lang.Object get()
okhttp3.ResponseBody: long contentLength()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
io.reactivex.Flowable: io.reactivex.Flowable throttleWithTimeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi24_Factory: com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi24_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.bridge.ReadableMap: boolean getBoolean(java.lang.String)
io.reactivex.Observable: io.reactivex.Observable delaySubscription(long,java.util.concurrent.TimeUnit)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread getJSMessageQueueThread()
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.react.modules.core.DeviceEventManagerModule: void invokeDefaultBackPressHandler()
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyOnLayout(boolean)
io.reactivex.Observable: io.reactivex.Observable timeout(io.reactivex.functions.Function)
okhttp3.HttpUrl$Builder: void pop()
okhttp3.HttpUrl: java.lang.String encodedPassword()
io.reactivex.Observable: io.reactivex.Observable fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsDirtyJNI(long)
okhttp3.internal.platform.AndroidPlatform$Companion: okhttp3.internal.platform.Platform buildIfSupported()
com.polidea.rxandroidble2.exceptions.BleDisconnectedException: java.lang.String createMessage(java.lang.String,int)
com.facebook.react.ReactRootView: java.lang.String getSurfaceID()
io.reactivex.Observable: io.reactivex.Observable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.ObservableSource)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withWriteTimeout(int,java.util.concurrent.TimeUnit)
okhttp3.Address: Address(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)
okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache_Factory: com.polidea.rxandroidble2.internal.cache.DeviceComponentCache get()
io.reactivex.Observable: io.reactivex.Observable join(io.reactivex.ObservableSource,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
com.facebook.react.views.view.ReactViewGroup: int getBackgroundColor()
okhttp3.internal.tls.BasicCertificateChainCleaner: boolean equals(java.lang.Object)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle[] values()
com.facebook.react.bridge.WritableArray: void pushNull()
okhttp3.CertificatePinner$Companion: okio.ByteString sha256Hash(java.security.cert.X509Certificate)
androidx.core.view.ViewCompat$Api17Impl: int getLabelFor(android.view.View)
com.facebook.react.bridge.WritableNativeArray: void pushInt(int)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.app.AppCompatActivity: void onNightModeChanged(int)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion: BouncyCastleSocketAdapter$Companion()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarShadowNode createShadowNodeInstance()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodes(double,double)
okhttp3.internal.tls.BasicCertificateChainCleaner$Companion: BasicCertificateChainCleaner$Companion()
okhttp3.internal.platform.android.AndroidLogHandler: void publish(java.util.logging.LogRecord)
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedDispatcher findOnBackInvokedDispatcher(android.view.View)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder onlyIfCached()
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function5)
okhttp3.CipherSuite$Companion: okhttp3.CipherSuite forJavaName(java.lang.String)
okio.ForwardingSink: void flush()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getCommandsMap()
okhttp3.MultipartBody$Builder: MultipartBody$Builder(java.lang.String)
com.facebook.react.runtime.ReactInstance: void registerSegmentNative(int,java.lang.String)
com.polidea.rxandroidble2.internal.util.DisposableUtil$1: void onError(java.lang.Throwable)
com.facebook.soloader.ElfZipFileChannel: int write(java.nio.ByteBuffer)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean,int)
okio.ForwardingSink: okio.Timeout timeout()
io.reactivex.Observable: io.reactivex.Observable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()
okhttp3.internal.platform.Platform: java.lang.String toString()
okhttp3.internal.platform.android.ConscryptSocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
okhttp3.internal.http2.Http2Stream$FramingSink: boolean getClosed()
okhttp3.internal.platform.Platform$Companion: void resetForTests$default(okhttp3.internal.platform.Platform$Companion,okhttp3.internal.platform.Platform,int,java.lang.Object)
com.polidea.rxandroidble2.scan.ScanFilter$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Stream,okhttp3.internal.http2.Http2Connection$ReaderRunnable,okhttp3.internal.http2.Http2Stream,int,java.util.List,boolean)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setDefaultLocales(androidx.core.os.LocaleListCompat)
com.polidea.rxandroidble2.ClientComponent$ClientModule: com.polidea.rxandroidble2.ClientComponent$ClientComponentFinalizer provideFinalizationCloseable(java.util.concurrent.ExecutorService,io.reactivex.Scheduler,java.util.concurrent.ExecutorService)
okhttp3.OkHttpClient: int readTimeoutMillis()
com.facebook.soloader.SoSource: java.lang.String[] getLibraryDependencies(java.lang.String)
okhttp3.Handshake$Companion: Handshake$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.view.ReactViewManager: void setTVPreferredFocus(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.bridge.DynamicFromObject: int asInt()
com.facebook.react.modules.clipboard.ClipboardModule: android.content.ClipboardManager getClipboardService()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String)
okhttp3.internal.concurrent.TaskRunner$Companion: TaskRunner$Companion()
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter: void onDisconnectedException(com.polidea.rxandroidble2.exceptions.BleDisconnectedException)
com.facebook.soloader.SystemLoadLibraryWrapper: void loadLibrary(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void onCatalystInstanceDestroy()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(java.util.Map)
okhttp3.internal.http2.Http2Stream: void setErrorException$okhttp(java.io.IOException)
com.polidea.rxandroidble2.scan.ScanCallbackType: com.polidea.rxandroidble2.scan.ScanCallbackType[] values()
com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper: void startLeScan(java.util.List,android.bluetooth.le.ScanSettings,android.bluetooth.le.ScanCallback)
okhttp3.internal.cache2.Relay: okio.Buffer getUpstreamBuffer()
okhttp3.EventListener: void responseBodyEnd(okhttp3.Call,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
okhttp3.internal.concurrent.TaskRunner$Backend: void execute(java.lang.Runnable)
com.bleplx.adapter.BleModule: void lambda$safeWriteDescriptorForDevice$12(com.bleplx.adapter.utils.SafeExecutor,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setTrackResource(int)
com.facebook.react.ReactActivity: com.facebook.react.ReactInstanceManager getReactInstanceManager()
io.reactivex.Flowable: io.reactivex.Single last(java.lang.Object)
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
okhttp3.internal.http.BridgeInterceptor: BridgeInterceptor(okhttp3.CookieJar)
io.reactivex.Flowable: io.reactivex.Flowable concatMapSingleDelayError(io.reactivex.functions.Function,boolean)
com.facebook.react.bridge.JavaOnlyArray: boolean equals(java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityCreated(android.app.Activity,android.os.Bundle)
okhttp3.internal.http.DatesKt: java.util.Date toHttpDateOrNull(java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.facebook.react.uimanager.BaseViewManager: float sanitizeFloatPropertyValue(float)
okhttp3.internal.http2.Settings: boolean getEnablePush(boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.facebook.react.bridge.JSIModuleHolder: JSIModuleHolder(com.facebook.react.bridge.JSIModuleSpec)
io.reactivex.Observable: io.reactivex.Observable buffer(io.reactivex.ObservableSource,int)
com.polidea.rxandroidble2.ClientComponent$ClientModule: com.polidea.rxandroidble2.internal.scan.IsConnectableChecker provideIsConnectableChecker(int,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.bridge.JavaMethodWrapper$3: JavaMethodWrapper$3()
io.reactivex.Single: io.reactivex.Single onTerminateDetach()
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState getReactScrollViewScrollState()
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl access$1800(com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl)
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi18: com.polidea.rxandroidble2.scan.IsConnectable check(android.bluetooth.le.ScanResult)
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.uimanager.StateWrapper getStateWrapper()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Observable setupIndication(java.util.UUID,com.polidea.rxandroidble2.NotificationSetupMode)
com.polidea.rxandroidble2.internal.QueueOperation: io.reactivex.Observable run(com.polidea.rxandroidble2.internal.serialization.QueueReleaseInterface)
com.polidea.rxandroidble2.internal.connection.LoggingIllegalOperationHandler_Factory: com.polidea.rxandroidble2.internal.connection.LoggingIllegalOperationHandler get()
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
okhttp3.internal.platform.OpenJSSEPlatform: boolean access$isSupported$cp()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$4: io.reactivex.SingleSource apply(android.bluetooth.BluetoothGattCharacteristic)
io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe()
okhttp3.internal.http1.HeadersReader: okio.BufferedSource getSource()
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: io.reactivex.Observable getOnMtuChanged()
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.lang.String)
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Observable queue(com.polidea.rxandroidble2.RxBleCustomOperation,com.polidea.rxandroidble2.internal.Priority)
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: long runOnce()
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$6: java.util.List call()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.http1.Http1ExchangeCodec: int access$getState$p(okhttp3.internal.http1.Http1ExchangeCodec)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel valueOf(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: void putDouble(java.lang.String,double)
com.facebook.react.modules.fresco.FrescoModule: void clearSensitiveData()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year[] values()
com.facebook.react.bridge.UIManagerListener: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowColor(int)
com.polidea.rxandroidble2.utils.ConnectionSharingAdapter$1: void run()
com.polidea.rxandroidble2.internal.util.DisposableUtil$2: void onNext(java.lang.Object)
com.polidea.rxandroidble2.internal.connection.MtuWatcher_Factory: com.polidea.rxandroidble2.internal.connection.MtuWatcher_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setIncludeFontPadding(com.facebook.react.views.text.ReactTextView,boolean)
com.polidea.rxandroidble2.internal.connection.MtuBasedPayloadSizeLimit: MtuBasedPayloadSizeLimit(com.polidea.rxandroidble2.RxBleConnection,int)
com.facebook.react.ReactActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.facebook.react.uimanager.BaseViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.SwitchCompat$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsConnectableCheckerFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsConnectableCheckerFactory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.uimanager.BaseViewManager: void setTouchEnd(android.view.View,boolean)
okhttp3.Response$Builder: okhttp3.Response$Builder sentRequestAtMillis(long)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
com.polidea.rxandroidble2.internal.connection.IllegalOperationMessageCreator_Factory: com.polidea.rxandroidble2.internal.connection.IllegalOperationMessageCreator_Factory create(bleshadow.javax.inject.Provider)
io.reactivex.Flowable: io.reactivex.Flowable serialize()
com.facebook.react.views.view.ReactViewManager: void setHitSlop(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.Dynamic)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day valueOf(java.lang.String)
io.reactivex.Observable: io.reactivex.Observable concatMapIterable(io.reactivex.functions.Function,int)
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable$1: android.bluetooth.BluetoothGatt apply(com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState)
okhttp3.CipherSuite: CipherSuite(java.lang.String)
com.polidea.rxandroidble2.exceptions.BleGattException: BleGattException(android.bluetooth.BluetoothGatt,int,com.polidea.rxandroidble2.exceptions.BleGattOperationType)
com.polidea.rxandroidble2.ClientComponent$ClientComponentFinalizer: void onFinalize()
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getType()
com.facebook.react.bridge.JsonWriterHelper: void readableMapValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableMap)
com.facebook.react.ReactInstanceManager: void handleCxxError(java.lang.Exception)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: AndroidCertificateChainCleaner(javax.net.ssl.X509TrustManager,android.net.http.X509TrustManagerExtensions)
okhttp3.internal.Util: boolean canReuseConnectionFor(okhttp3.HttpUrl,okhttp3.HttpUrl)
com.bleplx.adapter.BleModule: com.bleplx.adapter.Characteristic getCharacteristicOrEmitError(java.lang.String,java.lang.String,java.lang.String,com.bleplx.adapter.OnErrorCallback)
io.reactivex.Flowable: io.reactivex.Flowable rangeLong(long,long)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.String)
okhttp3.OkHttpClient$Builder: void setMinWebSocketMessageToCompress$okhttp(long)
okhttp3.internal.Util: void writeMedium(okio.BufferedSink,int)
io.reactivex.Flowable: io.reactivex.Flowable observeOn(io.reactivex.Scheduler,boolean)
okhttp3.internal.connection.Exchange$ResponseBodySource: long read(okio.Buffer,long)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.JSExceptionHandler)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder eventListener(okhttp3.EventListener)
com.polidea.rxandroidble2.internal.serialization.OperationPriorityFifoBlockingQueue: boolean remove(com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String)
okhttp3.Cookie: java.util.regex.Pattern access$getMONTH_PATTERN$cp()
io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe()
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder pushObserver(okhttp3.internal.http2.PushObserver)
com.ghostcommv2.R$string: R$string()
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithIncrementalIndexingNewName()
okhttp3.internal.authenticator.JavaNetAuthenticator: JavaNetAuthenticator(okhttp3.Dns,int,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Interceptor$Chain: int readTimeoutMillis()
com.facebook.react.uimanager.ViewManager: long measure(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi24_Factory: com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi24 newInstance(com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi18,io.reactivex.Scheduler)
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.BaseJavaModule getModule()
com.facebook.react.bridge.CatalystInstanceImpl$3: CatalystInstanceImpl$3(com.facebook.react.bridge.CatalystInstanceImpl)
okhttp3.Cache$Entry: okhttp3.Response response(okhttp3.internal.cache.DiskLruCache$Snapshot)
okhttp3.internal.HostnamesKt: java.lang.String toCanonicalHost(java.lang.String)
okhttp3.Request: java.lang.String -deprecated_method()
okhttp3.internal.ws.WebSocketWriter: java.util.Random getRandom()
com.facebook.react.bridge.JsonWriterHelper: void mapValue(android.util.JsonWriter,java.util.Map)
okhttp3.internal.http2.Http2ExchangeCodec: void writeRequestHeaders(okhttp3.Request)
com.facebook.react.uimanager.BaseViewManager: void setPointerOutCapture(android.view.View,boolean)
okhttp3.internal.http2.Http2Reader$Companion: Http2Reader$Companion()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$ReaderRunnable getReaderRunnable()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactScrollView,boolean)
androidx.fragment.app.DialogFragment: DialogFragment()
com.facebook.react.bridge.ReactCallback: void incrementPendingJSCalls()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
io.reactivex.Observable: io.reactivex.Single contains(java.lang.Object)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType valueOf(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Completable writeDescriptor(android.bluetooth.BluetoothGattDescriptor,byte[])
okhttp3.internal.http2.Http2Connection: void writePing(boolean,int,int)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideConnectionQueueExecutorServiceFactory$InstanceHolder: ClientComponent_ClientModule_ProvideConnectionQueueExecutorServiceFactory$InstanceHolder()
com.polidea.rxandroidble2.internal.connection.ConnectorImpl_Factory: com.polidea.rxandroidble2.internal.connection.ConnectorImpl get()
okhttp3.Address: okhttp3.HttpUrl url()
com.facebook.react.views.textinput.ReactEditText: void setMaxFontSizeMultiplier(float)
com.facebook.soloader.R: R()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long getStackSize()
io.reactivex.Flowable: io.reactivex.Flowable window(java.util.concurrent.Callable,int)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importValues()
com.facebook.fbreact.specs.NativeRedBoxSpec: NativeRedBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignSelfJNI(long,int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder eventListenerFactory(okhttp3.EventListener$Factory)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
io.reactivex.Flowable: io.reactivex.Flowable generate(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)
com.polidea.rxandroidble2.internal.cache.CacheEntry: java.lang.String getKey()
okhttp3.CacheControl: boolean -deprecated_mustRevalidate()
com.polidea.rxandroidble2.internal.util.ScanRecordParser: byte[] extractBytes(byte[],int,int)
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean)
io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.functions.Function,int,io.reactivex.ObservableSource[])
com.bleplx.adapter.BleModule: void safeDiscoverAllServicesAndCharacteristicsForDevice(com.bleplx.adapter.Device,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
okhttp3.internal.ws.WebSocketExtensions: WebSocketExtensions(boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.ReactContext: void resetPerfStats()
com.facebook.react.views.view.ReactViewManager: void setBorderStyle(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.react.views.image.ReactImageManager: void setInternal_AnalyticsTag(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.soloader.SysUtil$Api14Utils: SysUtil$Api14Utils()
io.reactivex.Observable: io.reactivex.Observable throttleLast(long,java.util.concurrent.TimeUnit)
com.facebook.react.modules.blob.BlobModule: java.lang.String getMimeTypeFromUri(android.net.Uri)
okhttp3.Response: okhttp3.Protocol protocol()
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher_Factory: com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher newInstance()
com.facebook.react.uimanager.LayoutShadowNode: void setMinWidth(com.facebook.react.bridge.Dynamic)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder immutable()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: java.lang.String getName()
okhttp3.internal.ws.MessageInflater: void inflate(okio.Buffer)
com.polidea.rxandroidble2.exceptions.BleDisconnectedException: BleDisconnectedException(java.lang.Throwable,java.lang.String,int)
com.reactnativecommunity.asyncstorage.AsyncStorageErrorUtil: com.facebook.react.bridge.WritableMap getInvalidKeyError(java.lang.String)
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getConstants()
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.RequestBody: okhttp3.RequestBody create(byte[],okhttp3.MediaType,int,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request buildRedirectRequest(okhttp3.Response,java.lang.String)
com.facebook.react.modules.debug.AnimationsDebugModule: AnimationsDebugModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.debug.interfaces.DeveloperSettings)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: java.lang.String getName()
okhttp3.internal.http2.Http2Connection: java.util.Set access$getCurrentPushRequests$p(okhttp3.internal.http2.Http2Connection)
com.polidea.rxandroidble2.internal.connection.MtuBasedPayloadSizeLimit_Factory: java.lang.Object get()
com.facebook.soloader.UnpackingSoSource$InputDso: java.io.InputStream getStream()
io.reactivex.Single: io.reactivex.Flowable merge(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void getAllKeys(com.facebook.react.bridge.Callback)
okhttp3.Handshake$Companion: java.util.List toImmutableList(java.security.cert.Certificate[])
com.facebook.soloader.UnpackingSoSource$1: void run()
com.facebook.soloader.ElfFileChannel: ElfFileChannel(java.io.File)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: void setTextAlignment(android.view.View,int)
com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTEventEmitter)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPassword(java.lang.String)
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.internal.Util: int indexOfFirstNonAsciiWhitespace$default(java.lang.String,int,int,int,java.lang.Object)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Writer getWriter()
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl_Factory: LongWriteOperationBuilderImpl_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.ReactActivity: com.facebook.react.ReactNativeHost getReactNativeHost()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String getName()
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule lambda$new$2(com.facebook.react.turbomodule.core.TurboModuleManagerDelegate,java.lang.String)
okhttp3.internal.io.FileSystem: void deleteContents(java.io.File)
okhttp3.MultipartReader: void close()
com.polidea.rxandroidble2.internal.operations.Operation: io.reactivex.Observable run(com.polidea.rxandroidble2.internal.serialization.QueueReleaseInterface)
com.facebook.soloader.SoLoader$TestOnlyUtils: void setSoFileLoader(com.facebook.soloader.SoFileLoader)
io.reactivex.Single: io.reactivex.Single fromObservable(io.reactivex.ObservableSource)
com.polidea.rxandroidble2.scan.ScanFilter: android.os.ParcelUuid getServiceUuid()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceMotionState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.app.AppLocalesMetadataHolderService$Api24Impl: int getDisabledComponentFlag()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread()
com.polidea.rxandroidble2.internal.operations.ConnectOperation_Factory: com.polidea.rxandroidble2.internal.operations.ConnectOperation newInstance(android.bluetooth.BluetoothDevice,com.polidea.rxandroidble2.internal.util.BleConnectionCompat,com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider,com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration,boolean,com.polidea.rxandroidble2.internal.connection.ConnectionStateChangeListener)
okhttp3.internal.cache.FaultHidingSink: void close()
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,boolean,int)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDisableNotificationValueFactory: ClientComponent_ClientModule_ProvideDisableNotificationValueFactory()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$6: io.reactivex.SingleSource apply(android.bluetooth.BluetoothGattDescriptor)
com.polidea.rxandroidble2.RxBleClientImpl: RxBleClientImpl(com.polidea.rxandroidble2.internal.util.BluetoothManagerWrapper,com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,com.polidea.rxandroidble2.internal.serialization.ClientOperationQueue,io.reactivex.Observable,com.polidea.rxandroidble2.internal.util.ScanRecordParser,com.polidea.rxandroidble2.internal.util.LocationServicesStatus,bleshadow.dagger.Lazy,com.polidea.rxandroidble2.internal.RxBleDeviceProvider,com.polidea.rxandroidble2.internal.scan.ScanSetupBuilder,com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifier,io.reactivex.functions.Function,io.reactivex.Scheduler,com.polidea.rxandroidble2.ClientComponent$ClientComponentFinalizer,com.polidea.rxandroidble2.scan.BackgroundScanner,com.polidea.rxandroidble2.internal.util.CheckerScanPermission,com.polidea.rxandroidble2.internal.util.CheckerConnectPermission)
com.polidea.rxandroidble2.internal.operations.ScanOperationApi18$1: ScanOperationApi18$1(com.polidea.rxandroidble2.internal.operations.ScanOperationApi18,io.reactivex.ObservableEmitter)
com.facebook.soloader.nativeloader.NativeLoader: void initIfUninitialized(com.facebook.soloader.nativeloader.NativeLoaderDelegate)
io.reactivex.Flowable: io.reactivex.Flowable skip(long,java.util.concurrent.TimeUnit)
com.facebook.jni.DestructorThread: DestructorThread()
com.polidea.rxandroidble2.RxBleClient: com.polidea.rxandroidble2.scan.BackgroundScanner getBackgroundScanner()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void alternateService(int,java.lang.String,okio.ByteString,java.lang.String,int,long)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableNativeMap getMap(java.lang.String)
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi26_Factory$InstanceHolder: IsConnectableCheckerApi26_Factory$InstanceHolder()
okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$1: io.reactivex.Single apply(com.polidea.rxandroidble2.RxBleDeviceServices)
okhttp3.internal.connection.Exchange: void noRequestBody()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsNearbyPermissionNeverForLocationFactory: boolean provideIsNearbyPermissionNeverForLocation(android.content.Context)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
com.facebook.react.fabric.FabricUIManager: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
okhttp3.Handshake: java.security.Principal localPrincipal()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray of(java.lang.Object[])
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.uimanager.SimpleViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector instance()
com.facebook.soloader.MinElf: java.lang.String getSz(com.facebook.soloader.ElfByteChannel,java.nio.ByteBuffer,long)
com.facebook.soloader.MinElf: short getu8(com.facebook.soloader.ElfByteChannel,java.nio.ByteBuffer,long)
com.facebook.soloader.NativeDeps: int verifyBytesAndGetOffset(byte[],byte[])
com.facebook.react.uimanager.ComponentNameResolverManager: void installJSIBindings()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void clear(com.facebook.react.bridge.Callback)
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex copy(javax.net.ssl.X509TrustManager,java.lang.reflect.Method)
okhttp3.FormBody: java.lang.String encodedValue(int)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(int)
com.polidea.rxandroidble2.exceptions.BleGattException: BleGattException(android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.exceptions.BleGattOperationType)
com.polidea.rxandroidble2.internal.RxBleLog: void d(java.lang.Throwable,java.lang.String,java.lang.Object[])
com.facebook.react.turbomodule.core.NativeModuleSoLoader: boolean access$isSoLibraryLoaded$cp()
io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable: io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable[] values()
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.bleplx.adapter.BleModule: void writeDescriptorForDevice(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setBackgroundColor(java.lang.Integer)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule lambda$new$0(java.lang.String)
com.facebook.react.uimanager.ViewManager: android.view.View createView(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.touch.JSResponderHandler)
okio.ForwardingSource: okio.Source delegate()
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable,int)
okhttp3.internal.http2.Http2Connection: void flush()
io.reactivex.Flowable: io.reactivex.Flowable empty()
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager()
com.facebook.react.ReactRootView: android.os.Bundle getAppProperties()
com.facebook.soloader.SoLoader: java.util.Map access$400()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: NativeIntentAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.bleplx.adapter.BleModule: com.bleplx.adapter.Descriptor getDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
okhttp3.internal.platform.android.DeferredSocketAdapter$Factory: boolean matchesSocket(javax.net.ssl.SSLSocket)
com.polidea.rxandroidble2.internal.connection.IllegalOperationMessageCreator: java.lang.String createMismatchMessage(android.bluetooth.BluetoothGattCharacteristic,int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: NativeAnimatedTurboModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http2.Http2Connection$Companion: Http2Connection$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: io.reactivex.Observable getOnCharacteristicRead()
com.facebook.soloader.DirectorySoSource: java.io.File getSoFileByName(java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(android.view.View,boolean)
androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()
io.reactivex.Observable: io.reactivex.Single toMultimap(io.reactivex.functions.Function)
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: void captureComplete(java.lang.String,java.lang.String)
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi18_Factory: com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi18_Factory create()
okhttp3.EventListener: void satisfactionFailure(okhttp3.Call,okhttp3.Response)
io.reactivex.Observable: io.reactivex.Observable throttleFirst(long,java.util.concurrent.TimeUnit)
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi24: void verify(boolean)
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: void stopScan(com.facebook.react.bridge.Promise)
okhttp3.Cache: okhttp3.Response get$okhttp(okhttp3.Request)
com.facebook.react.bridge.ReadableMap: int getInt(java.lang.String)
com.facebook.jni.MapIteratorHelper: boolean hasNext()
com.facebook.react.ReactActivity: void onPause()
okhttp3.internal.http2.Http2Reader: Http2Reader(okio.BufferedSource,boolean)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(java.lang.String,okhttp3.MediaType)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion: BouncyCastleSocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.modules.image.ImageLoaderModule: void onHostResume()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.react.bridge.ReadableNativeMap: void checkInstance(java.lang.String,java.lang.Object,java.lang.Class)
okhttp3.internal.cache.DiskLruCache: void processJournal()
okhttp3.Cache: int hitCount()
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable debounce(io.reactivex.functions.Function)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$2: void onCharacteristicWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)
okhttp3.internal.ws.WebSocketReader: void readUntilNonControlFrame()
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5$1: boolean test(java.lang.Boolean)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: boolean equals(java.lang.Object)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator: io.reactivex.ObservableTransformer scanModeBalancedTransformer()
androidx.appcompat.widget.SwitchCompat: void setTextOffInternal(java.lang.CharSequence)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
com.facebook.react.fabric.FabricUIManager: void stopSurface(com.facebook.react.interfaces.fabric.SurfaceHandler)
com.bleplx.adapter.BleModule: void startDeviceScan(java.lang.String[],int,int,boolean,com.bleplx.adapter.OnEventCallback,com.bleplx.adapter.OnErrorCallback)
com.facebook.react.uimanager.BaseViewManager: void setRenderToHardwareTexture(android.view.View,boolean)
com.facebook.react.modules.debug.DevSettingsModule: void addMenuItem(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setInputType(int)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
com.facebook.react.views.view.ReactViewManager: void setTransformProperty(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
io.reactivex.Single: io.reactivex.Single doOnEvent(io.reactivex.functions.BiConsumer)
okhttp3.OkHttpClient$Builder: void setConnectTimeout$okhttp(int)
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: PublicSuffixDatabase$Companion()
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation: io.reactivex.functions.Function errorIsRetryableAndAccordingTo(com.polidea.rxandroidble2.RxBleConnection$WriteOperationRetryStrategy,java.nio.ByteBuffer,int,com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$IntSupplier)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReactContext: void setJSExceptionHandler(com.facebook.react.bridge.JSExceptionHandler)
com.facebook.imagepipeline.nativecode.NativeBlurFilter: NativeBlurFilter()
io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax: io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax valueOf(java.lang.String)
okhttp3.internal.http2.Http2Writer: int maxDataLength()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Single readDescriptor(java.util.UUID,java.util.UUID,java.util.UUID)
com.facebook.react.bridge.BackgroundExecutor: BackgroundExecutor(java.lang.String)
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
com.facebook.soloader.ElfByteChannel: long position()
io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function9)
com.facebook.soloader.ExoSoSource$ExoUnpacker: com.facebook.soloader.UnpackingSoSource$DsoManifest getDsoManifest()
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpeg(java.io.InputStream,java.io.OutputStream,int,int,int)
com.facebook.fbreact.specs.NativeModalManagerSpec: void removeListeners(double)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToAlignment(int)
com.facebook.fbreact.specs.NativeBlobModuleSpec: NativeBlobModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])
com.facebook.react.bridge.JSBundleLoader$2: JSBundleLoader$2(java.lang.String,java.lang.String,boolean)
com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter_Factory: AndroidScanObjectsConverter_Factory(bleshadow.javax.inject.Provider)
com.facebook.react.bridge.UIManager: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.internal.http2.Hpack$Writer: void writeInt(int,int,int)
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
okhttp3.EventListener: void connectionAcquired(okhttp3.Call,okhttp3.Connection)
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23_Factory: com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23 get()
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Timeout timeout()
io.reactivex.Flowable: io.reactivex.Flowable concatWith(io.reactivex.CompletableSource)
com.polidea.rxandroidble2.internal.operations.ScanOperationApi18: java.lang.Object createScanCallback(io.reactivex.ObservableEmitter)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
androidx.core.view.ViewCompat$Api17Impl: android.view.Display getDisplay(android.view.View)
io.reactivex.Observable: io.reactivex.Observable retry(long,io.reactivex.functions.Predicate)
okhttp3.CertificatePinner$Companion: java.lang.String pin(java.security.cert.Certificate)
okhttp3.HttpUrl: java.lang.String -deprecated_username()
okhttp3.Request: java.lang.Object tag(java.lang.Class)
io.reactivex.Flowable: io.reactivex.Flowable unsubscribeOn(io.reactivex.Scheduler)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$4: boolean test(java.lang.Object)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setLetterSpacing(com.facebook.react.views.text.ReactTextView,float)
com.polidea.rxandroidble2.internal.connection.DescriptorWriter_Factory: com.polidea.rxandroidble2.internal.connection.DescriptorWriter_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.polidea.rxandroidble2.ClientComponent$ClientModule: com.polidea.rxandroidble2.internal.util.LocationServicesStatus provideLocationServicesStatus(int,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry$1$1: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.internal.connection.RealCall$AsyncCall: void executeOn(java.util.concurrent.ExecutorService)
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$2: void accept(com.polidea.rxandroidble2.exceptions.BleException)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData initHybrid()
io.reactivex.Flowable: io.reactivex.Flowable delaySubscription(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.HttpUrl$Companion: java.lang.String canonicalize$okhttp$default(okhttp3.HttpUrl$Companion,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset,int,java.lang.Object)
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher: void setNativeCallbackHidden(com.polidea.rxandroidble2.HiddenBluetoothGattCallback)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher valueOf(java.lang.String)
io.reactivex.Single: io.reactivex.Single delaySubscription(io.reactivex.SingleSource)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String getName()
com.facebook.imagepipeline.memory.NativeMemoryChunk: NativeMemoryChunk()
okhttp3.internal.connection.Exchange: void writeRequestHeaders(okhttp3.Request)
okhttp3.internal.http.ExchangeCodec$Companion: ExchangeCodec$Companion()
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi24: int getOldestCheckTimestampIndex()
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void stopSamplingProfiler(java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
androidx.appcompat.app.AppCompatActivity: void closeOptionsMenu()
okhttp3.EventListener$Companion: EventListener$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback_Factory: com.polidea.rxandroidble2.internal.connection.RxBleGattCallback get()
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$3$1: io.reactivex.Observable apply(io.reactivex.observables.GroupedObservable)
com.facebook.react.views.image.ReactImageView: void setBackgroundColor(int)
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnection getConnection()
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl parse(java.lang.String)
io.reactivex.Flowable: io.reactivex.Single reduceWith(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String)
com.bleplx.adapter.ConnectionState: com.bleplx.adapter.ConnectionState[] values()
okhttp3.internal.cache.CacheInterceptor$Companion: boolean isContentSpecificHeader(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean isOnThread()
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.polidea.rxandroidble2.scan.ScanFilter$Builder: com.polidea.rxandroidble2.scan.ScanFilter$Builder setServiceSolicitationUuid(android.os.ParcelUuid)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideScanPreconditionVerifierFactory: java.lang.Object get()
com.facebook.soloader.NativeDeps: java.lang.String[] getDependencies(java.lang.String,com.facebook.soloader.ElfByteChannel)
com.facebook.react.modules.appstate.AppStateModule: void addListener(java.lang.String)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,java.io.File,okhttp3.MediaType,int,java.lang.Object)
io.reactivex.Flowable: io.reactivex.Flowable subscribeOn(io.reactivex.Scheduler,boolean)
okhttp3.ConnectionSpec: void apply$okhttp(javax.net.ssl.SSLSocket,boolean)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
okhttp3.internal.ws.WebSocketReader: void readControlFrame()
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl: com.polidea.rxandroidble2.RxBleConnection$LongWriteOperationBuilder setCharacteristic(android.bluetooth.BluetoothGattCharacteristic)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$2: void doInBackgroundGuarded(java.lang.Void[])
okhttp3.internal.cache.DiskLruCache: void completeEdit$okhttp(okhttp3.internal.cache.DiskLruCache$Editor,boolean)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$Output: boolean hasObservers()
okhttp3.CacheControl: int -deprecated_sMaxAgeSeconds()
com.polidea.rxandroidble2.RxBleConnection$LongWriteOperationBuilder: com.polidea.rxandroidble2.RxBleConnection$LongWriteOperationBuilder setWriteOperationAckStrategy(com.polidea.rxandroidble2.RxBleConnection$WriteOperationAckStrategy)
com.facebook.react.modules.dialog.DialogModule: DialogModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(android.view.View)
com.polidea.rxandroidble2.internal.connection.ConnectorImpl: ConnectorImpl(com.polidea.rxandroidble2.internal.serialization.ClientOperationQueue,com.polidea.rxandroidble2.internal.connection.ConnectionComponent$Builder,io.reactivex.Scheduler)
io.reactivex.Flowable: io.reactivex.Flowable take(long,java.util.concurrent.TimeUnit)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(android.view.View,java.lang.String)
com.polidea.rxandroidble2.RxBleClientImpl: java.lang.String[] getRecommendedScanRuntimePermissions()
io.reactivex.Observable: io.reactivex.Observable timestamp(io.reactivex.Scheduler)
com.facebook.react.bridge.CatalystInstanceImpl: void jniRegisterSegment(int,java.lang.String)
okhttp3.TlsVersion$Companion: okhttp3.TlsVersion forJavaName(java.lang.String)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)
io.reactivex.Observable: io.reactivex.Observable buffer(int,java.util.concurrent.Callable)
com.facebook.react.bridge.interop.InteropModuleRegistry: void registerInteropModule(java.lang.Class,java.lang.Object)
com.polidea.rxandroidble2.internal.operations.DescriptorReadOperation: DescriptorReadOperation(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration,android.bluetooth.BluetoothGattDescriptor)
io.reactivex.Observable: io.reactivex.Single collectInto(java.lang.Object,io.reactivex.functions.BiConsumer)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
okhttp3.internal.cache.CacheStrategy$Factory: boolean hasConditions(okhttp3.Request)
okhttp3.EventListener: void requestHeadersEnd(okhttp3.Call,okhttp3.Request)
com.facebook.react.animated.NativeAnimatedModule: void dropAnimatedNode(double)
com.facebook.react.bridge.ReadableType: ReadableType(java.lang.String,int)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder httpOnly()
com.polidea.rxandroidble2.exceptions.BleException: BleException(java.lang.Throwable)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper_Factory: com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper_Factory create(bleshadow.javax.inject.Provider)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Single writeCharacteristic(java.util.UUID,byte[])
okhttp3.internal.ws.RealWebSocket: void onReadMessage(okio.ByteString)
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: NativeDevToolsSettingsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.devsupport.HMRClient: void disable()
com.facebook.react.bridge.UIManagerListener: void didMountItems(com.facebook.react.bridge.UIManager)
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$1: ServiceDiscoveryManager$1(com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager,long,java.util.concurrent.TimeUnit)
okhttp3.Cache: okhttp3.internal.cache.DiskLruCache getCache$okhttp()
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl: com.polidea.rxandroidble2.RxBleConnection$LongWriteOperationBuilder setMaxBatchSize(int)
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: void close()
okhttp3.internal.ws.RealWebSocket: boolean pong(okio.ByteString)
okhttp3.internal.http.CallServerInterceptor: CallServerInterceptor(boolean)
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate)
io.reactivex.Single: io.reactivex.Single unsafeCreate(io.reactivex.SingleSource)
okhttp3.OkHttpClient: boolean -deprecated_retryOnConnectionFailure()
okhttp3.Call: okhttp3.Call clone()
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1$1: java.lang.Object apply(java.lang.Object)
okhttp3.internal.http2.Hpack: java.util.Map nameToFirstIndex()
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: long runOnce()
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importArray()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addMenuItem(java.lang.String)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale addLikelySubtags(java.lang.Object)
okhttp3.internal.cache.DiskLruCache$Editor: void abort()
io.reactivex.Flowable: io.reactivex.Flowable concatMapSingleDelayError(io.reactivex.functions.Function)
com.facebook.react.uimanager.BaseViewManager: void updateViewContentDescription(android.view.View)
okhttp3.internal.cache2.Relay: void setFile(java.io.RandomAccessFile)
com.facebook.soloader.Api18TraceUtils: void endSection()
com.facebook.fbreact.specs.NativeI18nManagerSpec: void allowRTL(boolean)
com.facebook.react.views.image.ReactImageView: void setShouldNotifyLoadEvents(boolean)
com.facebook.common.util.TriState: com.facebook.common.util.TriState valueOf(java.lang.String)
okhttp3.OkHttpClient: okhttp3.ConnectionPool -deprecated_connectionPool()
com.facebook.react.bridge.JSBundleLoader$3: JSBundleLoader$3(java.lang.String,java.lang.String)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: io.reactivex.Observable getOnCharacteristicWrite()
okhttp3.internal.connection.RealCall: okhttp3.Address createAddress(okhttp3.HttpUrl)
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
kotlin.jvm.internal.PropertyReference: java.lang.String toString()
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(android.view.View,int,int,int,int)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback_Factory: com.polidea.rxandroidble2.internal.connection.RxBleGattCallback_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$1: ConnectionOperationQueueImpl$1(com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl,io.reactivex.Scheduler,java.lang.String)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
okhttp3.Handshake: int hashCode()
com.facebook.react.bridge.ReadableArray: java.lang.String getString(int)
com.polidea.rxandroidble2.internal.scan.EmulatedScanFilterMatcher: EmulatedScanFilterMatcher(com.polidea.rxandroidble2.internal.scan.ScanFilterInterface[])
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.RequestBody)
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi18: LocationServicesStatusApi18()
okhttp3.internal.connection.RealCall: void acquireConnectionNoEvents(okhttp3.internal.connection.RealConnection)
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: void invokeDefaultBackPressHandler()
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: long runOnce()
io.reactivex.Observable: void blockingSubscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
com.polidea.rxandroidble2.RxBleAdapterStateObservable_Factory: java.lang.Object get()
okhttp3.CipherSuite: java.util.Comparator access$getORDER_BY_NAME$cp()
com.facebook.react.animated.NativeAnimatedModule: void finishOperationBatch()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(android.view.View,boolean)
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostStarted(android.app.Activity)
com.polidea.rxandroidble2.internal.connection.ConnectionSubscriptionWatcher: void onConnectionSubscribed()
okhttp3.internal.http1.Http1ExchangeCodec: void writeRequest(okhttp3.Headers,java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothInteractionExecutorServiceFactory: java.util.concurrent.ExecutorService provideBluetoothInteractionExecutorService()
io.reactivex.Flowable: java.lang.Object blockingFirst(java.lang.Object)
io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.Observable: io.reactivex.Observable retryUntil(io.reactivex.functions.BooleanSupplier)
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi18_Factory: com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi18 newInstance()
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Observable setupNotification(java.util.UUID)
androidx.appcompat.resources.Compatibility$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
androidx.appcompat.widget.SwitchCompat: boolean getShowText()
com.polidea.rxandroidble2.internal.util.CharacteristicPropertiesParser: java.lang.String propertiesIntToString(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,float)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl get(java.net.URL)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateSetUpEnd(java.lang.String,int)
okhttp3.ConnectionSpec: int hashCode()
io.reactivex.Flowable: io.reactivex.Flowable scan(java.lang.Object,io.reactivex.functions.BiFunction)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactHorizontalScrollView)
androidx.appcompat.widget.DropDownListView$Api21Impl: void drawableHotspotChanged(android.view.View,float,float)
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectionColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
okhttp3.internal.cache2.Relay: void writeHeader(okio.ByteString,long,long)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
com.facebook.react.bridge.ReactContext: void initializeInteropModules()
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableArray fromJSONArrayString(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: CatalystInstanceImpl$JSProfilerTraceListener(com.facebook.react.bridge.CatalystInstanceImpl)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: Http2Connection$ReaderRunnable(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Http2Reader)
okhttp3.RequestBody$Companion$toRequestBody$1: void writeTo(okio.BufferedSink)
com.facebook.react.bridge.JavaMethodWrapper$9: com.facebook.react.bridge.Callback extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.fbreact.specs.NativeSoundManagerSpec: NativeSoundManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.soloader.NativeDepsUnpacker: byte readState(java.io.File)
com.facebook.react.runtime.BindingsInstaller: BindingsInstaller(com.facebook.jni.HybridData)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDisableNotificationValueFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDisableNotificationValueFactory create()
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,int,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
com.polidea.rxandroidble2.internal.connection.MtuWatcher_Factory: java.lang.Object get()
okhttp3.internal.http2.Hpack$Reader: int readInt(int,int)
io.reactivex.Observable: io.reactivex.Single elementAt(long,java.lang.Object)
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator_Factory: com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator get()
com.facebook.react.bridge.Dynamic: boolean isNull()
com.facebook.react.bridge.JSBundleLoader$5: JSBundleLoader$5(java.lang.String,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setContextMenuHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
okhttp3.Response$Builder: okhttp3.ResponseBody getBody$okhttp()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
com.polidea.rxandroidble2.scan.ScanResult: com.polidea.rxandroidble2.scan.ScanRecord getScanRecord()
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,okio.ByteString)
okhttp3.Challenge: okhttp3.Challenge withCharset(java.nio.charset.Charset)
io.reactivex.Flowable: io.reactivex.Flowable skip(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.internal.connection.RealConnectionPool$Companion: okhttp3.internal.connection.RealConnectionPool get(okhttp3.ConnectionPool)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
com.facebook.soloader.SoLoader: void init(android.content.Context,boolean)
okhttp3.Response$Builder: void setHeaders$okhttp(okhttp3.Headers$Builder)
com.facebook.fbreact.specs.NativeDevMenuSpec: void setHotLoadingEnabled(boolean)
okhttp3.internal.http2.Http2Connection: java.lang.String getConnectionName$okhttp()
okhttp3.CacheControl: int maxStaleSeconds()
okhttp3.Cache$Companion: Cache$Companion()
okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext newSSLContext()
okhttp3.internal.platform.android.SocketAdapter$DefaultImpls: boolean matchesSocketFactory(okhttp3.internal.platform.android.SocketAdapter,javax.net.ssl.SSLSocketFactory)
okhttp3.internal.http2.Http2Connection: void setNextStreamId$okhttp(int)
io.reactivex.Observable: io.reactivex.Observable scan(io.reactivex.functions.BiFunction)
io.reactivex.Observable: io.reactivex.Observable retry(io.reactivex.functions.BiPredicate)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableIndicationValueFactory: ClientComponent_ClientModule_ProvideEnableIndicationValueFactory()
com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry$1$1: void onComplete()
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl_Factory: com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
com.polidea.rxandroidble2.RxBleClientImpl: io.reactivex.Observable scanBleDevices(java.util.UUID[])
com.bleplx.BlePlxModule: void state(com.facebook.react.bridge.Promise)
com.facebook.react.defaults.DefaultComponentsRegistry: com.facebook.react.defaults.DefaultComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
io.reactivex.Observable: io.reactivex.Observable concat(java.lang.Iterable)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowRadius(float)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner$okhttp(okhttp3.internal.tls.CertificateChainCleaner)
okhttp3.internal.Internal: void applyConnectionSpec(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)
okhttp3.EventListener: void requestBodyEnd(okhttp3.Call,long)
com.facebook.react.views.text.ReactTextViewManager: java.lang.String getName()
okhttp3.HttpUrl: java.util.List -deprecated_pathSegments()
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(int)
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(com.facebook.react.views.view.ReactViewGroup,int)
okhttp3.internal.http2.Http2Writer$Companion: Http2Writer$Companion()
com.polidea.rxandroidble2.internal.util.BluetoothManagerWrapper_Factory: BluetoothManagerWrapper_Factory(bleshadow.javax.inject.Provider)
io.reactivex.Observable: io.reactivex.Observable flatMapMaybe(io.reactivex.functions.Function)
com.facebook.react.bridge.JSIModule: void initialize()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.polidea.rxandroidble2.internal.operations.ScanOperation: boolean startScan(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,java.lang.Object)
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$1: DisconnectionRouter$1(com.polidea.rxandroidble2.internal.connection.DisconnectionRouter)
com.facebook.react.modules.appstate.AppStateModule: void invalidate()
okhttp3.MultipartBody$Part: okhttp3.Headers -deprecated_headers()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String getName()
io.reactivex.Observable: io.reactivex.Flowable toFlowable(io.reactivex.BackpressureStrategy)
com.facebook.jni.CppSystemErrorException: CppSystemErrorException(java.lang.String,int)
io.reactivex.Flowable: io.reactivex.Flowable mergeArray(int,int,org.reactivestreams.Publisher[])
io.reactivex.Observable: io.reactivex.Observable timeInterval()
com.polidea.rxandroidble2.internal.scan.InternalToExternalScanResultConverter_Factory: java.lang.Object get()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: long runOnce()
okhttp3.Cookie: java.util.regex.Pattern access$getYEAR_PATTERN$cp()
io.reactivex.Single: io.reactivex.Single fromCallable(java.util.concurrent.Callable)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle[] values()
okhttp3.Response: okhttp3.ResponseBody -deprecated_body()
com.polidea.rxandroidble2.exceptions.BleConflictingNotificationAlreadySetException: boolean indicationAlreadySet()
okhttp3.internal.connection.RealConnection: java.lang.String toString()
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider getProvider()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
com.facebook.soloader.nativeloader.NativeLoader: boolean isInitialized()
com.facebook.react.fabric.BindingImpl: void startSurface(int,java.lang.String,com.facebook.react.bridge.NativeMap)
okhttp3.internal.concurrent.Task: long getNextExecuteNanoTime$okhttp()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] $values()
okhttp3.internal.cache2.Relay$RelaySource: long read(okio.Buffer,long)
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.polidea.rxandroidble2.utils.ConnectionSharingAdapter: io.reactivex.ObservableSource apply(io.reactivex.Observable)
io.reactivex.Observable: io.reactivex.Observable doOnEach(io.reactivex.functions.Consumer)
okhttp3.OkHttpClient$Builder: void setSocketFactory$okhttp(javax.net.SocketFactory)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Single discoverServices(long,java.util.concurrent.TimeUnit)
io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: void deleteInstance()
okhttp3.internal.http2.Http2Writer: void dataFrame(int,int,okio.Buffer,int)
okhttp3.MultipartBody: okhttp3.MediaType -deprecated_type()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker: io.reactivex.Completable checkAnyPropertyMatches(android.bluetooth.BluetoothGattCharacteristic,int)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.facebook.hermes.intl.NumberFormat: java.lang.String format(double)
okhttp3.internal.Util: int delimiterOffset(java.lang.String,java.lang.String,int,int)
com.reactnativecommunity.asyncstorage.SerialExecutor: SerialExecutor(java.util.concurrent.Executor)
com.facebook.react.modules.core.ExceptionsManagerModule: void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.views.drawer.ReactDrawerLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.fragment.app.FragmentActivity: void onLowMemory()
okhttp3.internal.platform.android.CloseGuard: java.lang.Object createAndOpen(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable doOnTerminate(io.reactivex.functions.Action)
okhttp3.internal.Util: void closeQuietly(java.net.ServerSocket)
okhttp3.OkHttpClient: okhttp3.Cache cache()
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectTextOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setExitTransition(android.widget.PopupWindow,android.transition.Transition)
okhttp3.internal.ws.WebSocketReader: void close()
io.reactivex.Single: io.reactivex.Maybe filter(io.reactivex.functions.Predicate)
okhttp3.internal.ws.WebSocketProtocol: void toggleMask(okio.Buffer$UnsafeCursor,byte[])
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.text.ReactTextViewManager: void setPadding(android.view.View,int,int,int,int)
com.facebook.react.modules.debug.DevSettingsModule: void addListener(java.lang.String)
com.facebook.fbreact.specs.NativeSoundManagerSpec: java.lang.String getName()
okhttp3.internal.cache.CacheStrategy$Companion: CacheStrategy$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentBuilder: com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentBuilder macAddress(java.lang.String)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.concurrent.TaskQueue: void setShutdown$okhttp(boolean)
okhttp3.Response: okhttp3.Response -deprecated_networkResponse()
okhttp3.internal.platform.android.ConscryptSocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startListeningToAnimatedNodeValue(double)
androidx.appcompat.app.AppCompatActivity: void openOptionsMenu()
com.polidea.rxandroidble2.RxBleDevice: java.lang.String getName()
okhttp3.Request$Builder: void setTags$okhttp(java.util.Map)
com.facebook.soloader.ElfFileChannel: long size()
okhttp3.internal.http.RealInterceptorChain: int readTimeoutMillis()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean getIsReduceMotionEnabledValue()
com.polidea.rxandroidble2.LogOptions: java.lang.Boolean getShouldLogScannedPeripherals()
okhttp3.internal.http2.Http2Connection: void setSettings(okhttp3.internal.http2.Settings)
com.bleplx.adapter.BleModule: java.util.List getCharacteristicsForService(int)
com.polidea.rxandroidble2.internal.connection.ImmediateSerializedBatchAckStrategy: io.reactivex.ObservableSource apply(io.reactivex.Observable)
okhttp3.internal.platform.OpenJSSEPlatform$Companion: OpenJSSEPlatform$Companion()
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: boolean unstable_isLegacyModuleRegistered(java.lang.String)
com.facebook.react.uimanager.UIConstantsProviderManager: UIConstantsProviderManager(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
com.facebook.react.bridge.DimensionPropConverter: com.facebook.yoga.YogaValue getDimension(java.lang.Object)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(java.io.File,okhttp3.MediaType)
io.reactivex.Flowable: io.reactivex.Single count()
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi18_Factory: com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi18 get()
com.facebook.react.animated.NativeAnimatedModule: void clearFrameCallback()
com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry$1: void run()
okhttp3.internal.platform.BouncyCastlePlatform$Companion: boolean isSupported()
okhttp3.Request: java.lang.String toString()
okhttp3.HttpUrl: int defaultPort(java.lang.String)
io.reactivex.Observable: io.reactivex.Observable timeInterval(java.util.concurrent.TimeUnit)
com.facebook.react.common.mapbuffer.WritableMapBuffer: java.lang.Object[] getValues()
com.polidea.rxandroidble2.internal.util.ClientStateObservable$2: boolean test(java.lang.Long)
okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
okhttp3.internal.http.RealInterceptorChain: int getWriteTimeoutMillis$okhttp()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableIndicationValueFactory: byte[] provideEnableIndicationValue()
okhttp3.internal.authenticator.JavaNetAuthenticator: JavaNetAuthenticator(okhttp3.Dns)
okhttp3.internal.Util: java.lang.String toHexString(long)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
io.reactivex.Observable: io.reactivex.Observable error(java.util.concurrent.Callable)
okhttp3.internal.http2.Http2Connection$Listener: void onSettings(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Settings)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$600(com.facebook.jni.DestructorThread$Destructor)
com.polidea.rxandroidble2.internal.scan.ScanRecordImplNativeWrapper: java.lang.String getDeviceName()
com.facebook.react.bridge.ReadableNativeArray: int size()
com.bleplx.BlePlxModule: void cancelTransaction(java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothManagerFactory: android.bluetooth.BluetoothManager get()
io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)
io.reactivex.Observable: io.reactivex.Completable concatMapCompletable(io.reactivex.functions.Function,int)
com.bleplx.adapter.BleModule: io.reactivex.ObservableSource lambda$safeConnectToDevice$24(com.polidea.rxandroidble2.RxBleConnection)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
okhttp3.Cookie: java.lang.String toString$okhttp(boolean)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeIdle()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void access$setPublicSuffixListBytes$p(okhttp3.internal.publicsuffix.PublicSuffixDatabase,byte[])
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResultLegacy: RxBleInternalScanResultLegacy(android.bluetooth.BluetoothDevice,int,byte[])
com.facebook.react.modules.i18nmanager.I18nManagerModule: I18nManagerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.view.ReactViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.Cookie$Companion: okhttp3.Cookie parse$okhttp(long,okhttp3.HttpUrl,java.lang.String)
com.facebook.fbreact.specs.NativeSourceCodeSpec: NativeSourceCodeSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.ReactNativeHost: com.facebook.react.common.SurfaceDelegateFactory getSurfaceDelegateFactory()
com.facebook.react.views.textinput.ReactTextInputManager: void setTextDecorationLine(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher: void notifyNativeReliableWriteCallback(android.bluetooth.BluetoothGatt,int)
com.facebook.react.fabric.FabricUIManager: int getColor(int,java.lang.String[])
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType valueOf(java.lang.String)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothManagerFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothManagerFactory create(bleshadow.javax.inject.Provider)
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getOverflowInset()
com.facebook.react.views.image.ReactImageManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.Cache: java.io.File directory()
io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.facebook.react.bridge.ReactMarker: void addListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
com.reactnativecommunity.asyncstorage.AsyncLocalStorageUtil: java.lang.String[] buildKeySelectionArgs(com.facebook.react.bridge.ReadableArray,int,int)
com.facebook.react.runtime.ReactInstance: void installGlobals(boolean)
okhttp3.Route: Route(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setHidden(boolean)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDisableNotificationValueFactory: byte[] provideDisableNotificationValue()
io.reactivex.Observable: io.reactivex.Observable groupBy(io.reactivex.functions.Function)
io.reactivex.Flowable: io.reactivex.Flowable retry(long)
io.reactivex.Flowable: io.reactivex.Single first(java.lang.Object)
com.facebook.soloader.ApplicationSoSource: java.lang.String[] getLibraryDependencies(java.lang.String)
com.facebook.react.fabric.BindingImpl: BindingImpl()
com.facebook.react.bridge.DynamicFromArray: int asInt()
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
io.reactivex.observers.DisposableSingleObserver: boolean isDisposed()
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
com.facebook.react.bridge.Inspector$Page: Inspector$Page(int,java.lang.String,java.lang.String)
io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function8)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.ViewGroupDrawingOrderHelper getDrawingOrderHelper()
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: NativeDevLoadingViewSpec(com.facebook.react.bridge.ReactApplicationContext)
com.reactnativecommunity.asyncstorage.AsyncLocalStorageUtil: boolean mergeImpl(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void windowUpdate(int,long)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideRecommendedScanRuntimePermissionNamesFactory: java.lang.Object get()
okhttp3.CookieJar$Companion$NoCookies: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.Headers trailers()
com.polidea.rxandroidble2.RxBleConnection$LongWriteOperationBuilder: io.reactivex.Observable build()
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl: ClientOperationQueueImpl(io.reactivex.Scheduler)
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState valueOf(java.lang.String)
okhttp3.Response$Builder: okhttp3.Response$Builder code(int)
com.oblador.vectoricons.VectorIconsModule: java.lang.String getName()
okhttp3.Cache$urls$1: java.lang.Object next()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.blob.BlobModule: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
com.polidea.rxandroidble2.internal.util.ClientStateObservable$4: io.reactivex.Observable apply(java.lang.Boolean)
okhttp3.internal.platform.android.Android10SocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void invalidate()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesMessageQueueThread()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: void handleException(java.lang.Exception)
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi23: com.polidea.rxandroidble2.internal.scan.ScanSetup build(com.polidea.rxandroidble2.scan.ScanSettings,com.polidea.rxandroidble2.scan.ScanFilter[])
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.UIManager: void sendAccessibilityEvent(int,int)
okhttp3.internal.http1.Http1ExchangeCodec: void access$detachTimeout(okhttp3.internal.http1.Http1ExchangeCodec,okio.ForwardingTimeout)
kotlin.coroutines.EmptyCoroutineContext: java.lang.Object readResolve()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: int getTextAlignment(android.view.View)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.Headers,okhttp3.RequestBody)
io.reactivex.Flowable: io.reactivex.Flowable scan(io.reactivex.functions.BiFunction)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityContentSizeMultipliers(com.facebook.react.bridge.ReadableMap)
okhttp3.OkHttpClient: java.util.List -deprecated_connectionSpecs()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
io.reactivex.Single: io.reactivex.Single timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,io.reactivex.SingleSource)
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
com.facebook.soloader.NativeDepsUnpacker: void writeState(java.io.File,byte)
com.facebook.react.uimanager.events.ReactEventEmitter: void unregister(int)
io.reactivex.Observable: io.reactivex.Observable concatDelayError(java.lang.Iterable)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.polidea.rxandroidble2.NotificationSetupMode: NotificationSetupMode(java.lang.String,int)
okhttp3.Dispatcher: int getMaxRequestsPerHost()
okhttp3.Headers: Headers(java.lang.String[],kotlin.jvm.internal.DefaultConstructorMarker)
com.polidea.rxandroidble2.internal.connection.MtuWatcher_Factory: com.polidea.rxandroidble2.internal.connection.MtuWatcher get()
okhttp3.Cache$RealCacheRequest$1: void close()
com.polidea.rxandroidble2.internal.connection.ConnectionComponent: com.polidea.rxandroidble2.RxBleConnection rxBleConnection()
com.facebook.soloader.SysUtil: java.lang.String[] getSupportedAbis()
com.polidea.rxandroidble2.internal.operations.CharacteristicReadOperation: java.lang.String toString()
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
okhttp3.internal.cache2.Relay$Companion: Relay$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.soloader.NoopSoSource: java.io.File unpackLibrary(java.lang.String)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem createIntBufferBatchMountItem(int,int[],java.lang.Object[],int)
com.facebook.react.bridge.JSBundleLoader$4: JSBundleLoader$4(java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.lang.String getName()
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
com.facebook.soloader.ElfFileChannel: com.facebook.soloader.ElfByteChannel position(long)
com.bleplx.adapter.BleModule: void lambda$safeReadCharacteristicForDevice$35(com.bleplx.adapter.Characteristic,com.bleplx.adapter.utils.SafeExecutor,java.lang.String,byte[])
com.facebook.react.views.view.ReactViewManager: ReactViewManager()
io.reactivex.Observable: java.lang.Object to(io.reactivex.functions.Function)
com.polidea.rxandroidble2.internal.connection.ConnectionModule_GattWriteMtuOverheadFactory: ConnectionModule_GattWriteMtuOverheadFactory()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxWidthJNI(long)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year valueOf(java.lang.String)
okhttp3.MediaType: java.nio.charset.Charset charset()
io.reactivex.Observable: java.util.concurrent.Future toFuture()
io.reactivex.Observable: io.reactivex.Single toSortedList(java.util.Comparator,int)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread getUiMessageQueueThread()
okhttp3.internal.connection.RealCall: java.lang.Object clone()
com.facebook.soloader.Elf32_Phdr: Elf32_Phdr()
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Single requestMtu(int)
okhttp3.internal.cache2.Relay: void setSourceCount(int)
io.reactivex.Flowable: io.reactivex.Flowable switchMapDelayError(io.reactivex.functions.Function)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
okhttp3.Response: okhttp3.Response -deprecated_cacheResponse()
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.toast.ToastModule)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule getOrCreateModule(java.lang.String,com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder,boolean)
com.polidea.rxandroidble2.exceptions.BleCannotSetCharacteristicNotificationException: java.lang.String createMessage(android.bluetooth.BluetoothGattCharacteristic,int)
com.facebook.react.views.view.ReactViewManager: void nextFocusDown(com.facebook.react.views.view.ReactViewGroup,int)
com.polidea.rxandroidble2.internal.operations.ScanOperationApi21: ScanOperationApi21(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator,com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter,com.polidea.rxandroidble2.scan.ScanSettings,com.polidea.rxandroidble2.internal.scan.EmulatedScanFilterMatcher,com.polidea.rxandroidble2.scan.ScanFilter[])
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedPathSegment(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(android.view.View,boolean)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideRecommendedConnectRuntimePermissionNamesFactory: java.lang.String[][] get()
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactScrollView,int,java.lang.Integer)
okhttp3.OkHttpClient: java.util.List access$getDEFAULT_PROTOCOLS$cp()
com.facebook.react.views.textinput.ReactTextInputManager: ReactTextInputManager()
com.polidea.rxandroidble2.exceptions.BleGattDescriptorException: BleGattDescriptorException(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int,com.polidea.rxandroidble2.exceptions.BleGattOperationType)
com.polidea.rxandroidble2.internal.operations.ConnectOperation: void protectedRun(io.reactivex.ObservableEmitter,com.polidea.rxandroidble2.internal.serialization.QueueReleaseInterface)
okhttp3.internal.connection.RealCall: okhttp3.OkHttpClient getClient()
okhttp3.internal.cache2.Relay: Relay(java.io.RandomAccessFile,okio.Source,long,okio.ByteString,long)
okhttp3.Response$Builder: void setExchange$okhttp(okhttp3.internal.connection.Exchange)
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
io.reactivex.Observable: io.reactivex.Observable doOnNext(io.reactivex.functions.Consumer)
io.reactivex.Flowable: io.reactivex.Flowable buffer(long,long,java.util.concurrent.TimeUnit)
com.facebook.react.views.textinput.ReactEditText: void setFontStyle(java.lang.String)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$2: void onCharacteristicRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)
com.polidea.rxandroidble2.internal.util.BleConnectionCompat: java.lang.Object getIBluetoothGatt(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
okhttp3.HttpUrl$Companion: HttpUrl$Companion()
com.facebook.react.views.scroll.ReactScrollView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
io.reactivex.Observable: io.reactivex.Observable timeInterval(java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentBuilder: com.polidea.rxandroidble2.internal.connection.ConnectionComponent$Builder operationTimeout(com.polidea.rxandroidble2.Timeout)
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi18: IsConnectableCheckerApi18()
com.facebook.react.bridge.ReadableNativeMap$1: java.util.Map$Entry next()
com.polidea.rxandroidble2.Timeout: Timeout(long,java.util.concurrent.TimeUnit)
com.facebook.soloader.NativeDeps: int findNextLine(byte[],int)
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache: DeviceComponentCache()
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideBluetoothGattFactory: ConnectionModule_ProvideBluetoothGattFactory(bleshadow.javax.inject.Provider)
okhttp3.RequestBody$Companion: RequestBody$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setEpicenterBounds(android.widget.PopupWindow,android.graphics.Rect)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void invoke()
io.reactivex.Observable: io.reactivex.Observable takeLast(long,long,java.util.concurrent.TimeUnit)
com.facebook.react.fabric.ComponentFactory: ComponentFactory()
com.facebook.yoga.YogaNative: void jni_YGConfigSetPrintTreeFlagJNI(long,boolean)
okhttp3.OkHttpClient$Builder: java.util.List networkInterceptors()
io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybe(io.reactivex.functions.Function,int)
com.facebook.react.views.text.ReactTextView: void setTextIsSelectable(boolean)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(android.view.View,java.lang.String)
okhttp3.internal.connection.RealConnectionPool: RealConnectionPool(okhttp3.internal.concurrent.TaskRunner,int,long,java.util.concurrent.TimeUnit)
com.facebook.hermes.intl.Intl: java.lang.String toLocaleUpperCase(java.util.List,java.lang.String)
com.facebook.react.ReactRootView: int getRootViewTag()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexJNI(long,float)
com.facebook.react.uimanager.BaseViewManager: void setZIndex(android.view.View,float)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)
okhttp3.internal.http2.Settings: int getInitialWindowSize()
okhttp3.CipherSuite: java.lang.String -deprecated_javaName()
com.facebook.react.modules.websocket.WebSocketModule: void removeListeners(double)
com.polidea.rxandroidble2.internal.util.ClientStateObservable_Factory: java.lang.Object get()
io.reactivex.Observable: io.reactivex.Observable buffer(java.util.concurrent.Callable,java.util.concurrent.Callable)
com.polidea.rxandroidble2.internal.connection.IllegalOperationHandler: com.polidea.rxandroidble2.internal.BleIllegalOperationException handleMismatchData(android.bluetooth.BluetoothGattCharacteristic,int)
androidx.appcompat.app.AppCompatActivity: void setTheme(int)
okhttp3.internal.http2.Header: okio.ByteString component2()
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation: CharacteristicLongWriteOperation(android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,io.reactivex.Scheduler,com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration,android.bluetooth.BluetoothGattCharacteristic,com.polidea.rxandroidble2.internal.connection.PayloadSizeLimitProvider,com.polidea.rxandroidble2.RxBleConnection$WriteOperationAckStrategy,com.polidea.rxandroidble2.RxBleConnection$WriteOperationRetryStrategy,byte[])
com.facebook.react.views.scroll.ReactScrollView: android.graphics.Rect getOverflowInset()
com.polidea.rxandroidble2.internal.connection.LoggingIllegalOperationHandler_Factory: java.lang.Object get()
io.reactivex.Observable: java.lang.Object blockingLast(java.lang.Object)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String getName()
com.facebook.react.JSEngineResolutionAlgorithm: com.facebook.react.JSEngineResolutionAlgorithm[] values()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String getAndroidID()
com.facebook.react.bridge.JsonWriterHelper: void dynamicValue(android.util.JsonWriter,com.facebook.react.bridge.Dynamic)
okhttp3.Response$Builder: void setMessage$okhttp(java.lang.String)
okhttp3.Response: okhttp3.ResponseBody body()
com.polidea.rxandroidble2.internal.scan.InternalToExternalScanResultConverter_Factory: com.polidea.rxandroidble2.internal.scan.InternalToExternalScanResultConverter newInstance(com.polidea.rxandroidble2.internal.RxBleDeviceProvider)
okhttp3.internal.http2.Http2Reader: void readGoAway(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setTranslucent(boolean)
com.facebook.react.modules.fresco.FrescoModule: void initialize()
com.facebook.react.bridge.UIManagerListener: void willMountItems(com.facebook.react.bridge.UIManager)
okhttp3.Request$Builder: void setUrl$okhttp(okhttp3.HttpUrl)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideComputationSchedulerFactory: ClientComponent_ClientModule_ProvideComputationSchedulerFactory()
com.bleplx.adapter.BleModule: void writeDescriptorForCharacteristic(int,java.lang.String,java.lang.String,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object getKey()
com.polidea.rxandroidble2.internal.operations.ScanOperationApi21$1: void onBatchScanResults(java.util.List)
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
okhttp3.internal.ws.RealWebSocket: okhttp3.WebSocketListener getListener$okhttp()
okhttp3.internal.http2.Http2Reader: void readSettings(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()
com.facebook.react.views.view.ReactViewManager: void setBorderRadius(com.facebook.react.views.view.ReactViewGroup,int,float)
com.facebook.react.modules.permissions.PermissionsModule: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
okhttp3.internal.platform.android.AndroidLogKt: int access$getAndroidLevel$p(java.util.logging.LogRecord)
com.facebook.react.uimanager.UIManagerModule: void updateRootLayoutSpecs(int,int,int,int,int)
okhttp3.internal.http2.Settings: boolean isSet(int)
okhttp3.internal.http2.Http2Reader$ContinuationSource: int getFlags()
com.facebook.react.modules.i18nmanager.I18nManagerModule: void forceRTL(boolean)
io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function)
com.bleplx.adapter.BleModule: void readRSSIForDevice(java.lang.String,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack(com.facebook.jni.DestructorThread$1)
com.facebook.react.views.view.ReactViewGroup: void setOverflow(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setText(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.bridge.WritableMap translateHeaders(okhttp3.Headers)
io.reactivex.Observable: io.reactivex.Observable groupBy(io.reactivex.functions.Function,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeRemoveChildJNI(long,long)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource removeRequest(int)
com.facebook.soloader.SoLoader: void loadLibraryBySoName(java.lang.String,int,android.os.StrictMode$ThreadPolicy)
com.polidea.rxandroidble2.internal.util.BleConnectionCompat_Factory: com.polidea.rxandroidble2.internal.util.BleConnectionCompat newInstance(android.content.Context)
com.facebook.react.bridge.PerformanceCounter: java.util.Map getPerformanceCounters()
com.facebook.react.bridge.DynamicFromMap$1: java.lang.Object initialValue()
com.facebook.react.views.scroll.ReactScrollView: int getSnapInterval()
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
com.polidea.rxandroidble2.internal.util.BleConnectionCompat: java.lang.reflect.Method getMethodFromClass(java.lang.Class,java.lang.String)
com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry$1$1: void onError(java.lang.Throwable)
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: void responseBodyComplete()
okhttp3.Cookie: int hashCode()
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache_Factory: com.polidea.rxandroidble2.internal.cache.DeviceComponentCache newInstance()
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator: io.reactivex.ObservableTransformer scanModeLowPowerTransformer()
com.facebook.react.modules.blob.BlobModule: byte[] resolve(com.facebook.react.bridge.ReadableMap)
io.reactivex.Observable: io.reactivex.Observable window(long,long,java.util.concurrent.TimeUnit)
com.facebook.react.bridge.WritableNativeMap: void mergeNativeMap(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.fbreact.specs.NativeDevMenuSpec: NativeDevMenuSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void toggleElementInspector()
okhttp3.internal.Internal: okhttp3.Cookie parseCookie(long,okhttp3.HttpUrl,java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.fbreact.specs.NativeShareModuleSpec: NativeShareModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute[] values()
io.reactivex.Flowable: io.reactivex.Flowable concatEager(java.lang.Iterable)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: ReactProgressBarViewManager()
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
okhttp3.internal.cache.CacheStrategy$Factory: long computeFreshnessLifetime()
okhttp3.Cache: int requestCount()
com.polidea.rxandroidble2.internal.connection.ConnectionModule: ConnectionModule()
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String getName()
com.facebook.react.modules.sound.SoundManagerModule: SoundManagerModule(com.facebook.react.bridge.ReactApplicationContext)
com.bleplx.adapter.BleModule: io.reactivex.ObservableSource lambda$safeMonitorCharacteristicForDevice$40(com.bleplx.adapter.Characteristic,java.lang.String,com.polidea.rxandroidble2.RxBleConnection)
okhttp3.internal.http1.Http1ExchangeCodec: void detachTimeout(okio.ForwardingTimeout)
io.reactivex.Flowable: io.reactivex.Flowable interval(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEnabled(boolean)
io.reactivex.observers.DisposableObserver: boolean isDisposed()
com.facebook.soloader.SysUtil$MarshmallowSysdeps: SysUtil$MarshmallowSysdeps()
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6$2: CharacteristicLongWriteOperation$6$2(com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6)
com.facebook.react.modules.websocket.WebSocketModule: void send(java.lang.String,double)
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform[] values()
io.reactivex.Flowable: io.reactivex.Flowable switchMapMaybeDelayError(io.reactivex.functions.Function)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void restoreDefaultValues(double)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void abortRequest(double)
okhttp3.MediaType: java.lang.String toString()
okhttp3.internal.cache2.FileOperator: FileOperator(java.nio.channels.FileChannel)
io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable: io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable[] values()
com.facebook.react.uimanager.UIManagerModule: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactScrollView: void setRemoveClippedSubviews(boolean)
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: ReactMarker$ReactMarkerRecord(java.lang.String,long)
okhttp3.internal.platform.OpenJSSEPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: boolean isApkUncompressedDso(android.content.Context)
com.polidea.rxandroidble2.internal.operations.ConnectOperation$4$1: boolean test(java.lang.Object)
com.facebook.soloader.NativeDeps: java.lang.String[] getDepsForLibAtOffset(int,int)
com.facebook.soloader.UnpackingSoSource$InputDsoIterator: com.facebook.soloader.UnpackingSoSource$InputDso next()
com.facebook.react.uimanager.ViewManager: void updateProperties(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.bridge.ReadableNativeMap getStateDataImpl()
okhttp3.internal.connection.ConnectInterceptor: ConnectInterceptor()
com.facebook.fbreact.specs.NativeSoundManagerSpec: void playTouchSound()
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.fbreact.specs.NativeAppearanceSpec: void removeListeners(double)
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform get()
io.reactivex.Flowable: void blockingSubscribe()
okhttp3.internal.http2.Http2Connection: void start$default(okhttp3.internal.http2.Http2Connection,boolean,okhttp3.internal.concurrent.TaskRunner,int,java.lang.Object)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportException(com.facebook.react.bridge.ReadableMap)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder pingInterval(java.time.Duration)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectionPool(okhttp3.ConnectionPool)
okhttp3.internal.http2.Hpack: okhttp3.internal.http2.Header[] getSTATIC_HEADER_TABLE()
okhttp3.CacheControl: boolean isPrivate()
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int,boolean)
com.facebook.react.bridge.ReactSoftExceptionLogger: void logSoftExceptionVerbose(java.lang.String,java.lang.Throwable)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinWidthJNI(long)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.polidea.rxandroidble2.internal.scan.ScanRecordImplNativeWrapper: java.util.Map getServiceData()
com.facebook.drawee.view.DraweeView: android.graphics.drawable.Drawable getTopLevelDrawable()
com.facebook.react.ReactActivity: void invokeDefaultOnBackPressed()
com.facebook.soloader.SoLoader: void addApplicationSoSource(android.content.Context,java.util.ArrayList,int)
com.facebook.react.turbomodule.core.NativeModuleSoLoader$Companion: NativeModuleSoLoader$Companion()
okhttp3.internal.platform.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$1: void run()
okhttp3.internal.ws.WebSocketWriter: void close()
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.facebook.react.bridge.UIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1: CipherSuite$Companion$ORDER_BY_NAME$1()
okhttp3.internal.http2.Hpack$Writer: void clearDynamicTable()
com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState: com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextView$SuperCaller getSuperCaller()
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
com.polidea.rxandroidble2.RxBleAdapterStateObservable: com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState mapToBleAdapterState(int)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getTypedExportedConstants()
io.reactivex.Flowable: io.reactivex.Single sequenceEqual(org.reactivestreams.Publisher,org.reactivestreams.Publisher,int)
androidx.core.app.ComponentActivity: androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class)
io.reactivex.Observable: io.reactivex.Observable concatWith(io.reactivex.MaybeSource)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexGrow(float)
io.reactivex.Single: io.reactivex.Single delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.polidea.rxandroidble2.internal.scan.ScanRecordImplCompat: byte[] getServiceData(android.os.ParcelUuid)
androidx.core.os.LocaleListCompat$Api21Impl: boolean matchesLanguageAndScript(java.util.Locale,java.util.Locale)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void decrementPendingJSCalls()
com.polidea.rxandroidble2.scan.ScanFilter: byte[] getManufacturerDataMask()
androidx.core.app.ActivityCompat$Api21Impl: void finishAfterTransition(android.app.Activity)
com.facebook.react.uimanager.ViewGroupManager: ViewGroupManager()
com.facebook.react.modules.appstate.AppStateModule: void onHostPause()
okhttp3.MultipartReader$Companion: MultipartReader$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.imagepipeline.nativecode.NativeCodeInitializer: NativeCodeInitializer()
com.facebook.react.modules.websocket.WebSocketModule: WebSocketModule(com.facebook.react.bridge.ReactApplicationContext)
io.reactivex.Flowable: org.reactivestreams.Subscriber subscribeWith(org.reactivestreams.Subscriber)
com.facebook.react.animated.NativeAnimatedModule: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
io.reactivex.Flowable: io.reactivex.Flowable zipWith(org.reactivestreams.Publisher,io.reactivex.functions.BiFunction,boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollEventThrottle(com.facebook.react.views.scroll.ReactScrollView,int)
androidx.core.view.ViewCompat$Api17Impl: void setPaddingRelative(android.view.View,int,int,int,int)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] $values()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createAssetLoader(android.content.Context,java.lang.String,boolean)
io.reactivex.Observable: io.reactivex.Single toSortedList()
io.reactivex.Flowable: io.reactivex.Flowable cast(java.lang.Class)
com.polidea.rxandroidble2.internal.scan.ScanRecordImplNativeWrapper: byte[] getManufacturerSpecificData(int)
com.facebook.soloader.SoLoader: void initSoSources(android.content.Context,int,java.lang.String[])
com.facebook.yoga.YogaNative: void jni_YGNodeCalculateLayoutJNI(long,float,float,long[],com.facebook.yoga.YogaNodeJNIBase[])
com.polidea.rxandroidble2.internal.connection.DisconnectAction_Factory: com.polidea.rxandroidble2.internal.connection.DisconnectAction get()
com.facebook.react.fabric.FabricUIManager: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.facebook.soloader.NativeDeps: boolean access$200(android.content.Context,boolean)
com.facebook.hermes.intl.Collator: double compare(java.lang.String,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: CatalystInstanceImpl(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.JSExceptionHandler)
com.polidea.rxandroidble2.scan.IsConnectable: IsConnectable(java.lang.String,int)
okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.lang.Object[])
io.reactivex.Observable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.bridge.ReadableNativeMap$1$1: ReadableNativeMap$1$1(com.facebook.react.bridge.ReadableNativeMap$1,int)
com.polidea.rxandroidble2.internal.connection.ConnectionModule: com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueue bindConnectionOperationQueue(com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl)
okhttp3.internal.io.FileSystem: okio.Source source(java.io.File)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideConnectionQueueExecutorServiceFactory: java.util.concurrent.ExecutorService get()
io.reactivex.Observable: io.reactivex.Observable zipWith(io.reactivex.ObservableSource,io.reactivex.functions.BiFunction,boolean)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
io.reactivex.Observable: io.reactivex.Observable concatWith(io.reactivex.CompletableSource)
okhttp3.internal.http2.Http2Connection: void setPeerSettings(okhttp3.internal.http2.Settings)
com.facebook.react.bridge.NativeArrayInterface: java.lang.String toString()
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.jni.DestructorThread$DestructorStack: void transferAllToList()
androidx.core.text.TextUtilsCompat$Api17Impl: int getLayoutDirectionFromLocale(java.util.Locale)
com.reactnativecommunity.asyncstorage.AsyncLocalStorageUtil: boolean setItemImpl(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)
okhttp3.Cookie: java.lang.String -deprecated_name()
com.facebook.soloader.UnpackingSoSource: void setSoSourceAbis(java.lang.String[])
com.facebook.react.views.text.ReactTextView: com.facebook.react.bridge.ReactContext getReactContext()
com.polidea.rxandroidble2.internal.RxBleDeviceImpl: java.lang.String getName()
com.facebook.soloader.MergedSoMapping: MergedSoMapping()
com.facebook.react.views.view.ReactClippingViewManager: void setRemoveClippedSubviews(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.common.mapbuffer.WritableMapBuffer: int[] getKeys()
com.facebook.react.bridge.ReactMarker: void notifyNativeMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.Long)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setSource(com.facebook.react.bridge.ReadableArray)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
io.reactivex.Observable: io.reactivex.Observable delaySubscription(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.internal.http2.Http2Connection$Builder: void setListener$okhttp(okhttp3.internal.http2.Http2Connection$Listener)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: okio.Sink appendingSink(java.io.File)
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: io.reactivex.ObservableSource lambda$setupModeTransformer$5(com.polidea.rxandroidble2.NotificationSetupMode,android.bluetooth.BluetoothGattCharacteristic,com.polidea.rxandroidble2.internal.connection.DescriptorWriter,byte[],io.reactivex.Observable)
com.facebook.react.views.view.ReactViewManager: void setFocusable(com.facebook.react.views.view.ReactViewGroup,boolean)
okhttp3.internal.ws.RealWebSocket: void onReadPong(okio.ByteString)
com.polidea.rxandroidble2.internal.SingleResponseOperation: io.reactivex.Single getCallback(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback)
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
io.reactivex.Observable: io.reactivex.Observable mergeDelayError(java.lang.Iterable,int,int)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
io.reactivex.Single: io.reactivex.Single takeUntil(io.reactivex.CompletableSource)
com.polidea.rxandroidble2.exceptions.BleException: BleException(java.lang.String)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
okhttp3.RequestBody$Companion$asRequestBody$1: RequestBody$Companion$asRequestBody$1(java.io.File,okhttp3.MediaType)
com.facebook.react.bridge.ReadableNativeArray: boolean getBoolean(int)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode createShadowNodeInstance()
com.facebook.react.views.view.ReactViewManager: void setCollapsable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.uimanager.BaseViewManager: void setViewState(android.view.View,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http2.ErrorCode: ErrorCode(java.lang.String,int,int)
io.reactivex.internal.functions.Functions$NaturalComparator: io.reactivex.internal.functions.Functions$NaturalComparator valueOf(java.lang.String)
io.reactivex.Single: io.reactivex.observers.TestObserver test()
io.reactivex.Single: java.lang.Object blockingGet()
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi18_Factory: LocationServicesStatusApi18_Factory()
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.Response$Builder readResponseHeaders(boolean)
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable,int)
io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.ConnectionPool: int connectionCount()
com.facebook.react.modules.vibration.VibrationModule: VibrationModule(com.facebook.react.bridge.ReactApplicationContext)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6: java.lang.Object apply(java.lang.Object)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
okhttp3.internal.http2.Http2Reader: void readRstStream(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.polidea.rxandroidble2.internal.cache.CacheEntry: com.polidea.rxandroidble2.internal.DeviceComponent setValue(com.polidea.rxandroidble2.internal.DeviceComponent)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: Http1ExchangeCodec$ChunkedSink(okhttp3.internal.http1.Http1ExchangeCodec)
com.polidea.rxandroidble2.DaggerClientComponent$Builder: com.polidea.rxandroidble2.ClientComponent$Builder applicationContext(android.content.Context)
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KProperty$Getter getGetter()
io.reactivex.Single: io.reactivex.Single onErrorResumeNext(io.reactivex.functions.Function)
com.facebook.react.runtime.hermes.HermesInstance: com.facebook.jni.HybridData initHybrid()
com.facebook.react.ReactActivity: void onConfigurationChanged(android.content.res.Configuration)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder pingIntervalMillis(int)
okhttp3.Dns$Companion$DnsSystem: java.util.List lookup(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.polidea.rxandroidble2.internal.operations.LegacyScanOperation: android.bluetooth.BluetoothAdapter$LeScanCallback createScanCallback(io.reactivex.ObservableEmitter)
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role[] values()
okhttp3.internal.connection.RouteSelector: boolean hasNext()
io.reactivex.Flowable: io.reactivex.Flowable concatArrayEager(int,int,org.reactivestreams.Publisher[])
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
kotlin.collections.EmptySet: java.lang.Object readResolve()
com.polidea.rxandroidble2.internal.connection.ConstantPayloadSizeLimit: ConstantPayloadSizeLimit(int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectionSpecs(java.util.List)
com.polidea.rxandroidble2.exceptions.BleGattException: java.lang.String getMacAddress(android.bluetooth.BluetoothGatt)
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection[] values()
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation: void writeData(byte[],com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$IntSupplier)
com.facebook.fbreact.specs.NativeAppearanceSpec: void setColorScheme(java.lang.String)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.facebook.react.views.image.ReactImageManager: void setDefaultSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
okio.ForwardingSource: java.lang.String toString()
okhttp3.internal.authenticator.JavaNetAuthenticator: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.http2.Http2Stream: void addBytesToWriteWindow(long)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: void setNativeCallback(android.bluetooth.BluetoothGattCallback)
com.facebook.yoga.YogaNative: void jni_YGConfigSetExperimentalFeatureEnabledJNI(long,int,boolean)
io.reactivex.Observable: io.reactivex.Observable onExceptionResumeNext(io.reactivex.ObservableSource)
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl$2: void subscribe(io.reactivex.ObservableEmitter)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setProgressViewOffset(float)
okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.facebook.react.bridge.ActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
okhttp3.internal.proxy.NullProxySelector: void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.bridge.JavaMethodWrapper$2: JavaMethodWrapper$2()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Single readRssi()
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl_Factory: com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl newInstance(java.lang.String,com.polidea.rxandroidble2.internal.connection.DisconnectionRouterOutput,java.util.concurrent.ExecutorService,io.reactivex.Scheduler)
androidx.core.widget.ListViewCompat$Api19Impl: boolean canScrollList(android.widget.ListView,int)
okhttp3.internal.http.RealInterceptorChain: int getReadTimeoutMillis$okhttp()
com.polidea.rxandroidble2.internal.DeviceModule_ProvideConnectionStateRelayFactory: com.jakewharton.rxrelay2.BehaviorRelay get()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodes(double,double)
okhttp3.OkHttpClient: okhttp3.Dns dns()
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function6)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: NativePermissionsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactContext: void removeLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()
io.reactivex.Observable: io.reactivex.Observable buffer(long,java.util.concurrent.TimeUnit)
okhttp3.internal.ws.RealWebSocket$connect$1: void onResponse(okhttp3.Call,okhttp3.Response)
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult: int getRssi()
okhttp3.internal.Util: java.util.List immutableListOf(java.lang.Object[])
com.facebook.react.views.scroll.ReactScrollView: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config)
com.facebook.soloader.SoLoader: void AddBackupSoSource(android.content.Context,java.util.ArrayList,int)
okhttp3.internal.platform.Android10Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
okhttp3.OkHttpClient$Builder: void setDispatcher$okhttp(okhttp3.Dispatcher)
androidx.appcompat.view.WindowCallbackWrapper$Api26Impl: void onPointerCaptureChanged(android.view.Window$Callback,boolean)
okhttp3.Response: long sentRequestAtMillis()
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String)
androidx.core.app.ActivityCompat$Api21Impl: void postponeEnterTransition(android.app.Activity)
com.facebook.react.modules.intent.IntentModule: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
okhttp3.internal.cache2.FileOperator: void write(long,okio.Buffer,long)
okhttp3.internal.http2.Http2ExchangeCodec: void flushRequest()
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void beginScroll()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
okhttp3.internal.http2.Http2Reader$Handler: void settings(boolean,okhttp3.internal.http2.Settings)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation: java.lang.String toString()
com.polidea.rxandroidble2.internal.RxBleDeviceProvider: RxBleDeviceProvider(com.polidea.rxandroidble2.internal.cache.DeviceComponentCache,bleshadow.javax.inject.Provider)
okhttp3.internal.platform.android.ConscryptSocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
com.facebook.react.modules.dialog.DialogModule: void initialize()
okhttp3.HttpUrl: java.lang.String toString()
okhttp3.OkHttpClient: java.net.ProxySelector -deprecated_proxySelector()
com.reactnativecommunity.asyncstorage.AsyncStoragePackage: com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
com.polidea.rxandroidble2.internal.scan.InternalToExternalScanResultConverter_Factory: com.polidea.rxandroidble2.internal.scan.InternalToExternalScanResultConverter_Factory create(bleshadow.javax.inject.Provider)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void getAllKeys(com.facebook.react.bridge.Callback)
io.reactivex.Observable: io.reactivex.Observable sample(io.reactivex.ObservableSource)
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeController getController()
okhttp3.internal.concurrent.TaskRunner$Backend: void coordinatorWait(okhttp3.internal.concurrent.TaskRunner,long)
okhttp3.EventListener: void requestHeadersStart(okhttp3.Call)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext)
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher_Factory: com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher get()
com.facebook.react.bridge.Inspector: Inspector(com.facebook.jni.HybridData)
io.reactivex.Observable: io.reactivex.Observable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.bridge.JavaOnlyMap$1: JavaOnlyMap$1(com.facebook.react.bridge.JavaOnlyMap)
okhttp3.MediaType: int hashCode()
io.reactivex.Flowable: io.reactivex.Flowable concatMap(io.reactivex.functions.Function,int)
com.facebook.react.modules.websocket.WebSocketModule: void applyCustomBuilder(okhttp3.OkHttpClient$Builder)
okhttp3.internal.Util$threadFactory$1: java.lang.Thread newThread(java.lang.Runnable)
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher: void notifyNativeParamsUpdateCallback(android.bluetooth.BluetoothGatt,int,int,int,int)
okhttp3.Address: java.util.List -deprecated_connectionSpecs()
okhttp3.internal.http1.HeadersReader$Companion: HeadersReader$Companion()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
okhttp3.internal.ws.RealWebSocket: java.util.ArrayDeque access$getMessageAndCloseQueue$p(okhttp3.internal.ws.RealWebSocket)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityHint(android.view.View,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: void disableAdapter()
io.reactivex.Observable: io.reactivex.Observable skip(long)
com.facebook.react.modules.debug.DevSettingsModule: void removeListeners(double)
io.reactivex.Flowable: io.reactivex.Flowable repeat(long)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadMessage(okio.ByteString)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
io.reactivex.Flowable: io.reactivex.Flowable doFinally(io.reactivex.functions.Action)
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl: void onConnectionUnsubscribed()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Reader getReader$okhttp()
okhttp3.Address: boolean equals(java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable hide()
okhttp3.internal.concurrent.TaskRunner$RealBackend: void execute(java.lang.Runnable)
okhttp3.internal.platform.android.AndroidSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getPlayProviderFactory$cp()
com.facebook.react.bridge.CxxModuleWrapperBase: void resetModule(com.facebook.jni.HybridData)
com.facebook.common.util.TriState: com.facebook.common.util.TriState[] values()
io.reactivex.Single: io.reactivex.Flowable flatMapPublisher(io.reactivex.functions.Function)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: boolean shouldExtract(java.util.zip.ZipEntry,java.lang.String)
okhttp3.HttpUrl: boolean equals(java.lang.Object)
io.reactivex.Flowable: io.reactivex.Single toList(int)
okhttp3.CacheControl: int maxAgeSeconds()
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5: io.reactivex.functions.Predicate notUnsubscribed(com.polidea.rxandroidble2.internal.util.QueueReleasingEmitterWrapper)
com.facebook.react.fabric.FabricUIManager: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.facebook.react.views.image.ReactImageView: void setSource(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReactMethod: boolean isBlockingSynchronousMethod()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String colorSchemeForCurrentConfiguration(android.content.Context)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)
okhttp3.internal.http2.Http2Reader: void readPing(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginAutoJNI(long,int)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
okhttp3.CipherSuite: java.util.Map access$getINSTANCES$cp()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
okhttp3.internal.http1.Http1ExchangeCodec: okio.Source newUnknownLengthSource()
com.facebook.hermes.intl.IPlatformCollator$Usage: com.facebook.hermes.intl.IPlatformCollator$Usage[] values()
okhttp3.internal.http2.Http2Writer: void headers(boolean,int,java.util.List)
okhttp3.Cookie: java.lang.String toString()
okhttp3.HttpUrl$Builder: int effectivePort()
okhttp3.internal.http2.Http2Stream$Companion: Http2Stream$Companion()
okhttp3.internal.ws.RealWebSocket$WriterTask: long runOnce()
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$6: java.lang.Object call()
com.facebook.react.views.view.ReactClippingViewManager: void addView(com.facebook.react.views.view.ReactViewGroup,android.view.View,int)
androidx.appcompat.widget.SwitchCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi24_Factory: java.lang.Object get()
okhttp3.ConnectionSpec$Builder: ConnectionSpec$Builder(okhttp3.ConnectionSpec)
com.polidea.rxandroidble2.internal.operations.LegacyScanOperation: java.lang.String toString()
okhttp3.internal.platform.Android10Platform$Companion: Android10Platform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: com.facebook.soloader.UnpackingSoSource$DsoManifest getDsoManifest()
com.polidea.rxandroidble2.internal.connection.DescriptorWriter: io.reactivex.Completable writeDescriptor(android.bluetooth.BluetoothGattDescriptor,byte[])
io.reactivex.Single: io.reactivex.Single retry()
com.facebook.fresco.ui.common.VisibilityState: com.facebook.fresco.ui.common.VisibilityState valueOf(java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: boolean unstable_isModuleRegistered(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
okhttp3.internal.cache.DiskLruCache: void close()
okhttp3.internal.Internal: okhttp3.Headers$Builder addHeaderLenient(okhttp3.Headers$Builder,java.lang.String)
okhttp3.Handshake$peerCertificates$2: java.lang.Object invoke()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
io.reactivex.Flowable: io.reactivex.Flowable range(int,int)
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi26_Factory: IsConnectableCheckerApi26_Factory()
com.polidea.rxandroidble2.scan.ScanResult: long getTimestampNanos()
com.facebook.react.bridge.WritableNativeArray: void pushBoolean(boolean)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setTintColor(int)
com.facebook.react.ReactNativeHost: boolean getLazyViewManagersEnabled()
com.facebook.jni.DestructorThread$1: void run()
com.facebook.soloader.NativeLibrary: void ensureLoaded()
okhttp3.internal.http2.Http2Connection: boolean isHealthy(long)
com.facebook.fbreact.specs.NativeClipboardSpec: void setString(java.lang.String)
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.RealInterceptorChain copy$okhttp$default(okhttp3.internal.http.RealInterceptorChain,int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int,int,java.lang.Object)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.polidea.rxandroidble2.exceptions.BleGattCharacteristicException: BleGattCharacteristicException(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int,com.polidea.rxandroidble2.exceptions.BleGattOperationType)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setNativeModulesQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl_Factory: com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl newInstance(io.reactivex.Scheduler)
com.facebook.react.bridge.DynamicFromObject: double asDouble()
com.polidea.rxandroidble2.internal.connection.ConnectionModule: com.polidea.rxandroidble2.RxBleConnection$LongWriteOperationBuilder bindLongWriteOperationBuilder(com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl)
com.facebook.react.bridge.SoftAssertions: SoftAssertions()
okhttp3.internal.http2.Header: okio.ByteString component1()
okhttp3.internal.http.RealInterceptorChain: okhttp3.Call call()
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: Http1ExchangeCodec$KnownLengthSink(okhttp3.internal.http1.Http1ExchangeCodec)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
com.polidea.rxandroidble2.internal.DeviceModule_ProvideConnectionStateChangeListenerFactory: com.polidea.rxandroidble2.internal.connection.ConnectionStateChangeListener get()
okhttp3.internal.connection.RealCall: java.lang.String toLoggableString()
com.facebook.fbreact.specs.NativeI18nManagerSpec: NativeI18nManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.CatalystInstanceImpl$2: CatalystInstanceImpl$2(com.facebook.react.bridge.CatalystInstanceImpl)
com.bleplx.adapter.BleModule: void lambda$safeDiscoverAllServicesAndCharacteristicsForDevice$31(com.bleplx.adapter.utils.SafeExecutor,java.lang.String)
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withConnectTimeout(int,java.util.concurrent.TimeUnit)
com.facebook.react.bridge.WritableNativeArray: void pushNativeArray(com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.bridge.JavaOnlyArray: int size()
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
okhttp3.internal.platform.Platform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)
okhttp3.Cookie$Companion: long parseMaxAge(java.lang.String)
okhttp3.RequestBody$Companion$toRequestBody$2: long contentLength()
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(android.view.View,boolean)
okhttp3.internal.http2.Http2Reader$Handler: void ackSettings()
com.facebook.react.views.text.ReactTextView: void setAdjustFontSizeToFit(boolean)
com.facebook.react.uimanager.ComponentNameResolverManager: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
androidx.activity.ComponentActivity: void onTrimMemory(int)
okhttp3.internal.connection.RealConnectionPool: void evictAll()
com.polidea.rxandroidble2.internal.util.CharacteristicNotificationId: CharacteristicNotificationId(java.util.UUID,java.lang.Integer)
okhttp3.Cache: int getWriteSuccessCount$okhttp()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetHeightJNI(long)
com.facebook.react.uimanager.UIManagerModule: void measureInWindow(int,com.facebook.react.bridge.Callback)
com.polidea.rxandroidble2.internal.connection.LoggingIllegalOperationHandler_Factory: com.polidea.rxandroidble2.internal.connection.LoggingIllegalOperationHandler newInstance(com.polidea.rxandroidble2.internal.connection.IllegalOperationMessageCreator)
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View)
com.reactnativecommunity.asyncstorage.BuildConfig: BuildConfig()
okhttp3.internal.http2.Http2ExchangeCodec: okio.Sink createRequestBody(okhttp3.Request,long)
com.bleplx.adapter.BleModule: void readDescriptor(int,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
com.facebook.react.views.modal.ReactModalHostView: void setStatusBarTranslucent(boolean)
com.polidea.rxandroidble2.internal.BleIllegalOperationException: BleIllegalOperationException(java.lang.String,java.util.UUID,int,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
okhttp3.internal.connection.Exchange$RequestBodySink: void flush()
com.facebook.react.uimanager.UIManagerModule: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.BaseViewManager: void setTouchCancel(android.view.View,boolean)
com.polidea.rxandroidble2.exceptions.BleDisconnectedException: BleDisconnectedException()
okhttp3.internal.http2.Http2Connection: long access$getIntervalPongsReceived$p(okhttp3.internal.http2.Http2Connection)
okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.polidea.rxandroidble2.internal.util.BleConnectionCompat_Factory: java.lang.Object get()
io.reactivex.Flowable: io.reactivex.Flowable throttleLatest(long,java.util.concurrent.TimeUnit)
com.facebook.react.bridge.CatalystInstance: void addJSIModules(java.util.List)
com.facebook.react.views.textinput.ReactTextInputManager: void setSecureTextEntry(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.modules.permissions.PermissionsModule: PermissionsModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.Cookie: java.lang.String -deprecated_value()
com.polidea.rxandroidble2.internal.operations.ConnectOperation$3: java.lang.Object call()
com.polidea.rxandroidble2.internal.util.ByteAssociationUtil$3: boolean test(com.polidea.rxandroidble2.internal.util.ByteAssociation)
okhttp3.HttpUrl: java.lang.String fragment()
com.facebook.react.views.view.ReactViewManager: void nextFocusForward(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread()
io.reactivex.Flowable: io.reactivex.Flowable buffer(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,java.util.concurrent.Callable)
com.facebook.react.modules.systeminfo.AndroidInfoModule: AndroidInfoModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.Route: java.net.InetSocketAddress -deprecated_socketAddress()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
io.reactivex.Observable: io.reactivex.Observable concat(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)
com.polidea.rxandroidble2.internal.logger.LoggerUtil: java.lang.String commonCallbackMessage()
okhttp3.internal.platform.android.DeferredSocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity[] values()
okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnectionPool getDelegate$okhttp()
okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object)
okhttp3.internal.Internal: java.lang.String cookieToString(okhttp3.Cookie,boolean)
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy compute()
androidx.activity.ComponentActivity: java.lang.Object getLastCustomNonConfigurationInstance()
com.facebook.react.uimanager.ViewManager: java.util.Stack getRecyclableViewStack(int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices: void appendDescriptors(java.lang.StringBuilder,android.bluetooth.BluetoothGattCharacteristic)
com.polidea.rxandroidble2.internal.RxBleLog: void w(java.lang.String,java.lang.Object[])
com.facebook.react.animated.NativeAnimatedModule: void removeListeners(double)
io.reactivex.Flowable: io.reactivex.Flowable timeout(org.reactivestreams.Publisher,io.reactivex.functions.Function,org.reactivestreams.Publisher)
com.facebook.react.ReactNativeHost: android.app.Application getApplication()
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
okhttp3.internal.concurrent.TaskRunner: java.util.List activeQueues()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
com.facebook.jni.NativeRunnable: NativeRunnable(com.facebook.jni.HybridData)
okhttp3.EventListener: void responseHeadersStart(okhttp3.Call)
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResultLegacy: int getRssi()
com.polidea.rxandroidble2.internal.operations.CharacteristicReadOperation: boolean startOperation(android.bluetooth.BluetoothGatt)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
com.polidea.rxandroidble2.ClientComponent$BluetoothConstants: ClientComponent$BluetoothConstants()
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleType getJSIModuleType()
okhttp3.Response$Builder: okhttp3.Handshake getHandshake$okhttp()
okhttp3.HttpUrl$Builder: java.lang.String getEncodedFragment$okhttp()
io.reactivex.Observable: io.reactivex.Observable combineLatestDelayError(io.reactivex.functions.Function,int,io.reactivex.ObservableSource[])
com.facebook.react.bridge.BaseActivityEventListener: void onNewIntent(android.content.Intent)
androidx.appcompat.app.AppCompatDelegate$Api24Impl: android.os.LocaleList localeListForLanguageTags(java.lang.String)
io.reactivex.Observable: io.reactivex.Observable ambWith(io.reactivex.ObservableSource)
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider,java.lang.String)
okhttp3.internal.http1.Http1ExchangeCodec: okio.Sink newChunkedSink()
androidx.fragment.app.FragmentActivity: void onAttachFragment(androidx.fragment.app.Fragment)
com.polidea.rxandroidble2.internal.scan.ScanRecordImplNativeWrapper: byte[] getServiceData(android.os.ParcelUuid)
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
androidx.appcompat.app.AppCompatActivity: void supportInvalidateOptionsMenu()
io.reactivex.Single: io.reactivex.Single timer(long,java.util.concurrent.TimeUnit)
com.polidea.rxandroidble2.internal.util.ScanRecordParser_Factory$InstanceHolder: ScanRecordParser_Factory$InstanceHolder()
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: void invoke(java.io.IOException)
okhttp3.RequestBody$Companion: RequestBody$Companion()
okhttp3.internal.connection.RealConnection: void connectTunnel(int,int,int,okhttp3.Call,okhttp3.EventListener)
okhttp3.Headers$Companion: okhttp3.Headers -deprecated_of(java.lang.String[])
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
io.reactivex.Observable: io.reactivex.Observable throttleLatest(long,java.util.concurrent.TimeUnit)
com.facebook.react.runtime.BridgelessAtomicRef$State: com.facebook.react.runtime.BridgelessAtomicRef$State[] values()
com.facebook.react.modules.dialog.DialogModule: void onHostPause()
com.facebook.drawee.view.DraweeView: void setAspectRatio(float)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderWidth(com.facebook.react.views.text.ReactTextView,int,float)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.polidea.rxandroidble2.scan.ScanFilter$Builder: com.polidea.rxandroidble2.scan.ScanFilter$Builder setManufacturerData(int,byte[],byte[])
okhttp3.internal.http2.Http2Stream$FramingSink: boolean getFinished()
io.reactivex.Flowable: io.reactivex.Flowable doOnLifecycle(io.reactivex.functions.Consumer,io.reactivex.functions.LongConsumer,io.reactivex.functions.Action)
com.facebook.react.views.switchview.ReactSwitchManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.http2.Huffman: Huffman()
okhttp3.ResponseBody$Companion$asResponseBody$1: long contentLength()
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager_Factory: com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.polidea.rxandroidble2.RxBleAdapterStateObservable$1$1: RxBleAdapterStateObservable$1$1(com.polidea.rxandroidble2.RxBleAdapterStateObservable$1,io.reactivex.ObservableEmitter)
com.polidea.rxandroidble2.internal.RxBleLog: RxBleLog()
com.reactnativecommunity.asyncstorage.AsyncLocalStorageUtil: void deepMergeInto(org.json.JSONObject,org.json.JSONObject)
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay[] values()
io.reactivex.Observable: io.reactivex.Observable concatDelayError(io.reactivex.ObservableSource)
io.reactivex.Observable: io.reactivex.Observable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)
okhttp3.internal.platform.Android10Platform$Companion: boolean isSupported()
com.facebook.react.fabric.FabricUIManager: void lambda$static$0(com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint)
com.facebook.react.modules.blob.BlobModule: java.lang.String getNameFromUri(android.net.Uri)
okhttp3.internal.http2.Http2Connection: int getLastGoodStreamId$okhttp()
io.reactivex.Flowable: io.reactivex.Flowable zipWith(org.reactivestreams.Publisher,io.reactivex.functions.BiFunction,boolean,int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
com.polidea.rxandroidble2.internal.util.CheckerScanPermission: boolean isScanRuntimePermissionGranted()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
okhttp3.internal.cache.DiskLruCache$Entry: okio.Source newSource(int)
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
com.polidea.rxandroidble2.internal.operations.OperationsProvider: com.polidea.rxandroidble2.internal.operations.DescriptorReadOperation provideReadDescriptor(android.bluetooth.BluetoothGattDescriptor)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.connection.RealCall: okhttp3.Response getResponseWithInterceptorChain$okhttp()
com.facebook.react.views.text.ReactTextViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.polidea.rxandroidble2.scan.ScanResult: java.lang.String toString()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNumberOfLines(com.facebook.react.views.text.ReactTextView,int)
com.facebook.soloader.NativeDeps: java.util.concurrent.locks.ReentrantReadWriteLock access$000()
com.polidea.rxandroidble2.internal.util.BleConnectionCompat_Factory: com.polidea.rxandroidble2.internal.util.BleConnectionCompat get()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void pushPromise(int,int,java.util.List)
androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
com.facebook.react.bridge.CatalystInstanceImpl$5: void run()
okhttp3.internal.http2.Http2Writer: void data(boolean,int,okio.Buffer,int)
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter: DisconnectionRouter(java.lang.String,com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,io.reactivex.Observable)
com.polidea.rxandroidble2.internal.util.CheckerLocationProvider_Factory: com.polidea.rxandroidble2.internal.util.CheckerLocationProvider newInstance(android.content.ContentResolver,android.location.LocationManager)
com.reactnativecommunity.asyncstorage.AsyncStorageErrorUtil: com.facebook.react.bridge.WritableMap getError(java.lang.String,java.lang.String)
com.polidea.rxandroidble2.scan.ScanSettings: int describeContents()
io.reactivex.Single: java.lang.Object as(io.reactivex.SingleConverter)
okhttp3.internal.platform.android.AndroidLog: AndroidLog()
com.facebook.react.uimanager.events.ReactEventEmitter: ReactEventEmitter(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean recover(java.io.IOException,okhttp3.internal.connection.RealCall,okhttp3.Request,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
okhttp3.internal.platform.Platform$Companion: byte[] concatLengthPrefixed(java.util.List)
com.facebook.react.uimanager.UIManagerModule: void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
com.facebook.react.bridge.JavaScriptContextHolder: void clear()
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: FileSystem$Companion$SystemFileSystem()
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: void setClosed(boolean)
com.facebook.react.bridge.DynamicFromMap$1: DynamicFromMap$1()
com.facebook.react.views.scroll.ReactScrollView: void setSnapToStart(boolean)
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodeToView(double,double)
com.ghostcommv2.MainApplication$reactNativeHost$1: java.lang.String getJSMainModuleName()
com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState: java.lang.String toString()
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
io.reactivex.Observable: io.reactivex.disposables.Disposable forEach(io.reactivex.functions.Consumer)
com.facebook.yoga.YogaNative: long jni_YGConfigNewJNI()
okhttp3.internal.http2.Http2Connection: void sendDegradedPingLater$okhttp()
com.facebook.react.fabric.FabricUIManager: boolean getThemeData(int,float[])
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.ReactContext)
com.polidea.rxandroidble2.internal.operations.CharacteristicWriteOperation: io.reactivex.Single getCallback(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback)
okhttp3.internal.http2.Http2Stream: long getWriteBytesTotal()
com.facebook.react.views.view.ReactViewGroup: int getAllChildrenCount()
okhttp3.EventListener$Companion$NONE$1: EventListener$Companion$NONE$1()
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1: io.reactivex.ObservableSource apply(io.reactivex.Observable)
com.facebook.react.uimanager.BaseViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker: IllegalOperationChecker(com.polidea.rxandroidble2.internal.connection.IllegalOperationHandler)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void addListener(java.lang.String)
io.reactivex.Observable: java.lang.Iterable blockingNext()
com.facebook.react.bridge.ReactContext: void initializeWithInstance(com.facebook.react.bridge.CatalystInstance)
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float)
okhttp3.Address: java.net.Proxy proxy()
com.facebook.react.modules.network.NetworkingModule: void cancelRequest(int)
okhttp3.internal.cache.DiskLruCache$Entry: long getSequenceNumber$okhttp()
okhttp3.internal.concurrent.TaskRunner$RealBackend: long nanoTime()
okhttp3.MultipartReader$PartSource: MultipartReader$PartSource(okhttp3.MultipartReader)
okhttp3.MediaType: java.lang.String parameter(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setEmojiCompatEnabled(boolean)
okhttp3.HttpUrl: int -deprecated_pathSize()
okhttp3.WebSocketListener: void onMessage(okhttp3.WebSocket,okio.ByteString)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
okhttp3.Request$Builder: okhttp3.Headers$Builder getHeaders$okhttp()
androidx.fragment.app.FragmentActivity: void supportStartPostponedEnterTransition()
okhttp3.internal.http.HttpMethod: HttpMethod()
com.polidea.rxandroidble2.internal.operations.ConnectOperation$5: java.lang.Object call()
okhttp3.CertificatePinner$Companion: CertificatePinner$Companion()
io.reactivex.Observable: io.reactivex.Observable concatMapSingle(io.reactivex.functions.Function)
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Editor getCurrentEditor$okhttp()
okhttp3.internal.ws.RealWebSocket: void onReadClose(int,java.lang.String)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
com.polidea.rxandroidble2.internal.util.UUIDUtil: com.polidea.rxandroidble2.scan.ScanRecord parseFromBytes(byte[])
io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher)
com.facebook.react.fabric.FabricUIManager: void updateRootLayoutSpecs(int,int,int,int,int)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
com.polidea.rxandroidble2.LogOptions$Builder: com.polidea.rxandroidble2.LogOptions$Builder setUuidsLogSetting(java.lang.Integer)
com.facebook.react.bridge.ModuleHolder: boolean getCanOverrideExistingModule()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$1: java.lang.Object apply(java.lang.Object)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravity(java.lang.String,double,double)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
com.bleplx.adapter.BleModule: void createClient(java.lang.String,com.bleplx.adapter.OnEventCallback,com.bleplx.adapter.OnEventCallback)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
com.facebook.fbreact.specs.NativeLogBoxSpec: void show()
okhttp3.EventListener: void callEnd(okhttp3.Call)
com.facebook.react.defaults.DefaultReactNativeHost: com.facebook.react.bridge.JSIModulePackage getJSIModulePackage()
com.polidea.rxandroidble2.helpers.ByteArrayBatchObservable: ByteArrayBatchObservable(byte[],int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$4: void doInBackgroundGuarded(java.lang.Object[])
io.reactivex.Observable: io.reactivex.Observable takeUntil(io.reactivex.ObservableSource)
io.reactivex.Observable: io.reactivex.Observable never()
com.facebook.react.bridge.ReactContext: java.util.Collection getNativeModules()
com.facebook.react.views.progressbar.ProgressBarShadowNode: void setStyle(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config)
okhttp3.internal.ws.RealWebSocket: boolean send(java.lang.String)
com.facebook.react.fabric.BindingImpl: void stopSurface(int)
com.facebook.soloader.MinElf: long get64(com.facebook.soloader.ElfByteChannel,java.nio.ByteBuffer,long)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
com.facebook.react.bridge.Dynamic: double asDouble()
okhttp3.Response: okhttp3.Response priorResponse()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void addListener(java.lang.String)
com.facebook.soloader.SoLoader: void init(android.content.Context,int,com.facebook.soloader.SoFileLoader)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
okhttp3.internal.concurrent.Task: void setQueue$okhttp(okhttp3.internal.concurrent.TaskQueue)
okhttp3.internal.http.RealInterceptorChain: int writeTimeoutMillis()
okhttp3.internal.connection.RealConnection: okhttp3.Request createTunnel(int,int,okhttp3.Request,okhttp3.HttpUrl)
okhttp3.internal.connection.RealConnection: boolean getNoNewExchanges()
com.polidea.rxandroidble2.exceptions.BleServiceNotFoundException: BleServiceNotFoundException(java.util.UUID)
okhttp3.Response$Builder: Response$Builder()
okhttp3.OkHttpClient: java.util.List access$getDEFAULT_CONNECTION_SPECS$cp()
io.reactivex.internal.subscriptions.SubscriptionHelper: io.reactivex.internal.subscriptions.SubscriptionHelper valueOf(java.lang.String)
com.bleplx.adapter.BleModule: void writeCharacteristicWithValue(com.bleplx.adapter.Characteristic,java.lang.String,java.lang.Boolean,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake()
okhttp3.internal.ws.RealWebSocket$Close: long getCancelAfterCloseMillis()
okhttp3.Cache: long maxSize()
com.facebook.react.uimanager.ViewManager: void onSurfaceStopped(int)
okhttp3.internal.connection.RealConnection$connectTls$2: RealConnection$connectTls$2(okhttp3.internal.connection.RealConnection)
io.reactivex.Flowable: io.reactivex.Flowable fromPublisher(org.reactivestreams.Publisher)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)
okhttp3.WebSocket: okhttp3.Request request()
com.polidea.rxandroidble2.internal.DeviceModule_ProvidesConnectTimeoutConfFactory: com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration get()
io.reactivex.Flowable: io.reactivex.Flowable throttleWithTimeout(long,java.util.concurrent.TimeUnit)
okhttp3.internal.connection.RealConnection: void startHttp2(int)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray fromJavaArgs(java.lang.Object[])
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1: okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket)
com.polidea.rxandroidble2.ClientComponent$ClientModule: io.reactivex.Observable provideLocationServicesOkObservable(int,com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory)
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Single writeCharacteristic(java.util.UUID,byte[])
com.facebook.fbreact.specs.NativeTimingSpec: NativeTimingSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.CatalystInstance: boolean hasRunJSBundle()
com.polidea.rxandroidble2.internal.util.ObservableUtil: io.reactivex.ObservableTransformer identityTransformer()
com.facebook.react.uimanager.BaseViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.bleplx.adapter.BleModule: boolean lambda$changeAdapterState$15(com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState,com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState)
com.polidea.rxandroidble2.ClientComponent$ClientModule: java.util.concurrent.ExecutorService provideConnectionQueueExecutorService()
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$6: boolean test(java.lang.Boolean)
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)
com.polidea.rxandroidble2.scan.ScanSettings: ScanSettings(android.os.Parcel)
okhttp3.internal.cache.DiskLruCache$Entry: void setReadable$okhttp(boolean)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontFamily(java.lang.String)
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$1: DisconnectOperation$1(com.polidea.rxandroidble2.internal.operations.DisconnectOperation,io.reactivex.ObservableEmitter,com.polidea.rxandroidble2.internal.serialization.QueueReleaseInterface)
com.facebook.react.views.textinput.ReactTextInputManager: void setLetterSpacing(com.facebook.react.views.textinput.ReactEditText,float)
okhttp3.internal.cache.CacheStrategy$Companion: CacheStrategy$Companion()
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setFlags(int)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$11: com.polidea.rxandroidble2.internal.Priority definedPriority()
io.reactivex.Single: io.reactivex.Single unsubscribeOn(io.reactivex.Scheduler)
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$3: void run()
io.reactivex.Single: io.reactivex.Single fromFuture(java.util.concurrent.Future)
com.facebook.react.bridge.WritableNativeMap: void putNull(java.lang.String)
okhttp3.internal.http2.Http2Stream$FramingSource: void setClosed$okhttp(boolean)
com.polidea.rxandroidble2.exceptions.BleServiceNotFoundException: java.util.UUID getServiceUUID()
okhttp3.internal.http2.Http2Connection: void pushDataLater$okhttp(int,okio.BufferedSource,int,boolean)
com.facebook.react.bridge.ReactContext: java.lang.Object getSystemService(java.lang.String)
com.facebook.soloader.MinElf: long getu32(com.facebook.soloader.ElfByteChannel,java.nio.ByteBuffer,long)
okhttp3.internal.connection.RealConnection: void trackFailure$okhttp(okhttp3.internal.connection.RealCall,java.io.IOException)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.internal.platform.Jdk9Platform: Jdk9Platform()
com.bleplx.adapter.BleModule: void writeDescriptorForService(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
okhttp3.Handshake: java.lang.String getName(java.security.cert.Certificate)
io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function)
com.facebook.soloader.nativeloader.SystemDelegate: int getSoSourcesVersion()
okhttp3.HttpUrl$Builder$Companion: int access$schemeDelimiterOffset(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int)
com.facebook.soloader.SoLoader: void addBackupSoSourceFromSplitApk(android.content.Context,int,java.util.ArrayList)
io.reactivex.Observable: io.reactivex.Observable onTerminateDetach()
io.reactivex.Flowable: io.reactivex.Flowable buffer(int,int)
okhttp3.internal.cache2.Relay: java.io.RandomAccessFile getFile()
io.reactivex.Observable: io.reactivex.Observable cache()
io.reactivex.Observable: io.reactivex.Observable groupJoin(io.reactivex.ObservableSource,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
com.facebook.jni.HybridClassBase: HybridClassBase()
okhttp3.internal.platform.android.AndroidLog: void enable()
io.reactivex.Flowable: io.reactivex.Flowable hide()
okhttp3.Headers: java.util.Iterator iterator()
com.facebook.react.views.textinput.ReactEditText: void setOnKeyPress(boolean)
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi26_Factory: com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi26_Factory create()
okhttp3.internal.tls.OkHostnameVerifier: OkHostnameVerifier()
okhttp3.internal.Util: int indexOfLastNonAsciiWhitespace(java.lang.String,int,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getSnapInterval()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void getRecommendedTimeoutMillis(double,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.reactnativecommunity.asyncstorage.AsyncStorageExpoMigration: long getLastModifiedTimeFromBasicFileAttrs(java.io.File)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
io.reactivex.Observable: void blockingSubscribe()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Float)
com.polidea.rxandroidble2.internal.logger.LoggerUtil: java.lang.String getUuidToLog(java.util.UUID)
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: void close()
io.reactivex.Flowable: io.reactivex.subscribers.TestSubscriber test(long,boolean)
com.polidea.rxandroidble2.internal.util.DisposableUtil$3: DisposableUtil$3(io.reactivex.ObservableEmitter)
okhttp3.Cache$Companion: java.util.Set varyFields(okhttp3.Headers)
io.reactivex.Observable: io.reactivex.Observable withLatestFrom(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function5)
com.polidea.rxandroidble2.internal.DeviceModule_ProvideBluetoothDeviceFactory: android.bluetooth.BluetoothDevice get()
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: void setTextDirection(android.view.View,int)
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String getColorScheme()
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideCharacteristicPropertiesParserFactory: com.polidea.rxandroidble2.internal.util.CharacteristicPropertiesParser provideCharacteristicPropertiesParser()
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18$1: ScanSetupBuilderImplApi18$1(com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18,io.reactivex.ObservableTransformer,io.reactivex.ObservableTransformer)
io.reactivex.Single: io.reactivex.Single retry(long)
okhttp3.internal.Util: void ignoreIoExceptions(kotlin.jvm.functions.Function0)
okhttp3.Cache$Entry: void writeCertList(okio.BufferedSink,java.util.List)
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager_Factory: ServiceDiscoveryManager_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: void scan(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void clearCookies(com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeLogBoxSpec: java.lang.String getName()
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStarted()
io.reactivex.Observable: io.reactivex.Single singleOrError()
okhttp3.internal.cache.DiskLruCache: void access$setCivilizedFileSystem$p(okhttp3.internal.cache.DiskLruCache,boolean)
io.reactivex.Flowable: io.reactivex.Flowable interval(long,long,java.util.concurrent.TimeUnit)
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper_Factory: java.lang.Object get()
okhttp3.internal.tls.BasicTrustRootIndex: BasicTrustRootIndex(java.security.cert.X509Certificate[])
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle)
okhttp3.internal.http2.Huffman$Node: okhttp3.internal.http2.Huffman$Node[] getChildren()
okhttp3.ResponseBody: ResponseBody()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$9: java.lang.Object apply(java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable unsubscribeOn(io.reactivex.Scheduler)
okhttp3.Dispatcher: java.util.concurrent.ExecutorService -deprecated_executorService()
io.reactivex.Flowable: io.reactivex.Flowable concatArrayEagerDelayError(int,int,org.reactivestreams.Publisher[])
okhttp3.internal.http2.Http2Stream$FramingSink: void setTrailers(okhttp3.Headers)
com.facebook.react.bridge.UIManager: android.view.View resolveView(int)
okhttp3.Dispatcher: void enqueue$okhttp(okhttp3.internal.connection.RealCall$AsyncCall)
io.reactivex.Observable: io.reactivex.Observable window(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.internal.HostnamesKt: java.lang.String inet6AddressToAscii(byte[])
com.facebook.react.modules.camera.ImageStoreManager: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.facebook.react.uimanager.RootViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.polidea.rxandroidble2.internal.connection.ConnectionModule: com.polidea.rxandroidble2.internal.connection.ConnectionSubscriptionWatcher bindConnectionQueueSubscriptionWatcher(com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.ghostcommv2.MainApplication$reactNativeHost$1: MainApplication$reactNativeHost$1(com.ghostcommv2.MainApplication)
okhttp3.internal.platform.android.ConscryptSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getFactory$cp()
io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybe(io.reactivex.functions.Function)
okhttp3.FormBody: java.lang.String name(int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
okhttp3.HttpUrl$Builder: void setEncodedFragment$okhttp(java.lang.String)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: NativeImageStoreAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5: io.reactivex.ObservableSource apply(io.reactivex.Observable)
okhttp3.MultipartBody$Builder: MultipartBody$Builder(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
okhttp3.internal.http2.Http2Reader$ContinuationSource: void readContinuationHeader()
com.facebook.soloader.ApkSoSource$ApkUnpacker: ApkSoSource$ApkUnpacker(com.facebook.soloader.ApkSoSource,com.facebook.soloader.ExtractFromZipSoSource)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
com.ghostcommv2.R$style: R$style()
com.facebook.react.bridge.JavaOnlyMap$1: boolean hasNextKey()
io.reactivex.Flowable: io.reactivex.Flowable takeWhile(io.reactivex.functions.Predicate)
io.reactivex.Observable: io.reactivex.Observable dematerialize()
com.polidea.rxandroidble2.internal.connection.IllegalOperationHandler: IllegalOperationHandler(com.polidea.rxandroidble2.internal.connection.IllegalOperationMessageCreator)
okhttp3.Cache: void abortQuietly(okhttp3.internal.cache.DiskLruCache$Editor)
com.facebook.react.bridge.ReactContext$1: void run()
com.facebook.react.fabric.BindingImpl: void setPixelDensity(float)
com.polidea.rxandroidble2.internal.connection.ConnectionParametersImpl: ConnectionParametersImpl(int,int,int)
com.facebook.react.runtime.ReactInstance: void callFunctionOnModule(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.uimanager.UIManagerModule: void addUIBlock(com.facebook.react.uimanager.UIBlock)
com.facebook.soloader.MinElf: java.lang.String[] extract_DT_NEEDED_no_retries(com.facebook.soloader.ElfByteChannel)
com.polidea.rxandroidble2.exceptions.BleGattException: java.lang.String createMessage(android.bluetooth.BluetoothGatt,int,com.polidea.rxandroidble2.exceptions.BleGattOperationType)
io.reactivex.Flowable: io.reactivex.Maybe reduce(io.reactivex.functions.BiFunction)
okhttp3.internal.connection.RealConnection: okhttp3.internal.http.ExchangeCodec newCodec$okhttp(okhttp3.OkHttpClient,okhttp3.internal.http.RealInterceptorChain)
okhttp3.internal.io.FileSystem: boolean exists(java.io.File)
okhttp3.internal.platform.android.CloseGuard$Companion: CloseGuard$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Address: okhttp3.Dns dns()
io.reactivex.Observable: io.reactivex.Single count()
com.polidea.rxandroidble2.ClientComponent$ClientModule: io.reactivex.functions.Function provideScanResultMapper(com.polidea.rxandroidble2.internal.scan.InternalToExternalScanResultConverter)
okhttp3.internal.cache.CacheInterceptor: okhttp3.Cache getCache$okhttp()
com.polidea.rxandroidble2.scan.ScanSettings$Builder: com.polidea.rxandroidble2.scan.ScanSettings$Builder setCallbackType(int)
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: void setProfilingSettings(java.lang.String)
com.polidea.rxandroidble2.internal.RxBleDeviceImpl: RxBleDeviceImpl(android.bluetooth.BluetoothDevice,com.polidea.rxandroidble2.internal.connection.Connector,com.jakewharton.rxrelay2.BehaviorRelay,com.polidea.rxandroidble2.internal.util.CheckerConnectPermission)
com.facebook.react.turbomodule.core.TurboModuleManager: void logError(java.lang.String)
okhttp3.internal.cache.DiskLruCache$Editor: okio.Source newSource(int)
io.reactivex.Observable: io.reactivex.Observable switchOnNextDelayError(io.reactivex.ObservableSource,int)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: NativeAccessibilityManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getConstants()
com.polidea.rxandroidble2.internal.operations.ConnectOperation: java.lang.String toString()
okhttp3.internal.platform.android.AndroidSocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.OkHttpClient: okhttp3.EventListener$Factory -deprecated_eventListenerFactory()
com.facebook.react.modules.intent.IntentModule: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableArray asArray()
io.reactivex.Observable: io.reactivex.Observable publish(io.reactivex.functions.Function)
io.reactivex.Observable: io.reactivex.Observable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.internal.http2.Settings: int getMaxFrameSize(int)
io.reactivex.Flowable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function,boolean,int)
com.polidea.rxandroidble2.internal.DeviceModule_ProvideConnectionStateRelayFactory: DeviceModule_ProvideConnectionStateRelayFactory()
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl -deprecated_get(java.net.URL)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void onBatchComplete()
com.facebook.react.fabric.BindingImpl: void uninstallFabricUIManager()
io.reactivex.Observable: io.reactivex.Observable buffer(int)
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: android.bluetooth.BluetoothDevice access$1500(com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl)
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
io.reactivex.Observable: io.reactivex.Observable concatMapMaybe(io.reactivex.functions.Function)
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentBuilder: com.polidea.rxandroidble2.internal.connection.ConnectionComponent$Builder suppressOperationChecks(boolean)
okhttp3.Authenticator$Companion$AuthenticatorNone: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
com.facebook.react.uimanager.LayoutShadowNode: void setPositionValues(int,com.facebook.react.bridge.Dynamic)
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: bleshadow.javax.inject.Provider access$500(com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler,com.facebook.react.bridge.queue.MessageQueueThreadPerfStats)
okhttp3.internal.http2.Hpack$Reader: okio.ByteString getName(int)
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack access$100()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(android.view.View,java.lang.String)
com.polidea.rxandroidble2.internal.connection.ConnectorImpl_Factory: com.polidea.rxandroidble2.internal.connection.ConnectorImpl newInstance(com.polidea.rxandroidble2.internal.serialization.ClientOperationQueue,com.polidea.rxandroidble2.internal.connection.ConnectionComponent$Builder,io.reactivex.Scheduler)
io.reactivex.Observable: io.reactivex.Observable takeLast(long,java.util.concurrent.TimeUnit)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToEnd(boolean)
okhttp3.internal.concurrent.Task: okhttp3.internal.concurrent.TaskQueue getQueue$okhttp()
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(java.lang.Iterable,io.reactivex.functions.Function)
com.polidea.rxandroidble2.internal.connection.ConnectorImpl: void lambda$prepareConnection$1(java.util.Set)
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult: RxBleInternalScanResult(android.bluetooth.BluetoothDevice,int,long,com.polidea.rxandroidble2.scan.ScanRecord,com.polidea.rxandroidble2.scan.ScanCallbackType,com.polidea.rxandroidble2.scan.IsConnectable)
okhttp3.Cache$RealCacheRequest$1: Cache$RealCacheRequest$1(okhttp3.Cache$RealCacheRequest,okio.Sink)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
okhttp3.Connection: okhttp3.Route route()
okhttp3.internal.http2.Http2Connection$Builder: Http2Connection$Builder(boolean,okhttp3.internal.concurrent.TaskRunner)
com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation_Factory: ConnectionPriorityChangeOperation_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.Handshake: Handshake(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,kotlin.jvm.functions.Function0)
com.facebook.react.bridge.ReactContext: void internal_registerInteropModule(java.lang.Class,java.lang.Object)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: java.lang.String getName()
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okio.ByteString,okhttp3.MediaType)
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: com.polidea.rxandroidble2.internal.util.LocationServicesStatus locationServicesStatus()
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl_Factory: OperationsProviderImpl_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.polidea.rxandroidble2.exceptions.BleCannotSetCharacteristicNotificationException: android.bluetooth.BluetoothGattCharacteristic getBluetoothGattCharacteristic()
com.polidea.rxandroidble2.internal.util.CheckerPermission: CheckerPermission(android.content.Context)
com.facebook.react.bridge.NativeModuleRegistry: java.util.List getAllModules()
okhttp3.Response: java.util.List headers(java.lang.String)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void removeListeners(double)
io.reactivex.Observable: io.reactivex.Observable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function,boolean,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.reactivex.Observable: io.reactivex.Observable throttleLatest(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
io.reactivex.Single: io.reactivex.Single doOnDispose(io.reactivex.functions.Action)
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: void close()
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi18_Factory$InstanceHolder: IsConnectableCheckerApi18_Factory$InstanceHolder()
com.facebook.react.modules.intent.IntentModule: void invalidate()
com.polidea.rxandroidble2.internal.connection.NoRetryStrategy$1: java.lang.Object apply(java.lang.Object)
com.bleplx.adapter.BleModule: void lambda$safeConnectToDevice$29(com.polidea.rxandroidble2.RxBleDevice,com.bleplx.adapter.OnEventCallback,com.bleplx.adapter.utils.SafeExecutor,com.polidea.rxandroidble2.RxBleConnection)
io.reactivex.Flowable: io.reactivex.Flowable fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit)
okhttp3.CertificatePinner$Companion: CertificatePinner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.ColorPropConverter: ColorPropConverter()
io.reactivex.Observable: io.reactivex.Observable combineLatest(java.lang.Iterable,io.reactivex.functions.Function,int)
com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration: java.lang.String toString()
okhttp3.internal.http2.Http2: Http2()
io.reactivex.Flowable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable,io.reactivex.functions.Function)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexShrinkJNI(long,float)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
okhttp3.ConnectionSpec$Companion: ConnectionSpec$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.polidea.rxandroidble2.internal.connection.ConnectionModule: com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration providesOperationTimeoutConf(io.reactivex.Scheduler,com.polidea.rxandroidble2.Timeout)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getJavaModules(com.facebook.react.bridge.JSInstance)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
io.reactivex.Flowable: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function,boolean,int)
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void settings(boolean,okhttp3.internal.http2.Settings)
io.reactivex.Observable: io.reactivex.Observable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
io.reactivex.Observable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
okhttp3.internal.connection.RealConnection$connectTls$2: java.util.List invoke()
com.facebook.fbreact.specs.NativeDevMenuSpec: void debugRemotely(boolean)
okhttp3.internal.http2.Http2Connection$Builder: java.lang.String getConnectionName$okhttp()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
io.reactivex.Single: io.reactivex.Flowable repeat()
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String convertToCase(java.lang.String,int,boolean)
com.facebook.react.modules.image.ImageLoaderModule: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
com.reactnativecommunity.asyncstorage.AsyncLocalStorageUtil: void verifyAndForceSqliteCheckpoint(android.content.Context)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerResolver,int)
com.facebook.soloader.SoSource: java.lang.String getLibraryPath(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void addOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.polidea.rxandroidble2.LogConstants: LogConstants()
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope valueOf(java.lang.String)
okhttp3.RequestBody: okhttp3.MediaType contentType()
com.facebook.react.modules.dialog.DialogModule: void onHostDestroy()
okhttp3.CacheControl: boolean noTransform()
com.facebook.yoga.YogaNative: void jni_YGNodeSetIsReferenceBaselineJNI(long,boolean)
com.facebook.react.animated.NativeAnimatedModule: void startOperationBatch()
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi24_Factory: com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi24 get()
io.reactivex.Flowable: io.reactivex.Flowable sample(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setEncodedPathSegment(int,java.lang.String)
io.reactivex.Observable: io.reactivex.Observable doOnDispose(io.reactivex.functions.Action)
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher: void notifyNativeWriteCallback(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi21_Factory: com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi21 get()
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: void onCreate(android.database.sqlite.SQLiteDatabase)
okhttp3.internal.cache2.Relay: Relay(java.io.RandomAccessFile,okio.Source,long,okio.ByteString,long,kotlin.jvm.internal.DefaultConstructorMarker)
com.polidea.rxandroidble2.RxBleClientImpl: java.lang.String[] getRecommendedConnectRuntimePermissions()
com.polidea.rxandroidble2.internal.connection.MtuWatcher_Factory: com.polidea.rxandroidble2.internal.connection.MtuWatcher newInstance(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,int)
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl: com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation provideLongWriteOperation(android.bluetooth.BluetoothGattCharacteristic,com.polidea.rxandroidble2.RxBleConnection$WriteOperationAckStrategy,com.polidea.rxandroidble2.RxBleConnection$WriteOperationRetryStrategy,com.polidea.rxandroidble2.internal.connection.PayloadSizeLimitProvider,byte[])
com.polidea.rxandroidble2.RxBleDeviceServices$3: RxBleDeviceServices$3(com.polidea.rxandroidble2.RxBleDeviceServices,java.util.UUID)
io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer)
com.bleplx.adapter.BleModule: void lambda$requestMTUForDevice$7(com.bleplx.adapter.Device,com.bleplx.adapter.utils.SafeExecutor,java.lang.String,java.lang.Integer)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void dropAnimatedNode(double)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderStyle(com.facebook.react.views.text.ReactTextView,java.lang.String)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type valueOf(java.lang.String)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setEncodedQueryParameter(java.lang.String,java.lang.String)
io.reactivex.Observable: io.reactivex.Observable merge(java.lang.Iterable)
com.polidea.rxandroidble2.internal.util.CheckerScanPermission: java.lang.String[] getRecommendedScanRuntimePermissions()
com.facebook.jni.ThreadScopeSupport: void runStdFunctionImpl(long)
okhttp3.internal.ws.WebSocketExtensions$Companion: WebSocketExtensions$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: DaggerClientComponent$ClientComponentImpl(android.content.Context,com.polidea.rxandroidble2.DaggerClientComponent$1)
com.facebook.react.bridge.SoftAssertions: void assertUnreachable(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(com.facebook.react.views.drawer.ReactDrawerLayout,android.view.View,int)
okhttp3.MediaType: java.lang.String -deprecated_type()
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function6)
androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(java.lang.Runnable)
okhttp3.internal.http2.Http2Writer: void windowUpdate(int,long)
com.facebook.react.views.scroll.ReactScrollViewManager: void setIsInvertedVirtualizedList(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] importKeys()
com.facebook.react.ReactRootView: int getUIManagerType()
io.reactivex.Flowable: io.reactivex.Completable concatMapCompletable(io.reactivex.functions.Function)
com.polidea.rxandroidble2.internal.serialization.OperationPriorityFifoBlockingQueue: com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry take()
io.reactivex.Flowable: io.reactivex.Flowable skipWhile(io.reactivex.functions.Predicate)
okhttp3.Handshake$Companion: okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)
com.facebook.react.bridge.UIManager: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
okhttp3.Handshake: java.security.Principal -deprecated_localPrincipal()
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostResumed(android.app.Activity)
okhttp3.Challenge: int hashCode()
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getTypedExportedConstants()
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl$2$1: ClientOperationQueueImpl$2$1(com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl$2,com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry)
com.polidea.rxandroidble2.helpers.ValueInterpreter: float bytesToFloat(byte,byte,byte,byte)
com.polidea.rxandroidble2.exceptions.BleScanException: java.lang.String retryDateSuggestionIfExists(java.util.Date)
com.facebook.soloader.SoLoader: boolean useDepsFile(android.content.Context,boolean,boolean)
io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder setType(okhttp3.MediaType)
okhttp3.Dispatcher: java.lang.Runnable getIdleCallback()
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.polidea.rxandroidble2.internal.connection.LoggingIllegalOperationHandler: LoggingIllegalOperationHandler(com.polidea.rxandroidble2.internal.connection.IllegalOperationMessageCreator)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewEndOffset()
com.facebook.react.uimanager.BaseViewManager: void setScaleX(android.view.View,float)
okhttp3.Headers$Companion: void checkValue(java.lang.String,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setStartShouldSetResponder(android.view.View,boolean)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
okio.AsyncTimeout: java.io.IOException access$newTimeoutException(java.io.IOException)
okhttp3.internal.http2.Header$Companion: Header$Companion()
okhttp3.internal.connection.RealConnection: long getIdleAtNs$okhttp()
com.polidea.rxandroidble2.internal.operations.ScanOperationApi21: void stopScan(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,java.lang.Object)
okhttp3.internal.http2.Http2Stream: java.io.IOException getErrorException$okhttp()
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: java.lang.String getName()
okhttp3.Dispatcher: java.util.List queuedCalls()
com.polidea.rxandroidble2.internal.util.CheckerScanPermission_Factory: java.lang.Object get()
com.polidea.rxandroidble2.internal.operations.OperationsProvider: com.polidea.rxandroidble2.internal.operations.CharacteristicWriteOperation provideWriteCharacteristic(android.bluetooth.BluetoothGattCharacteristic,byte[])
com.polidea.rxandroidble2.helpers.ValueInterpreter: ValueInterpreter()
okhttp3.internal.cache.DiskLruCache: void setClosed$okhttp(boolean)
okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()
com.polidea.rxandroidble2.internal.cache.CacheEntry: java.lang.Object getKey()
com.polidea.rxandroidble2.utils.StandardUUIDsParser: boolean isStandardizedUUID(java.lang.String)
com.facebook.fbreact.specs.NativeModalManagerSpec: void addListener(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(android.view.View,boolean)
com.polidea.rxandroidble2.internal.util.ObservableUtil: ObservableUtil()
io.reactivex.Observable: io.reactivex.Observable zip(java.lang.Iterable,io.reactivex.functions.Function)
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager: io.reactivex.Single getDiscoverServicesSingle(long,java.util.concurrent.TimeUnit)
okhttp3.Cache$CacheResponseBody: okhttp3.MediaType contentType()
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi18_Factory: IsConnectableCheckerApi18_Factory()
com.facebook.soloader.nativeloader.SystemDelegate: SystemDelegate()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1: ScanSettingsEmulator$1(com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator,io.reactivex.Scheduler)
com.facebook.react.modules.image.ImageLoaderModule: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
io.reactivex.Observable: io.reactivex.Observable mergeArray(io.reactivex.ObservableSource[])
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
com.facebook.soloader.NativeDepsUnpacker: byte[] getExistingApkIdentifier(android.content.Context,java.io.File)
com.facebook.react.bridge.JavaMethodWrapper$4: JavaMethodWrapper$4()
com.polidea.rxandroidble2.ClientComponent$ClientModule: byte[] provideEnableNotificationValue()
com.facebook.react.ReactNativeHost: com.facebook.react.devsupport.DevSupportManagerFactory getDevSupportManagerFactory()
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1: boolean matchesSocket(javax.net.ssl.SSLSocket)
okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$2: ConnectionOperationQueueImpl$2(com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl,com.polidea.rxandroidble2.internal.operations.Operation)
com.polidea.rxandroidble2.internal.DeviceModule_ProvidesDisconnectTimeoutConfFactory: java.lang.Object get()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel valueOf(java.lang.String)
okhttp3.Response: okhttp3.internal.connection.Exchange exchange()
okhttp3.HttpUrl: java.util.List -deprecated_encodedPathSegments()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: JavaModuleWrapper$MethodDescriptor(com.facebook.react.bridge.JavaModuleWrapper)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothInteractionSchedulerFactory: java.lang.Object get()
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
okhttp3.internal.platform.android.SocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean,com.facebook.imagepipeline.core.ImagePipelineConfig)
okhttp3.internal.platform.Platform: void access$setPlatform$cp(okhttp3.internal.platform.Platform)
com.facebook.react.views.image.ReactImageManager: void setTintColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
okhttp3.CacheControl: boolean -deprecated_noCache()
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: void scanByService(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.polidea.rxandroidble2.exceptions.BleException: BleException(java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.DynamicFromArray: java.lang.String asString()
com.facebook.react.views.image.ReactImageManager: void setFadeDuration(com.facebook.react.views.image.ReactImageView,int)
io.reactivex.Single: io.reactivex.Single materialize()
com.facebook.react.modules.appstate.AppStateModule: void removeListeners(double)
com.facebook.react.bridge.Inspector$Page: java.lang.String getVM()
okhttp3.internal.http2.Http2Connection: java.net.Socket getSocket$okhttp()
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi23_Factory: ScanSetupBuilderImplApi23_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.OkHttpClient$Builder: int getConnectTimeout$okhttp()
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeFree(long)
androidx.appcompat.widget.SwitchCompat: void setThumbTintMode(android.graphics.PorterDuff$Mode)
com.facebook.soloader.SoLoader: void doLoadLibraryBySoName(java.lang.String,int,android.os.StrictMode$ThreadPolicy)
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
io.reactivex.Flowable: io.reactivex.Flowable startWith(org.reactivestreams.Publisher)
okhttp3.MultipartBody: okhttp3.MediaType contentType()
io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,long,boolean)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: android.bluetooth.le.AdvertiseData buildAdvertiseData(android.os.ParcelUuid,byte[],com.facebook.react.bridge.ReadableMap)
okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler: void reportJsException(com.facebook.react.common.mapbuffer.ReadableMapBuffer)
okhttp3.Cache: void flush()
io.reactivex.Observable: io.reactivex.Maybe lastElement()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsConnectableCheckerFactory: com.polidea.rxandroidble2.internal.scan.IsConnectableChecker provideIsConnectableChecker(int,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.internal.platform.android.AndroidLogHandler: void flush()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.facebook.soloader.SoLoader$1: void load(java.lang.String,int)
com.polidea.rxandroidble2.scan.ScanFilter$Builder: com.polidea.rxandroidble2.scan.ScanFilter$Builder setServiceData(android.os.ParcelUuid,byte[],byte[])
com.polidea.rxandroidble2.internal.operations.ConnectOperation_Factory: java.lang.Object get()
okhttp3.Cache: long size()
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl_Factory: java.lang.Object get()
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5$2: java.lang.Object apply(java.lang.Object)
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
com.facebook.react.devsupport.LogBoxModule: void invalidate()
com.facebook.react.modules.core.JavaTimerManager: void deleteTimer(int)
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18_Factory: com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.MediaType: okhttp3.MediaType get(java.lang.String)
com.polidea.rxandroidble2.scan.ScanSettings: boolean getLegacy()
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder: KitKatPurgeableDecoder(com.facebook.imagepipeline.memory.FlexByteArrayPool)
com.facebook.react.bridge.LifecycleEventListener: void onHostPause()
com.polidea.rxandroidble2.ClientComponent$NamedBooleanObservables: ClientComponent$NamedBooleanObservables()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationManagerFactory: ClientComponent_ClientModule_ProvideLocationManagerFactory(bleshadow.javax.inject.Provider)
io.reactivex.Flowable: io.reactivex.Completable concatMapCompletable(io.reactivex.functions.Function,int)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1$1: io.reactivex.Observable apply(com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult)
com.polidea.rxandroidble2.internal.RxBleDeviceImpl: java.lang.String getName(boolean)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String)
com.polidea.rxandroidble2.internal.util.ScanRecordParser_Factory: com.polidea.rxandroidble2.internal.util.ScanRecordParser get()
com.facebook.soloader.NativeDeps: int hashLib(java.lang.String)
com.polidea.rxandroidble2.RxBleClientImpl_Factory: RxBleClientImpl_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideTargetSdkFactory: int provideTargetSdk(android.content.Context)
com.facebook.react.bridge.ReadableMap: boolean isNull(java.lang.String)
okhttp3.MultipartBody: int size()
com.polidea.rxandroidble2.internal.util.ScanRecordParser: ScanRecordParser()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
okhttp3.HttpUrl: int port()
io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit,boolean)
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext newSSLContext()
io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object)
io.reactivex.Flowable: io.reactivex.Flowable throttleFirst(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl getNativeMethodCallInvokerHolder()
com.polidea.rxandroidble2.internal.operations.ConnectOperation_Factory: com.polidea.rxandroidble2.internal.operations.ConnectOperation get()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
com.polidea.rxandroidble2.internal.DeviceModule_ProvideConnectionStateChangeListenerFactory: com.polidea.rxandroidble2.internal.DeviceModule_ProvideConnectionStateChangeListenerFactory create(bleshadow.javax.inject.Provider)
okhttp3.OkHttpClient$Builder: okhttp3.Dns getDns$okhttp()
io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
okhttp3.internal.http1.Http1ExchangeCodec: void flushRequest()
com.polidea.rxandroidble2.BuildConfig: BuildConfig()
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(android.view.View,boolean)
okhttp3.internal.http.HttpHeaders: boolean promisesBody(okhttp3.Response)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)
okhttp3.internal.http2.Http2ExchangeCodec: void finishRequest()
okio.Timeout: okio.Timeout clearTimeout()
com.polidea.rxandroidble2.NotificationSetupMode: com.polidea.rxandroidble2.NotificationSetupMode[] values()
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableMap asMap()
io.reactivex.Flowable: io.reactivex.Flowable concatMapEager(io.reactivex.functions.Function)
com.facebook.soloader.NativeDepsUnpacker: boolean apkChanged(android.content.Context,java.io.File)
okhttp3.internal.http2.Huffman: void decode(okio.BufferedSource,long,okio.BufferedSink)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableNotificationValueFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableNotificationValueFactory create()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removeAllEncodedQueryParameters(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importTypes()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void extractAnimatedNodeOffset(double)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.polidea.rxandroidble2.RxBleConnection$LongWriteOperationBuilder: com.polidea.rxandroidble2.RxBleConnection$LongWriteOperationBuilder setWriteOperationRetryStrategy(com.polidea.rxandroidble2.RxBleConnection$WriteOperationRetryStrategy)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1$2: ScanSettingsEmulator$1$2(com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
okhttp3.internal.connection.Exchange$RequestBodySink: java.io.IOException complete(java.io.IOException)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6: CharacteristicLongWriteOperation$6(com.polidea.rxandroidble2.RxBleConnection$WriteOperationRetryStrategy,com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$IntSupplier,int,java.nio.ByteBuffer)
com.facebook.react.bridge.DynamicFromObject: java.lang.String asString()
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.polidea.rxandroidble2.scan.ScanFilter: boolean matchesServiceUuids(android.os.ParcelUuid,android.os.ParcelUuid,java.util.List)
okhttp3.RequestBody: boolean isDuplex()
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl: com.polidea.rxandroidble2.internal.operations.CharacteristicWriteOperation provideWriteCharacteristic(android.bluetooth.BluetoothGattCharacteristic,byte[])
com.bleplx.adapter.BleModule: java.util.List getCharacteristicsForDevice(java.lang.String,java.lang.String)
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEventThrottle(int)
okhttp3.internal.cache.DiskLruCache$Entry: java.lang.Void invalidLengths(java.util.List)
com.facebook.hermes.intl.Collator: java.util.Map resolvedOptions()
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView$Api17Impl: int getLayoutDirection(android.content.res.Configuration)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setRefreshing(boolean)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabelledBy(android.view.View,com.facebook.react.bridge.Dynamic)
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi21_Factory: com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi21_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.polidea.rxandroidble2.internal.util.ClientStateObservable$3$1: ClientStateObservable$3$1(com.polidea.rxandroidble2.internal.util.ClientStateObservable$3)
com.polidea.rxandroidble2.internal.util.ByteAssociationUtil$3: ByteAssociationUtil$3(android.bluetooth.BluetoothGattDescriptor)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
okhttp3.Headers: java.util.Map toMultimap()
androidx.activity.ComponentActivity$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: PushObserver$Companion$PushObserverCancel()
com.facebook.react.views.view.ReactViewGroup: void setBackfaceVisibility(java.lang.String)
com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState: com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState[] values()
com.facebook.soloader.MergedSoMapping: java.lang.String mapLibName(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
kotlin.jvm.internal.CallableReference$NoReceiver: java.lang.Object readResolve()
com.facebook.react.bridge.Inspector$Page: int getId()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void announceForAccessibility(java.lang.String)
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay valueOf(java.lang.String)
okhttp3.internal.connection.RealConnection$Companion: okhttp3.internal.connection.RealConnection newTestConnection(okhttp3.internal.connection.RealConnectionPool,okhttp3.Route,java.net.Socket,long)
com.facebook.react.fabric.interop.InteropEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
androidx.core.view.ViewCompat$Api17Impl: void setLayoutDirection(android.view.View,int)
io.reactivex.Observable: io.reactivex.Observable window(io.reactivex.ObservableSource,int)
com.facebook.jni.IteratorHelper: boolean hasNext()
com.facebook.soloader.UnpackingSoSource: java.lang.Object getLibraryLock(java.lang.String)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setContext(java.lang.String)
okhttp3.internal.concurrent.TaskRunner: void runTask(okhttp3.internal.concurrent.Task)
com.polidea.rxandroidble2.internal.connection.ConnectionModule: com.polidea.rxandroidble2.internal.connection.DisconnectionRouterInput bindDisconnectionRouterInput(com.polidea.rxandroidble2.internal.connection.DisconnectionRouter)
io.reactivex.Observable: io.reactivex.Observable concatMapIterable(io.reactivex.functions.Function)
com.facebook.react.uimanager.BaseViewManager: void setResponderGrant(android.view.View,boolean)
okhttp3.internal.tls.BasicTrustRootIndex: int hashCode()
okhttp3.internal.concurrent.TaskQueue: void schedule$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,kotlin.jvm.functions.Function0,int,java.lang.Object)
com.facebook.react.views.view.ReactViewGroup: boolean getRemoveClippedSubviews()
com.facebook.soloader.ExtractFromZipSoSource: com.facebook.soloader.UnpackingSoSource$Unpacker makeUnpacker(byte)
io.reactivex.Observable: io.reactivex.Observable merge(io.reactivex.ObservableSource,io.reactivex.ObservableSource)
com.oblador.vectoricons.VectorIconsModule: void loadFontWithFileName(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
okhttp3.internal.connection.RealCall: okio.Timeout timeout()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String getName()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okio.ByteString,okhttp3.MediaType)
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager_Factory: java.lang.Object get()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getConstants()
okhttp3.internal.Util: long headersContentLength(okhttp3.Response)
com.facebook.soloader.ExoSoSource$ExoUnpacker$FileBackedInputDsoIterator: ExoSoSource$ExoUnpacker$FileBackedInputDsoIterator(com.facebook.soloader.ExoSoSource$ExoUnpacker,com.facebook.soloader.ExoSoSource$1)
com.facebook.react.bridge.UIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothInteractionExecutorServiceFactory: java.lang.Object get()
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
okhttp3.internal.http1.Http1ExchangeCodec$Companion: Http1ExchangeCodec$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: okhttp3.internal.platform.android.AndroidSocketAdapter build(java.lang.Class)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
io.reactivex.Observable: io.reactivex.observers.TestObserver test(boolean)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.view.View getContentView()
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl -deprecated_parse(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable ambWith(org.reactivestreams.Publisher)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothCallbacksSchedulerFactory: io.reactivex.Scheduler provideBluetoothCallbacksScheduler()
okhttp3.internal.ws.RealWebSocket: void writePingFrame$okhttp()
okhttp3.WebSocket: void cancel()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
io.reactivex.Single: io.reactivex.Maybe dematerialize(io.reactivex.functions.Function)
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function)
com.polidea.rxandroidble2.RxBleRadioOperationCustom: io.reactivex.Observable asObservable(android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,io.reactivex.Scheduler)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1$3: java.lang.Object apply(java.lang.Object)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLiveRegion(android.view.View,java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable fromIterable(java.lang.Iterable)
com.facebook.soloader.UnpackingSoSource: void extractDsoImpl(com.facebook.soloader.UnpackingSoSource$InputDso,byte[])
io.reactivex.Observable: io.reactivex.Observable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getConstants()
okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: io.reactivex.CompletableSource lambda$writeClientCharacteristicConfig$9(android.bluetooth.BluetoothGattCharacteristic,java.lang.Throwable)
com.facebook.soloader.DirectorySoSource: com.facebook.soloader.ElfByteChannel getChannel(java.io.File)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl createForMainThread(java.lang.String,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi18: boolean isLocationProviderOk()
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
okhttp3.Response$Builder: void setCode$okhttp(int)
okhttp3.internal.platform.BouncyCastlePlatform$Companion: BouncyCastlePlatform$Companion()
com.facebook.react.ReactRootView: void setAppProperties(android.os.Bundle)
okhttp3.OkHttpClient$Builder: void setProtocols$okhttp(java.util.List)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.bleplx.adapter.BleModule: void connectToDevice(java.lang.String,com.bleplx.adapter.ConnectionOptions,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnEventCallback,com.bleplx.adapter.OnErrorCallback)
com.facebook.react.uimanager.LayoutShadowNode: void setOverflow(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder listener(okhttp3.internal.http2.Http2Connection$Listener)
okhttp3.internal.connection.Exchange: void cancel()
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache_Factory: DeviceComponentCache_Factory()
com.facebook.soloader.SoLoader$TestOnlyUtils: void setSoSources(com.facebook.soloader.SoSource[])
com.facebook.soloader.ApplicationSoSource: int loadLibrary(java.lang.String,int,android.os.StrictMode$ThreadPolicy)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: io.reactivex.Observable getConnectionParametersUpdates()
okhttp3.OkHttpClient: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)
okhttp3.internal.cache.DiskLruCache: java.util.LinkedHashMap getLruEntries$okhttp()
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List)
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: void initialize(android.content.Context)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexDirectionJNI(long)
com.facebook.react.bridge.Arguments: java.util.ArrayList toList(com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.network.NetworkingModule: void readWithProgress(int,okhttp3.ResponseBody)
okhttp3.internal.platform.Platform$Companion: boolean isBouncyCastlePreferred()
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,boolean)
com.polidea.rxandroidble2.utils.StandardUUIDsParser: java.lang.String getStandardizedUUIDComponent(java.util.UUID)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
com.facebook.react.turbomodule.core.TurboModuleInteropUtils$ParsingException: TurboModuleInteropUtils$ParsingException(java.lang.String,java.lang.String,java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable window(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
com.polidea.rxandroidble2.internal.util.ClientStateObservable_Factory: com.polidea.rxandroidble2.internal.util.ClientStateObservable_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.CacheControl: boolean onlyIfCached()
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Class getShadowNodeClass()
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(com.facebook.react.uimanager.ViewManagerResolver)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale forLocale(java.util.Locale)
com.polidea.rxandroidble2.internal.operations.ConnectOperation$4: void subscribe(io.reactivex.SingleEmitter)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.facebook.react.bridge.JavaMethodWrapper$7: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.animated.NativeAnimatedModule: void onHostPause()
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
io.reactivex.observers.DisposableSingleObserver: void onStart()
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
io.reactivex.Observable: io.reactivex.Observable generate(io.reactivex.functions.Consumer)
com.bleplx.BlePlxModule: void isDeviceConnected(java.lang.String,com.facebook.react.bridge.Promise)
io.reactivex.Flowable: io.reactivex.Flowable defer(java.util.concurrent.Callable)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
androidx.core.app.ActivityCompat$Api16Impl: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl: com.polidea.rxandroidble2.internal.operations.CharacteristicReadOperation provideReadCharacteristic(android.bluetooth.BluetoothGattCharacteristic)
com.polidea.rxandroidble2.internal.RxBleLog: java.lang.String createTag()
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5$3: CharacteristicLongWriteOperation$5$3(com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5,com.polidea.rxandroidble2.internal.util.QueueReleasingEmitterWrapper)
io.reactivex.Single: io.reactivex.Single delay(long,java.util.concurrent.TimeUnit,boolean)
okhttp3.MultipartReader$Part: void close()
com.facebook.react.uimanager.LayoutShadowNode: void setDisplay(java.lang.String)
androidx.core.text.ICUCompat$Api21Impl: java.lang.String getScript(java.util.Locale)
okhttp3.internal.http2.Http2Reader: java.util.logging.Logger access$getLogger$cp()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.Dynamic getDynamic(int)
io.reactivex.Observable: java.lang.Object blockingSingle(java.lang.Object)
okhttp3.OkHttpClient: java.util.List protocols()
com.facebook.react.modules.debug.SourceCodeModule: SourceCodeModule(com.facebook.react.bridge.ReactApplicationContext)
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function4)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry getViewManagerRegistry_DO_NOT_USE()
com.ghostcommv2.MainActivity: MainActivity()
com.facebook.hermes.intl.NumberFormat: java.util.Map resolvedOptions()
androidx.appcompat.widget.AppCompatButton: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.uimanager.BaseViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
okhttp3.OkHttpClient: boolean followRedirects()
androidx.fragment.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
com.facebook.react.bridge.UiThreadUtil: boolean isOnUiThread()
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void incrementPendingJSCalls()
okhttp3.internal.Util: boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit)
okhttp3.ConnectionPool: ConnectionPool(okhttp3.internal.connection.RealConnectionPool)
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
io.reactivex.Observable: io.reactivex.Single firstOrError()
okhttp3.internal.http2.Http2Stream$FramingSource: void receive$okhttp(okio.BufferedSource,long)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.reactivex.Observable: io.reactivex.Observable concatMapMaybeDelayError(io.reactivex.functions.Function)
com.facebook.react.bridge.CatalystInstanceImpl: void registerSegment(int,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient,java.util.List)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String)
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean,int,int)
io.reactivex.Observable: io.reactivex.Observable mergeWith(io.reactivex.MaybeSource)
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: long runOnce()
okhttp3.CertificatePinner: CertificatePinner(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)
okhttp3.internal.ws.RealWebSocket: boolean send(okio.ByteString)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
com.facebook.react.bridge.ReactContext: void onNewIntent(android.app.Activity,android.content.Intent)
io.reactivex.Observable: void blockingSubscribe(io.reactivex.Observer)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.ghostcommv2.BuildConfig: BuildConfig()
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.facebook.soloader.NativeDeps: int parseLibCount(byte[],int,int)
okhttp3.Dispatcher: void finished$okhttp(okhttp3.internal.connection.RealCall)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: java.lang.String getName()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeListeners(double)
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
com.bleplx.adapter.BleModule: void lambda$safeDiscoverAllServicesAndCharacteristicsForDevice$33(com.bleplx.adapter.utils.SafeExecutor,java.lang.String,java.lang.Throwable)
io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,long,java.util.concurrent.TimeUnit)
com.facebook.soloader.ExoSoSource$ExoUnpacker: ExoSoSource$ExoUnpacker(com.facebook.soloader.ExoSoSource,com.facebook.soloader.UnpackingSoSource)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: java.lang.String getName()
okhttp3.internal.cache.CacheInterceptor$Companion: boolean isEndToEnd(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSCallback(int,com.facebook.react.bridge.NativeArray)
io.reactivex.Flowable: io.reactivex.Flowable timer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.internal.http2.Http2Connection: boolean pushedStream$okhttp(int)
io.reactivex.Flowable: java.util.concurrent.Future toFuture()
com.facebook.react.turbomodule.core.TurboModuleInteropUtils: TurboModuleInteropUtils()
com.facebook.react.uimanager.BaseViewManager: void setTouchStart(android.view.View,boolean)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.dialog.DialogModule)
okhttp3.internal.concurrent.TaskQueue$AwaitIdleTask: long runOnce()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextTransform(java.lang.String)
com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState: RxBleAdapterStateObservable$BleAdapterState(boolean,java.lang.String)
okhttp3.WebSocketListener: WebSocketListener()
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
okhttp3.internal.http.ExchangeCodec: okio.Sink createRequestBody(okhttp3.Request,long)
okhttp3.HttpUrl$Builder$Companion: HttpUrl$Builder$Companion()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setFontSize(com.facebook.react.views.text.ReactTextView,float)
okhttp3.Dns$Companion: Dns$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.polidea.rxandroidble2.internal.operations.ScanOperation: void stopScan(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,java.lang.Object)
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
com.facebook.react.views.scroll.ReactScrollView: boolean getRemoveClippedSubviews()
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerMove(boolean)
com.polidea.rxandroidble2.utils.ConnectionSharingAdapter: ConnectionSharingAdapter()
com.facebook.react.uimanager.UIManagerModule: void setLayoutAnimationEnabledExperimental(boolean)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.bleplx.BlePlxModule: void readRSSIForDevice(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function5)
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23: LocationServicesStatusApi23(com.polidea.rxandroidble2.internal.util.CheckerLocationProvider,com.polidea.rxandroidble2.internal.util.CheckerScanPermission,int,int,boolean)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostDestroy()
okhttp3.internal.http2.Http2Stream: void close(okhttp3.internal.http2.ErrorCode,java.io.IOException)
io.reactivex.Single: io.reactivex.disposables.Disposable subscribe()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
okhttp3.HttpUrl$Builder: java.util.List getEncodedQueryNamesAndValues$okhttp()
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
okhttp3.internal.concurrent.TaskQueue: void execute(java.lang.String,long,boolean,kotlin.jvm.functions.Function0)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.polidea.rxandroidble2.scan.ScanFilter: int describeContents()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: Http2Connection$ReaderRunnable$settings$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection$ReaderRunnable,boolean,okhttp3.internal.http2.Settings)
com.facebook.soloader.ExoSoSource$ExoUnpacker$FileBackedInputDsoIterator: com.facebook.soloader.UnpackingSoSource$InputDso next()
com.facebook.soloader.NativeDeps: java.lang.String[] tryGetDepsFromPrecomputedDeps(java.lang.String)
io.reactivex.Observable: io.reactivex.Observable distinct()
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory_Factory: LocationServicesOkObservableApi23Factory_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
okhttp3.Cookie: java.lang.String name()
io.reactivex.Flowable: io.reactivex.Flowable flatMapMaybe(io.reactivex.functions.Function)
okhttp3.internal.concurrent.TaskLoggerKt: java.lang.String formatDuration(long)
com.facebook.react.views.image.ReactImageView: void setBorderRadius(float)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
kotlin.random.Random: Random()
io.reactivex.Flowable: io.reactivex.Flowable mergeWith(io.reactivex.CompletableSource)
com.polidea.rxandroidble2.internal.util.BleConnectionCompat_Factory: com.polidea.rxandroidble2.internal.util.BleConnectionCompat_Factory create(bleshadow.javax.inject.Provider)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsAndroidWearFactory: java.lang.Object get()
com.polidea.rxandroidble2.internal.DeviceModule: com.polidea.rxandroidble2.RxBleDevice bindDevice(com.polidea.rxandroidble2.internal.RxBleDeviceImpl)
com.polidea.rxandroidble2.internal.connection.DisconnectAction: void onConnectionSubscribed()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedPathSegments(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasMeasureFuncJNI(long,boolean)
com.polidea.rxandroidble2.exceptions.BleScanException: BleScanException(int,java.lang.Throwable)
com.facebook.react.turbomodule.core.NativeModuleSoLoader$Companion: void maybeLoadSoLibrary()
okhttp3.Response: Response(okhttp3.Request,okhttp3.Protocol,java.lang.String,int,okhttp3.Handshake,okhttp3.Headers,okhttp3.ResponseBody,okhttp3.Response,okhttp3.Response,okhttp3.Response,long,long,okhttp3.internal.connection.Exchange)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1: DiskLruCache$newJournalWriter$faultHidingSink$1(okhttp3.internal.cache.DiskLruCache)
okhttp3.internal.http2.Http2ExchangeCodec$Companion: java.util.List http2HeadersList(okhttp3.Request)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
io.reactivex.Observable: io.reactivex.Single elementAtOrError(long)
okhttp3.internal.platform.AndroidPlatform$Companion: AndroidPlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.tls.CertificateChainCleaner$Companion: CertificateChainCleaner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Hpack$Reader: int dynamicTableIndex(int)
com.polidea.rxandroidble2.internal.operations.DisconnectOperation: DisconnectOperation(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider,java.lang.String,android.bluetooth.BluetoothManager,io.reactivex.Scheduler,com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration,com.polidea.rxandroidble2.internal.connection.ConnectionStateChangeListener)
io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource[],io.reactivex.functions.Function,int)
com.polidea.rxandroidble2.internal.connection.DisconnectionRouterOutput: io.reactivex.Observable asErrorOnlyObservable()
com.facebook.react.ReactRootView: java.lang.String getInitialUITemplate()
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: okhttp3.internal.platform.android.SocketAdapter buildIfSupported()
androidx.core.widget.TextViewCompat$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
com.polidea.rxandroidble2.RxBleConnection$WriteOperationRetryStrategy$LongWriteFailure: RxBleConnection$WriteOperationRetryStrategy$LongWriteFailure(int,com.polidea.rxandroidble2.exceptions.BleGattException)
com.polidea.rxandroidble2.internal.RxBleDeviceImpl: io.reactivex.Observable establishConnection(com.polidea.rxandroidble2.ConnectionSetup)
com.facebook.react.bridge.CatalystInstance: boolean hasNativeModule(java.lang.Class)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings getPeerSettings()
okhttp3.MultipartBody$Companion: MultipartBody$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.reactivex.Single: io.reactivex.Single delaySubscription(io.reactivex.CompletableSource)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnSelectionChange(com.facebook.react.views.textinput.ReactEditText,boolean)
com.bleplx.BlePlxModule: void characteristicsForDevice(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.polidea.rxandroidble2.internal.util.QueueReleasingEmitterWrapper: void onNext(java.lang.Object)
com.polidea.rxandroidble2.internal.scan.ScanRecordImplCompat: ScanRecordImplCompat(java.util.List,java.util.List,android.util.SparseArray,java.util.Map,int,int,java.lang.String,byte[])
okhttp3.internal.platform.android.DeferredSocketAdapter$Factory: okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket)
okhttp3.Interceptor$Companion: Interceptor$Companion()
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$7: java.lang.Object apply(java.lang.Object)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothCallbacksSchedulerFactory$InstanceHolder: ClientComponent_ClientModule_ProvideBluetoothCallbacksSchedulerFactory$InstanceHolder()
com.facebook.yoga.YogaNative: void jni_YGConfigSetLoggerJNI(long,com.facebook.yoga.YogaLogger)
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.polidea.rxandroidble2.LogOptions$Builder: LogOptions$Builder()
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getCxxModules()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthJNI(long,float)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMaxFontSizeMultiplier(float)
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role valueOf(java.lang.String)
com.polidea.rxandroidble2.internal.util.ClientStateObservable$3: ClientStateObservable$3(io.reactivex.Observable)
com.facebook.react.runtime.ReactSurfaceView: android.graphics.Point getViewportOffset()
okhttp3.Address: javax.net.ssl.HostnameVerifier -deprecated_hostnameVerifier()
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: void operationComplete(double,java.lang.String,java.lang.String)
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl -deprecated_get(java.net.URI)
com.facebook.soloader.SoLoader: boolean areSoSourcesAbisSupported()
com.facebook.react.views.scroll.ReactHorizontalScrollView: long getLastScrollDispatchTime()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideContentResolverFactory: android.content.ContentResolver get()
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.String getKey()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: void startSamplingProfiler()
androidx.appcompat.app.AppCompatActivity: boolean onMenuOpened(int,android.view.Menu)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okio.BufferedSource,okhttp3.MediaType,long)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$2: void doInBackgroundGuarded(java.lang.Object[])
com.polidea.rxandroidble2.internal.connection.DisconnectionRouterOutput: io.reactivex.Observable asValueOnlyObservable()
okhttp3.CacheControl: int sMaxAgeSeconds()
com.facebook.react.runtime.ReactInstance: void loadJSBundleFromFile(java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativeClipboardSpec: java.lang.String getName()
com.polidea.rxandroidble2.internal.DeviceModule_ProvidesConnectTimeoutConfFactory: java.lang.Object get()
com.facebook.soloader.DirectApkSoSource: java.lang.String getFallbackApkLdPath(java.lang.String)
io.reactivex.observers.TestObserver$EmptyObserver: io.reactivex.observers.TestObserver$EmptyObserver[] values()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleDataCreateEnd(java.lang.String,int)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$2: void onNext(com.polidea.rxandroidble2.internal.util.ByteAssociation)
com.facebook.react.bridge.NativeModule: boolean canOverrideExistingModule()
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory -deprecated_sslSocketFactory()
com.bleplx.BlePlxModule: void monitorCharacteristicForService(int,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.Cache: void evictAll()
io.reactivex.Observable: io.reactivex.Observable lift(io.reactivex.ObservableOperator)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
com.facebook.soloader.ApplicationSoSource: ApplicationSoSource(android.content.Context,int)
okhttp3.internal.concurrent.TaskQueue: void cancelAll()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)
okhttp3.Cookie: boolean persistent()
okhttp3.OkHttpClient: OkHttpClient(okhttp3.OkHttpClient$Builder)
okhttp3.internal.connection.RealConnection: void setIdleAtNs$okhttp(long)
com.polidea.rxandroidble2.internal.connection.ConnectionModule: com.polidea.rxandroidble2.internal.connection.DisconnectionRouterOutput bindDisconnectionRouterOutput(com.polidea.rxandroidble2.internal.connection.DisconnectionRouter)
okhttp3.ResponseBody$Companion$asResponseBody$1: okio.BufferedSource source()
com.facebook.soloader.DirectApkSoSource: int loadLibrary(java.lang.String,int,android.os.StrictMode$ThreadPolicy)
okhttp3.Dns: java.util.List lookup(java.lang.String)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$9: io.reactivex.CompletableSource apply(android.bluetooth.BluetoothGattDescriptor)
com.polidea.rxandroidble2.internal.connection.ConnectionModule_GattWriteMtuOverheadFactory: com.polidea.rxandroidble2.internal.connection.ConnectionModule_GattWriteMtuOverheadFactory create()
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule lambda$new$1(com.facebook.react.turbomodule.core.TurboModuleManagerDelegate,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setPointerOverCapture(android.view.View,boolean)
okhttp3.HttpUrl$Companion: boolean isPercentEncoded(java.lang.String,int,int)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setMostRecentEventCount(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactScrollView,boolean)
io.reactivex.Observable: io.reactivex.Observable create(io.reactivex.ObservableOnSubscribe)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsDebuggingRemotely(boolean)
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$3: ServiceDiscoveryManager$3(com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager)
com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator_Factory: java.lang.Object get()
okhttp3.internal.cache.DiskLruCache: void readJournalLine(java.lang.String)
okhttp3.CacheControl: int -deprecated_maxStaleSeconds()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap fromBundle(android.os.Bundle)
com.polidea.rxandroidble2.internal.operations.ScanOperationApi18: java.lang.String toString()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
androidx.appcompat.view.WindowCallbackWrapper$Api24Impl: void onProvideKeyboardShortcuts(android.view.Window$Callback,java.util.List,android.view.Menu,int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
io.reactivex.Flowable: io.reactivex.Flowable unsafeCreate(org.reactivestreams.Publisher)
okhttp3.Headers: java.time.Instant getInstant(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.bleplx.adapter.BleModule: java.util.List descriptorsForCharacteristic(int)
io.reactivex.Flowable: io.reactivex.Flowable create(io.reactivex.FlowableOnSubscribe,io.reactivex.BackpressureStrategy)
okhttp3.Response$Builder: okhttp3.Response$Builder removeHeader(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setReturnKeyType(java.lang.String)
okhttp3.Request: okhttp3.CacheControl -deprecated_cacheControl()
com.polidea.rxandroidble2.internal.connection.MtuWatcher_Factory: MtuWatcher_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.textinput.ReactEditText: void setFontSize(float)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsAndroidWearFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsAndroidWearFactory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.fabric.FabricUIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentBuilder: com.polidea.rxandroidble2.internal.DeviceComponent$Builder macAddress(java.lang.String)
androidx.core.os.TraceCompat$Api18Impl: void endSection()
androidx.core.widget.NestedScrollView: int getScrollRange()
okhttp3.OkHttpClient$Builder: boolean getFollowRedirects$okhttp()
okhttp3.internal.cache.DiskLruCache$Snapshot: okhttp3.internal.cache.DiskLruCache$Editor edit()
okhttp3.RequestBody: okhttp3.RequestBody create(java.lang.String,okhttp3.MediaType)
com.facebook.react.views.text.ReactRawTextShadowNode: void setText(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(android.view.View,boolean)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsNearbyPermissionNeverForLocationFactory: java.lang.Object get()
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: void setProfilingSettings(java.lang.String)
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResultLegacy: byte[] getScanRecord()
okhttp3.internal.connection.RealCall: java.io.IOException noMoreExchanges$okhttp(java.io.IOException)
com.facebook.react.views.textinput.ReactTextInputManager: void setMultiline(com.facebook.react.views.textinput.ReactEditText,boolean)
com.reactnativecommunity.asyncstorage.AsyncStorageErrorUtil: com.facebook.react.bridge.WritableMap getInvalidValueError(java.lang.String)
com.facebook.react.bridge.WritableMap: void putNull(java.lang.String)
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(io.reactivex.Scheduler)
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealCall clone()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(android.view.View,java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable flatMapIterable(io.reactivex.functions.Function)
io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiFunction,boolean)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getConstantsForViewManager(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getAffectedRange(int,int)
okhttp3.Handshake$peerCertificates$2: Handshake$peerCertificates$2(kotlin.jvm.functions.Function0)
com.facebook.react.bridge.CatalystInstanceImpl: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: void lambda$setupServerInitiatedCharacteristicRead$1(io.reactivex.subjects.PublishSubject,com.polidea.rxandroidble2.internal.util.CharacteristicNotificationId,android.bluetooth.BluetoothGattCharacteristic,com.polidea.rxandroidble2.NotificationSetupMode)
okhttp3.internal.http2.Settings: int getMaxConcurrentStreams()
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSource getSource$okhttp()
okhttp3.internal.tls.OkHostnameVerifier: boolean isAscii(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.cache2.Relay: int getSourceCount()
io.reactivex.Observable: io.reactivex.Single sequenceEqual(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiPredicate,int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.DimensionPropConverter: DimensionPropConverter()
okhttp3.Cookie: java.lang.String -deprecated_domain()
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(com.facebook.react.views.modal.ReactModalHostView,int)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$2: io.reactivex.Observable apply(android.bluetooth.BluetoothGattCharacteristic)
com.bleplx.adapter.BleModule: BleModule(android.content.Context)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(android.view.View,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.Util: java.lang.String toHostHeader(okhttp3.HttpUrl,boolean)
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: java.util.Collection getModules()
okhttp3.internal.cache2.Relay: java.lang.Thread getUpstreamReader()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder callTimeout(java.time.Duration)
com.polidea.rxandroidble2.ClientComponent$ClientModule: android.content.ContentResolver provideContentResolver(android.content.Context)
io.reactivex.internal.subscriptions.EmptySubscription: io.reactivex.internal.subscriptions.EmptySubscription[] values()
com.polidea.rxandroidble2.helpers.ByteArrayBatchObservable: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: com.facebook.react.bridge.NativeModule getModule()
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
com.facebook.react.views.view.ReactViewManager: void setPointerEvents(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.polidea.rxandroidble2.internal.operations.DescriptorReadOperation_Factory: com.polidea.rxandroidble2.internal.operations.DescriptorReadOperation get()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay[] values()
io.reactivex.Flowable: io.reactivex.Flowable filter(io.reactivex.functions.Predicate)
androidx.fragment.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
com.facebook.react.bridge.ReactSoftExceptionLogger: void logSoftException(java.lang.String,java.lang.Throwable)
com.polidea.rxandroidble2.internal.RxBleLog: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])
io.reactivex.Observable: io.reactivex.Observable concatArrayDelayError(io.reactivex.ObservableSource[])
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.Class,javax.inject.Provider)
com.ghostcommv2.MainApplication$reactNativeHost$1: java.util.List getPackages()
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideBluetoothGattFactory: com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideBluetoothGattFactory create(bleshadow.javax.inject.Provider)
okhttp3.Protocol$Companion: okhttp3.Protocol get(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,java.lang.Long)
com.facebook.fbreact.specs.NativeClipboardSpec: NativeClipboardSpec(com.facebook.react.bridge.ReactApplicationContext)
com.polidea.rxandroidble2.internal.connection.DisconnectionRouterInput: void onDisconnectedException(com.polidea.rxandroidble2.exceptions.BleDisconnectedException)
com.facebook.react.modules.blob.BlobModule: long getLastModifiedFromUri(android.net.Uri)
io.reactivex.Flowable: io.reactivex.Flowable timeout(io.reactivex.functions.Function,io.reactivex.Flowable)
okhttp3.internal.ws.RealWebSocket: void onReadPing(okio.ByteString)
okhttp3.Handshake$Companion$get$1: java.util.List invoke()
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.MultipartBody$Part)
androidx.core.widget.PopupWindowCompat$Api19Impl: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
okhttp3.internal.ws.MessageDeflaterKt: okio.ByteString access$getEMPTY_DEFLATE_BLOCK$p()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl_Factory: com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.internal.http.HttpMethod: boolean redirectsWithBody(java.lang.String)
com.bleplx.adapter.BleModule: void lambda$safeMonitorCharacteristicForDevice$45(com.bleplx.adapter.utils.SafeExecutor,java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.DynamicFromMap: double asDouble()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Observable setupIndication(android.bluetooth.BluetoothGattCharacteristic)
okhttp3.internal.cache.DiskLruCache$Entry: void setSequenceNumber$okhttp(long)
com.facebook.react.bridge.CatalystInstance: void initialize()
io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object)
okhttp3.internal.connection.RouteSelector$Companion: RouteSelector$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,okio.ByteString,okhttp3.MediaType,int,java.lang.Object)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder retryOnConnectionFailure(boolean)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(android.view.View,boolean)
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$7: java.lang.Boolean apply(com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState)
com.facebook.soloader.ElfFileChannel: void close()
okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideContentResolverFactory: android.content.ContentResolver provideContentResolver(android.content.Context)
com.facebook.soloader.ElfZipFileChannel: com.facebook.soloader.ElfByteChannel position(long)
io.reactivex.Flowable: io.reactivex.Flowable onTerminateDetach()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
io.reactivex.Flowable: io.reactivex.Flowable retry()
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.soloader.SoLoader: boolean loadLibraryBySoName(java.lang.String,java.lang.String,java.lang.String,int,android.os.StrictMode$ThreadPolicy)
com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter: void setMarshmallowSettings(com.polidea.rxandroidble2.scan.ScanSettings,android.bluetooth.le.ScanSettings$Builder)
com.facebook.react.uimanager.UIManagerModule: void setJSResponder(int,boolean)
com.bleplx.adapter.BleModule: void lambda$safeWriteDescriptorForDevice$13(com.bleplx.adapter.Descriptor,byte[],com.bleplx.adapter.utils.SafeExecutor,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String getName()
com.facebook.react.views.view.ReactViewManager: void setOverflow(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.fbreact.specs.NativeDevSettingsSpec: NativeDevSettingsSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.imagepipeline.nativecode.NativeBlurFilter: void nativeIterativeBoxBlur(android.graphics.Bitmap,int,int)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationServicesStatusFactory: ClientComponent_ClientModule_ProvideLocationServicesStatusFactory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.modules.core.ExceptionsManagerModule: ExceptionsManagerModule(com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.ReactRootView: void setEventListener(com.facebook.react.ReactRootView$ReactRootViewEventListener)
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
com.facebook.react.modules.core.DeviceEventManagerModule: DeviceEventManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
androidx.activity.ComponentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()
io.reactivex.Flowable: io.reactivex.Flowable doOnRequest(io.reactivex.functions.LongConsumer)
com.facebook.react.modules.blob.BlobModule: void remove(java.lang.String)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openSettings(com.facebook.react.bridge.Promise)
com.facebook.react.modules.debug.AnimationsDebugModule: void stopRecordingFps(double)
okhttp3.CipherSuite$Companion: java.lang.String secondaryName(java.lang.String)
com.reactnativecommunity.asyncstorage.AsyncStoragePackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)
androidx.appcompat.widget.MenuPopupWindow$Api29Impl: void setTouchModal(android.widget.PopupWindow,boolean)
io.reactivex.Observable: io.reactivex.Observable concatEager(java.lang.Iterable)
com.polidea.rxandroidble2.internal.DeviceComponent: com.polidea.rxandroidble2.RxBleDevice provideDevice()
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$Output: RxBleGattCallback$Output()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(java.time.Duration)
com.facebook.react.views.image.ReactImageManager: void setBorderColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.facebook.soloader.SoLoader: com.facebook.soloader.SoSource[] access$102(com.facebook.soloader.SoSource[])
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$3: CharacteristicLongWriteOperation$3(com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation,io.reactivex.Observable,java.nio.ByteBuffer,int,com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$IntSupplier)
com.bleplx.adapter.BleModule: void writeCharacteristicForService(int,java.lang.String,java.lang.String,boolean,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable repeatUntil(io.reactivex.functions.BooleanSupplier)
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: void flush()
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: int hashCode()
io.reactivex.Observable: io.reactivex.Observable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
io.reactivex.Observable: io.reactivex.Observable retry(io.reactivex.functions.Predicate)
okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
okhttp3.ConnectionSpec$Builder: boolean getTls$okhttp()
com.facebook.react.bridge.JavaOnlyMap: java.lang.String getString(java.lang.String)
com.facebook.soloader.UnpackingSoSource: void prepare(java.lang.String)
okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.SSLContext newSSLContext()
okhttp3.internal.ws.WebSocketReader: void readMessageFrame()
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: java.lang.reflect.Method component2()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedViewConstants()
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableType getType(int)
io.reactivex.Observable: io.reactivex.Observable concatDelayError(io.reactivex.ObservableSource,int,boolean)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationServicesOkObservableFactory: java.lang.Object get()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMarginJNI(long,int)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAdjustFontSizeToFit(boolean)
com.facebook.react.views.textinput.ReactEditText: void setPlaceholder(java.lang.String)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.facebook.react.bridge.Arguments: java.lang.Object makeNativeObject(java.lang.Object)
okhttp3.EventListener: void callStart(okhttp3.Call)
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
io.reactivex.Observable: io.reactivex.Observable timeout(io.reactivex.functions.Function,io.reactivex.ObservableSource)
okhttp3.Challenge: Challenge(java.lang.String,java.lang.String)
okhttp3.internal.Util: boolean isHealthy(java.net.Socket,okio.BufferedSource)
okhttp3.Handshake: java.util.List localCertificates()
com.polidea.rxandroidble2.internal.cache.DeviceComponentWeakReference: DeviceComponentWeakReference(com.polidea.rxandroidble2.internal.DeviceComponent)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: ReactUnimplementedViewManager()
com.facebook.soloader.ApplicationSoSource: java.io.File unpackLibrary(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.views.switchview.ReactSwitch createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactScrollView,boolean)
androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)
io.reactivex.Flowable: io.reactivex.Single all(io.reactivex.functions.Predicate)
io.reactivex.Flowable: io.reactivex.Flowable switchOnNextDelayError(org.reactivestreams.Publisher)
okhttp3.internal.connection.RealCall$AsyncCall: void run()
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)
com.facebook.react.TurboReactPackage: java.lang.Iterable getNativeModuleIterator(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.soloader.ElfZipFileChannel: long size()
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$Page[] getPagesNative()
com.polidea.rxandroidble2.internal.connection.MtuBasedPayloadSizeLimit_Factory: com.polidea.rxandroidble2.internal.connection.MtuBasedPayloadSizeLimit newInstance(com.polidea.rxandroidble2.RxBleConnection,int)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType[] values()
com.facebook.react.modules.core.TimingModule: void invalidate()
androidx.core.graphics.TypefaceCompatUtil$Api19Impl: android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal)
com.facebook.react.bridge.ReactContextBaseJavaModule: android.app.Activity getCurrentActivity()
com.facebook.react.bridge.JavaScriptModuleRegistry: com.facebook.react.bridge.JavaScriptModule getJavaScriptModule(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisAutoJNI(long)
androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReactContext: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object)
io.reactivex.Observable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function)
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule create()
com.polidea.rxandroidble2.internal.util.ByteAssociationUtil$1: boolean test(java.lang.Object)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
com.facebook.soloader.UnpackingSoSource$InputDsoStream: com.facebook.soloader.UnpackingSoSource$Dso getDso()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void setAccessibilityFocus(double)
okhttp3.internal.ws.RealWebSocket$Message: int getFormatOpcode()
com.facebook.react.uimanager.BaseViewManager: void setBorderRadius(android.view.View,float)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: boolean propagateErrorIfOccurred(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$Output,android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int,com.polidea.rxandroidble2.exceptions.BleGattOperationType)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,java.lang.Object)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableArray)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: void lambda$setCharacteristicNotification$3(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,boolean)
io.reactivex.Flowable: io.reactivex.Single isEmpty()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothAdapterFactory$InstanceHolder: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothAdapterFactory access$000()
com.facebook.react.views.text.ReactTextView: void setSpanned(android.text.Spannable)
okhttp3.Response: java.lang.String header(java.lang.String)
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: void close()
okhttp3.internal.Util: int indexOfNonWhitespace$default(java.lang.String,int,int,java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable concatEager(java.lang.Iterable,int,int)
okhttp3.Cache: void update$okhttp(okhttp3.Response,okhttp3.Response)
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.RealInterceptorChain copy$okhttp(int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int)
com.facebook.react.util.RCTLog: void logIfNoNativeHook(java.lang.String,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object getReactTextUpdate(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.common.mapbuffer.MapBuffer)
com.facebook.soloader.UnpackingSoSource: int loadLibrary(java.lang.String,int,android.os.StrictMode$ThreadPolicy)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
com.facebook.yoga.YogaNodeJNIBase: float baseline(float,float)
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: com.polidea.rxandroidble2.RxBleClient rxBleClient()
com.facebook.soloader.ElfByteChannel: int write(java.nio.ByteBuffer)
com.facebook.soloader.ElfZipFileChannel: void close()
com.facebook.react.modules.blob.BlobCollector: void nativeInstall(java.lang.Object,long)
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getConstants()
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier: boolean verify(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLSession)
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: java.lang.String getProfilingSettings()
com.facebook.react.views.view.ReactClippingViewManager: void addView(android.view.View,android.view.View,int)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.internal.http2.Http2Stream: long getReadBytesTotal()
okhttp3.Cache: java.io.File -deprecated_directory()
io.reactivex.Flowable: io.reactivex.Flowable concatMapDelayError(io.reactivex.functions.Function)
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureDrop()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDeviceSdkFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDeviceSdkFactory create()
com.facebook.react.bridge.ReactIgnorableMountingException: boolean isIgnorable(java.lang.Throwable)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableArray asArray()
com.facebook.react.bridge.ReactContext: void runOnUiQueueThread(java.lang.Runnable)
okhttp3.Handshake$Companion$get$1: Handshake$Companion$get$1(java.util.List)
com.facebook.react.views.image.ReactImageManager: ReactImageManager()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
com.bleplx.adapter.BleModule: com.bleplx.adapter.Characteristic getCharacteristicOrEmitError(int,com.bleplx.adapter.OnErrorCallback)
com.polidea.rxandroidble2.internal.SingleResponseOperation: com.polidea.rxandroidble2.exceptions.BleException provideException(android.os.DeadObjectException)
com.polidea.rxandroidble2.helpers.LocationServicesOkObservable: com.polidea.rxandroidble2.helpers.LocationServicesOkObservable createInstance(android.content.Context)
io.reactivex.Flowable: io.reactivex.Flowable concatMapEagerDelayError(io.reactivex.functions.Function,boolean)
okhttp3.internal.connection.RealConnectionPool: int idleConnectionCount()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: void updateExtraData(android.view.View,java.lang.Object)
okhttp3.MultipartBody: long contentLength()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxyAuthenticator(okhttp3.Authenticator)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void emitUpdateDimensionsEvent()
com.facebook.react.views.switchview.ReactSwitchManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
io.reactivex.Flowable: io.reactivex.Flowable switchOnNext(org.reactivestreams.Publisher)
okhttp3.internal.cache.DiskLruCache$Snapshot: okio.Source getSource(int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$6: void doInBackgroundGuarded(java.lang.Void[])
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: boolean onRequest(int,java.util.List)
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
com.facebook.react.views.view.ReactViewManager: void nextFocusLeft(com.facebook.react.views.view.ReactViewGroup,int)
okhttp3.Cookie: java.util.regex.Pattern access$getDAY_OF_MONTH_PATTERN$cp()
com.facebook.react.bridge.interop.InteropModuleRegistry: InteropModuleRegistry()
okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
com.reactnativecommunity.asyncstorage.AsyncStoragePackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()
com.polidea.rxandroidble2.internal.serialization.QueueSemaphore: void release()
androidx.lifecycle.ProcessLifecycleOwner$3$1: ProcessLifecycleOwner$3$1(androidx.lifecycle.ProcessLifecycleOwner$3)
io.reactivex.Flowable: io.reactivex.Flowable window(org.reactivestreams.Publisher)
okhttp3.internal.cache.DiskLruCache: void setMaxSize(long)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabel(android.view.View,java.lang.String)
okhttp3.Cache$CacheResponseBody: long contentLength()
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator getTextWatcherDelegator()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderStyle(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
okhttp3.internal.cache.DiskLruCache$Entry: java.lang.String getKey$okhttp()
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideConnectionQueueExecutorServiceFactory$InstanceHolder: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideConnectionQueueExecutorServiceFactory access$000()
okhttp3.internal.publicsuffix.PublicSuffixDatabase$findMatchingRule$1: void set(java.lang.Object)
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl_Factory: java.lang.Object get()
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.polidea.rxandroidble2.internal.DeviceModule_ProvideBluetoothDeviceFactory: android.bluetooth.BluetoothDevice provideBluetoothDevice(java.lang.String,com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
okhttp3.Request$Builder: okhttp3.Request$Builder cacheControl(okhttp3.CacheControl)
com.facebook.react.bridge.CatalystInstance: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
com.facebook.soloader.SysUtil: byte[] makeApkDepBlock(java.io.File,android.content.Context)
io.reactivex.Flowable: io.reactivex.Flowable publish(io.reactivex.functions.Function)
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider access$2100(com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl)
okhttp3.internal.platform.android.ConscryptSocketAdapter: ConscryptSocketAdapter()
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi31: boolean isLocationPermissionOk()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(android.view.View,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$9: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink)
com.ghostcommv2.MainApplication: com.facebook.react.ReactHost getReactHost()
com.polidea.rxandroidble2.internal.operations.ScanOperationApi21: java.lang.Object createScanCallback(io.reactivex.ObservableEmitter)
com.facebook.react.uimanager.BaseViewManager: void setElevation(android.view.View,float)
io.reactivex.Observable: io.reactivex.Observable concatArrayEagerDelayError(int,int,io.reactivex.ObservableSource[])
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityStopped(android.app.Activity)
com.facebook.soloader.NativeDeps: NativeDeps()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$4: DisconnectionRouter$4(com.polidea.rxandroidble2.internal.connection.DisconnectionRouter,io.reactivex.disposables.Disposable)
okhttp3.internal.connection.RouteSelector$Selection: okhttp3.Route next()
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory[] values()
androidx.appcompat.widget.AppCompatEditText: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1: DatesKt$STANDARD_DATE_FORMAT$1()
okhttp3.Request$Builder: okhttp3.Request$Builder tag(java.lang.Class,java.lang.Object)
com.facebook.react.defaults.DefaultComponentsRegistry$Companion: com.facebook.react.defaults.DefaultComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
okhttp3.Dispatcher: void setMaxRequestsPerHost(int)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$6: java.lang.Object apply(java.lang.Object)
io.reactivex.Flowable: io.reactivex.Completable switchMapCompletableDelayError(io.reactivex.functions.Function)
com.facebook.soloader.DirectApkSoSource: DirectApkSoSource(android.content.Context)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
com.facebook.react.animated.InterpolationAnimatedNode$OutputType: com.facebook.react.animated.InterpolationAnimatedNode$OutputType valueOf(java.lang.String)
com.facebook.soloader.DirectorySoSource: java.lang.String getLibraryPath(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable take(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideCharacteristicPropertiesParserFactory: com.polidea.rxandroidble2.internal.util.CharacteristicPropertiesParser get()
com.facebook.soloader.UnpackingSoSource: void regenerate(byte,com.facebook.soloader.UnpackingSoSource$DsoManifest,com.facebook.soloader.UnpackingSoSource$InputDsoIterator)
okhttp3.internal.platform.android.CloseGuard$Companion: okhttp3.internal.platform.android.CloseGuard get()
io.reactivex.Flowable: io.reactivex.Flowable throttleLast(long,java.util.concurrent.TimeUnit)
com.facebook.soloader.MinElf: MinElf()
io.reactivex.Observable: io.reactivex.Observable retry(long)
com.polidea.rxandroidble2.internal.RxBleDeviceImpl_Factory: com.polidea.rxandroidble2.internal.RxBleDeviceImpl_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
com.polidea.rxandroidble2.internal.util.ClientStateObservable: io.reactivex.Observable checkAdapterAndServicesState(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,io.reactivex.Observable,io.reactivex.Observable)
io.reactivex.Flowable: io.reactivex.Flowable intervalRange(long,long,long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: DaggerClientComponent$ConnectionComponentImpl(com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl,com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl,java.lang.Boolean,java.lang.Boolean,com.polidea.rxandroidble2.Timeout)
androidx.appcompat.app.AppCompatDelegate$Api33Impl: android.os.LocaleList localeManagerGetApplicationLocales(java.lang.Object)
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
com.facebook.react.views.text.ReactRawTextManager: java.lang.Class getShadowNodeClass()
io.reactivex.Observable: io.reactivex.Observable switchMapSingleDelayError(io.reactivex.functions.Function)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray createArray()
com.polidea.rxandroidble2.RxBleDeviceServices$2: java.lang.Object call()
com.facebook.soloader.MinElf: java.lang.String[] extract_DT_NEEDED(com.facebook.soloader.ElfByteChannel)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.String extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: io.reactivex.Observable getOnConnectionStateChange()
com.facebook.fbreact.specs.NativeAlertManagerSpec: java.lang.String getName()
com.polidea.rxandroidble2.internal.cache.CacheEntry: int hashCode()
com.himelbrand.ble.peripheral.RNBLEModule: void sendNotificationToDevices(java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.HttpUrl: java.lang.String -deprecated_encodedQuery()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.polidea.rxandroidble2.internal.connection.ConnectionModule_MinimumMtuFactory: ConnectionModule_MinimumMtuFactory()
com.facebook.react.views.text.ReactTextView: void setLetterSpacing(float)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: ReactDrawerLayoutManager()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
io.reactivex.Observable: io.reactivex.Observable concatWith(io.reactivex.SingleSource)
com.facebook.react.bridge.DynamicFromMap: void recycle()
com.bleplx.BlePlxModule: void destroyClient(com.facebook.react.bridge.Promise)
okhttp3.internal.http2.Huffman$Node: Huffman$Node()
com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry: int compareTo(java.lang.Object)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])
io.reactivex.Flowable: io.reactivex.Flowable retryWhen(io.reactivex.functions.Function)
io.reactivex.Observable: io.reactivex.Observable startWithArray(java.lang.Object[])
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6: io.reactivex.functions.Function toLongWriteFailureOrError()
okhttp3.internal.connection.Exchange: void finishRequest()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl create(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
io.reactivex.Observable: io.reactivex.Observable switchMapMaybe(io.reactivex.functions.Function)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
okhttp3.RequestBody: okhttp3.RequestBody create(byte[])
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
com.facebook.yoga.YogaNative: void jni_YGNodeDeallocateJNI(long)
com.bleplx.BlePlxModule: void descriptorsForCharacteristic(int,com.facebook.react.bridge.Promise)
com.reactnativecommunity.asyncstorage.AsyncLocalStorageUtil: java.lang.String buildKeySelection(int)
okhttp3.internal.http2.Http2ExchangeCodec$Companion: okhttp3.Response$Builder readHttp2HeadersList(okhttp3.Headers,okhttp3.Protocol)
io.reactivex.Single: io.reactivex.Single timeout(long,java.util.concurrent.TimeUnit,io.reactivex.SingleSource)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactScrollView: void setDecelerationRate(float)
io.reactivex.Observable: io.reactivex.Observable window(java.util.concurrent.Callable)
com.polidea.rxandroidble2.internal.logger.LoggerSetup: com.polidea.rxandroidble2.internal.logger.LoggerSetup merge(com.polidea.rxandroidble2.LogOptions)
okhttp3.internal.cache2.Relay: void writeMetadata(long)
okhttp3.Handshake: java.util.List -deprecated_localCertificates()
com.facebook.react.views.modal.ReactModalHostView: void setEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
okhttp3.CacheControl: CacheControl(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.EventListener: void requestBodyStart(okhttp3.Call)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.animated.NativeAnimatedModule)
com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider_Factory: com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider newInstance()
io.reactivex.Single: io.reactivex.Single doOnSuccess(io.reactivex.functions.Consumer)
io.reactivex.Flowable: io.reactivex.Flowable fromArray(java.lang.Object[])
okhttp3.Cache$Companion: int readInt$okhttp(okio.BufferedSource)
okhttp3.internal.http1.Http1ExchangeCodec: boolean isChunked(okhttp3.Response)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
okhttp3.CacheControl: boolean -deprecated_noStore()
com.polidea.rxandroidble2.RxBleClient$State: RxBleClient$State(java.lang.String,int)
okhttp3.OkHttpClient: java.util.List connectionSpecs()
com.polidea.rxandroidble2.internal.operations.ScanOperationApi21: int errorCodeToBleErrorCode(int)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: int getAutoSizeStepGranularity(android.widget.TextView)
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)
com.facebook.react.bridge.ReactMarkerConstants: ReactMarkerConstants(java.lang.String,int,boolean)
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: AndroidPlatform$CustomTrustRootIndex(javax.net.ssl.X509TrustManager,java.lang.reflect.Method)
io.reactivex.Observable: io.reactivex.Observable repeatWhen(io.reactivex.functions.Function)
com.facebook.soloader.Elf32_Shdr: Elf32_Shdr()
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1: boolean matchesSocket(javax.net.ssl.SSLSocket)
com.polidea.rxandroidble2.scan.ScanSettings: ScanSettings(int,int,long,int,int,boolean,boolean)
okhttp3.internal.ws.WebSocketExtensions$Companion: WebSocketExtensions$Companion()
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
io.reactivex.internal.subscriptions.SubscriptionHelper: io.reactivex.internal.subscriptions.SubscriptionHelper[] values()
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker$ZipBackedInputDsoIterator: ExtractFromZipSoSource$ZipUnpacker$ZipBackedInputDsoIterator(com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker,com.facebook.soloader.ExtractFromZipSoSource$1)
com.facebook.react.bridge.MemoryPressure: MemoryPressure(java.lang.String,int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$5: void doInBackgroundGuarded(java.lang.Object[])
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void rstStream(int,okhttp3.internal.http2.ErrorCode)
okhttp3.internal.connection.RouteSelector$Companion: RouteSelector$Companion()
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String,java.lang.Throwable)
okhttp3.internal.http2.Http2Connection$Builder: int getPingIntervalMillis$okhttp()
okhttp3.internal.http2.Http2Reader: boolean nextFrame(boolean,okhttp3.internal.http2.Http2Reader$Handler)
com.ghostcommv2.MainApplication$reactNativeHost$1: boolean isNewArchEnabled()
okhttp3.internal.cache2.Relay: okio.Buffer getBuffer()
com.facebook.soloader.ElfFileChannel: long position()
okhttp3.Dispatcher: int getMaxRequests()
com.facebook.react.bridge.MemoryPressureListener: void handleMemoryPressure(int)
com.facebook.soloader.SysUtil: java.lang.String getBaseName(java.lang.String)
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactImageView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.react.fabric.CoreComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
com.polidea.rxandroidble2.internal.RxBleDeviceProvider_Factory: com.polidea.rxandroidble2.internal.RxBleDeviceProvider_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$5: io.reactivex.Observable apply(io.reactivex.Observable)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: AndroidSocketAdapter$Companion()
org.linusu.RNGetRandomValuesModule: java.lang.String getRandomBase64(int)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Single readCharacteristic(android.bluetooth.BluetoothGattCharacteristic)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$7$1: io.reactivex.Observable apply(io.reactivex.Observable)
com.facebook.react.runtime.ReactInstance: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getJSCallInvokerHolder()
okhttp3.internal.ws.RealWebSocket$Close: okio.ByteString getReason()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeVibrationSpec: void cancel()
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void fetchSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
okhttp3.EventListener: void dnsEnd(okhttp3.Call,java.lang.String,java.util.List)
com.polidea.rxandroidble2.scan.ScanFilter$1: com.polidea.rxandroidble2.scan.ScanFilter createFromParcel(android.os.Parcel)
okhttp3.internal.http2.Http2Reader$Companion: java.util.logging.Logger getLogger()
com.facebook.react.modules.core.JavaTimerManager: void createTimer(int,long,boolean)
okhttp3.internal.platform.android.AndroidSocketAdapter: boolean isSupported()
okhttp3.internal.http2.Http2Stream$FramingSource: okhttp3.Headers getTrailers()
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory: LocationServicesOkObservableApi23Factory(android.content.Context,com.polidea.rxandroidble2.internal.util.LocationServicesStatus)
com.facebook.react.bridge.CatalystInstance: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxy(java.net.Proxy)
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: void setTextLocales(android.widget.TextView,android.os.LocaleList)
com.facebook.react.uimanager.BaseViewManager: void setResponderMove(android.view.View,boolean)
okhttp3.internal.Util: int parseHexDigit(char)
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: android.database.sqlite.SQLiteDatabase get()
com.facebook.react.bridge.RuntimeScheduler: RuntimeScheduler(com.facebook.jni.HybridData)
com.facebook.react.views.image.ReactImageManager: void setSource(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withConnectTimeout(int,java.util.concurrent.TimeUnit)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: long read(okio.Buffer,long)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,android.widget.TextView,android.text.TextPaint)
com.facebook.react.modules.dialog.DialogModule: void onHostResume()
com.polidea.rxandroidble2.LogOptions: java.lang.String toString()
okhttp3.MediaType: java.lang.String subtype()
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentBuilder: com.polidea.rxandroidble2.internal.DeviceComponent build()
io.reactivex.Flowable: io.reactivex.subscribers.TestSubscriber test(long)
com.facebook.react.bridge.ReadableNativeMap$1: ReadableNativeMap$1(com.facebook.react.bridge.ReadableNativeMap,java.lang.String[],java.lang.Object[])
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: ReactHorizontalScrollContainerViewManager()
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(com.facebook.react.views.modal.ReactModalHostView)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()
io.reactivex.Single: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod[] values()
okhttp3.Handshake$Companion: Handshake$Companion()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: TurboModulePerfLogger()
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(int,boolean,okio.Buffer)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: void handleException(java.lang.Exception)
okhttp3.internal.cache2.FileOperator: void read(long,okio.Buffer,long)
io.reactivex.Observable: io.reactivex.Observable buffer(int,int)
okhttp3.Cache$urls$1: java.lang.String next()
okhttp3.Cache: void setWriteAbortCount$okhttp(int)
com.polidea.rxandroidble2.internal.util.ClientStateObservable$3$1: java.lang.Object apply(java.lang.Object)
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory: BackgroundExecutor$NamedThreadFactory(java.lang.String)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Observable setupIndication(android.bluetooth.BluetoothGattCharacteristic,com.polidea.rxandroidble2.NotificationSetupMode)
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function7)
okhttp3.internal.cache.DiskLruCache: void access$setMostRecentRebuildFailed$p(okhttp3.internal.cache.DiskLruCache,boolean)
okhttp3.MultipartReader$Part: okhttp3.Headers headers()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodeFromView(double,double)
com.polidea.rxandroidble2.internal.connection.ConnectionModule: com.polidea.rxandroidble2.internal.connection.ConnectionSubscriptionWatcher bindDisconnectActionSubscriptionWatcher(com.polidea.rxandroidble2.internal.connection.DisconnectAction)
com.polidea.rxandroidble2.internal.util.ScanRecordParser: int parseServiceUuid(byte[],int,int,int,java.util.List)
okhttp3.FormBody: long writeOrCountBytes(okio.BufferedSink,boolean)
com.facebook.react.bridge.JavaMethodWrapper: char returnTypeToChar(java.lang.Class)
com.facebook.react.bridge.JavaScriptExecutor: void close()
com.polidea.rxandroidble2.scan.ScanResult: ScanResult(com.polidea.rxandroidble2.RxBleDevice,int,long,com.polidea.rxandroidble2.scan.ScanCallbackType,com.polidea.rxandroidble2.scan.ScanRecord,com.polidea.rxandroidble2.scan.IsConnectable)
com.polidea.rxandroidble2.internal.RxBleDeviceImpl: int hashCode()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
okhttp3.MediaType$Companion: MediaType$Companion()
io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5$2: java.lang.Boolean apply(java.lang.Object)
com.polidea.rxandroidble2.RxBleDeviceServices: io.reactivex.Single getService(java.util.UUID)
io.reactivex.Observable: io.reactivex.Observable buffer(java.util.concurrent.Callable)
com.facebook.drawee.view.DraweeView: java.lang.Object getExtraData()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
okhttp3.OkHttpClient$Builder: okhttp3.internal.tls.CertificateChainCleaner getCertificateChainCleaner$okhttp()
com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider_Factory$InstanceHolder: com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider_Factory access$000()
com.facebook.soloader.DirectorySoSource: int loadLibrary(java.lang.String,int,android.os.StrictMode$ThreadPolicy)
com.facebook.fbreact.specs.NativeAppearanceSpec: NativeAppearanceSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.platform.AndroidPlatform: void logCloseableLeak(java.lang.String,java.lang.Object)
okhttp3.internal.HostnamesKt: boolean containsInvalidHostnameAsciiCodes(java.lang.String)
okhttp3.HttpUrl: java.lang.String topPrivateDomain()
com.facebook.react.fabric.SurfaceHandlerBinding: java.lang.String getModuleNameNative()
okhttp3.internal.http2.Http2Reader$Handler: void pushPromise(int,int,java.util.List)
okhttp3.internal.connection.RealConnectionPool: void put(okhttp3.internal.connection.RealConnection)
okhttp3.internal.http2.Http2Writer: void close()
com.facebook.react.views.textinput.ReactTextInputManager: void setOnKeyPress(com.facebook.react.views.textinput.ReactEditText,boolean)
okhttp3.internal.concurrent.TaskQueue: boolean getCancelActiveTask$okhttp()
androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.Dynamic getDynamic(int)
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager_Factory: NotificationAndIndicationManager_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: java.lang.String getName()
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: java.lang.String access$binarySearch(okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion,byte[],byte[][],int)
com.facebook.react.ReactRootView: void setIsFabric(boolean)
io.reactivex.Flowable: io.reactivex.Flowable onExceptionResumeNext(org.reactivestreams.Publisher)
io.reactivex.Observable: io.reactivex.Observable merge(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)
okhttp3.internal.connection.RouteSelector$Companion: java.lang.String getSocketHost(java.net.InetSocketAddress)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Observable observeConnectionParametersUpdates()
com.polidea.rxandroidble2.internal.connection.ConnectionModule_MinimumMtuFactory$InstanceHolder: com.polidea.rxandroidble2.internal.connection.ConnectionModule_MinimumMtuFactory access$000()
androidx.appcompat.widget.SwitchCompat: void setTextOnInternal(java.lang.CharSequence)
okhttp3.internal.http2.Http2Connection: long access$getAwaitPongsReceived$p(okhttp3.internal.http2.Http2Connection)
io.reactivex.Flowable: io.reactivex.Flowable buffer(org.reactivestreams.Publisher)
com.facebook.react.modules.vibration.VibrationModule: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy computeCandidate()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: long runOnce()
okhttp3.internal.http1.Http1ExchangeCodec: okio.Source openResponseBodySource(okhttp3.Response)
io.reactivex.Observable: io.reactivex.Observable window(io.reactivex.ObservableSource,io.reactivex.functions.Function,int)
com.facebook.soloader.NativeDeps: boolean initDeps(android.content.Context,boolean)
okhttp3.internal.concurrent.TaskQueue: boolean scheduleAndDecide$okhttp(okhttp3.internal.concurrent.Task,long,boolean)
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response)
io.reactivex.Flowable: io.reactivex.Flowable never()
com.bleplx.Event: com.bleplx.Event[] values()
com.bleplx.adapter.BleModule: void invalidate()
com.facebook.jni.CppException: CppException(java.lang.String)
okhttp3.Cache: void delete()
com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter_Factory: com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter get()
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.ReactContext)
com.bleplx.adapter.BleModule: void enable(java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
com.facebook.react.runtime.BridgelessAtomicRef$State: com.facebook.react.runtime.BridgelessAtomicRef$State valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstance: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.fabric.BindingImpl: void registerSurface(com.facebook.react.fabric.SurfaceHandlerBinding)
okhttp3.OkHttpClient$Builder: void setAuthenticator$okhttp(okhttp3.Authenticator)
okhttp3.OkHttpClient$Companion: OkHttpClient$Companion()
okhttp3.Cache: java.lang.String key(okhttp3.HttpUrl)
okio.ForwardingSink: java.lang.String toString()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.react.bridge.ReactContext: void onHostResume(android.app.Activity)
io.reactivex.Single: io.reactivex.Flowable concat(org.reactivestreams.Publisher,int)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void jniEnableCppLogging(com.facebook.react.perflogger.NativeModulePerfLogger)
okhttp3.Response: long -deprecated_receivedResponseAtMillis()
com.polidea.rxandroidble2.RxBleClientImpl: boolean isConnectRuntimePermissionGranted()
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: void startRecordingFps()
okhttp3.CertificatePinner$Builder: CertificatePinner$Builder()
okhttp3.internal.HostnamesKt: boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int)
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
com.facebook.react.bridge.ReadableMapKeySetIterator: boolean hasNextKey()
io.reactivex.Flowable: io.reactivex.Flowable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices: void appendCharacteristicNameHeader(java.lang.StringBuilder,android.bluetooth.BluetoothGattCharacteristic)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory factory(java.lang.String)
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices: java.lang.String createServiceType(android.bluetooth.BluetoothGattService)
okhttp3.internal.connection.RealConnection: okhttp3.Handshake access$getHandshake$p(okhttp3.internal.connection.RealConnection)
com.facebook.soloader.SoLoader: int getApplicationSoSourceFlags()
com.facebook.soloader.ElfZipFileChannel: long position()
io.reactivex.Observable: io.reactivex.Observable concat(io.reactivex.ObservableSource,io.reactivex.ObservableSource)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
com.polidea.rxandroidble2.internal.operations.ReadRssiOperation_Factory: ReadRssiOperation_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.internal.connection.Exchange: void responseHeadersEnd(okhttp3.Response)
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.StateWrapper getStateWrapper()
androidx.appcompat.widget.SwitchCompat: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
okhttp3.internal.connection.RealConnection: void onSettings(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Settings)
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.OkHttpClient$Builder: void setCertificateChainCleaner$okhttp(okhttp3.internal.tls.CertificateChainCleaner)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: JavaMethodWrapper$ArgumentExtractor()
com.facebook.jni.CppSystemErrorException: int getErrorCode()
com.polidea.rxandroidble2.RxBleClient: void updateLogOptions(com.polidea.rxandroidble2.LogOptions)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
okhttp3.internal.cache2.Relay: void setComplete(boolean)
com.facebook.jni.DestructorThread$DestructorList: void drop(com.facebook.jni.DestructorThread$Destructor)
com.facebook.soloader.SoLoader: boolean initEnableConfig(android.content.Context)
io.reactivex.Flowable: io.reactivex.Flowable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer)
com.facebook.react.turbomodule.core.TurboModuleInteropUtils: java.lang.String convertReturnClassToJniType(java.lang.String,java.lang.String,java.lang.Class)
com.facebook.react.bridge.JavaOnlyArray: java.lang.String toString()
okhttp3.ResponseBody: java.io.InputStream byteStream()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeTimingSpec: void setSendIdleEvents(boolean)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
com.polidea.rxandroidble2.internal.operations.ConnectOperation: io.reactivex.SingleTransformer wrapWithTimeoutWhenNotAutoconnecting()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightPercentJNI(long,float)
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus()
io.reactivex.internal.util.HashMapSupplier: io.reactivex.internal.util.HashMapSupplier[] values()
com.facebook.react.turbomodule.core.NativeModuleSoLoader: NativeModuleSoLoader()
com.facebook.react.modules.network.NetworkingModule: void addResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
io.reactivex.internal.disposables.EmptyDisposable: io.reactivex.internal.disposables.EmptyDisposable valueOf(java.lang.String)
com.facebook.react.bridge.JavaScriptContextHolder: long get()
io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
okhttp3.CertificatePinner$Pin: boolean matchesHostname(java.lang.String)
com.polidea.rxandroidble2.internal.connection.MtuWatcher: MtuWatcher(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,int)
com.facebook.react.uimanager.BaseViewManager: void setTranslateX(android.view.View,float)
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData initHybrid()
com.facebook.react.bridge.ReactApplicationContext: ReactApplicationContext(android.content.Context)
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
io.reactivex.internal.functions.Functions$HashSetCallable: io.reactivex.internal.functions.Functions$HashSetCallable[] values()
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.module.model.ReactModuleInfo,javax.inject.Provider)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
com.polidea.rxandroidble2.scan.ScanSettings$Builder: ScanSettings$Builder()
okhttp3.HttpUrl: java.lang.String -deprecated_encodedUsername()
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.Headers trailers()
com.facebook.react.views.textinput.ReactEditText: void setGravityVertical(int)
com.facebook.soloader.UnpackingSoSource$DsoManifest: void write(java.io.DataOutput)
com.facebook.react.views.modal.ReactModalHostView: void setAnimationType(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.Arguments$1: int size()
com.polidea.rxandroidble2.internal.util.BluetoothManagerWrapper: java.util.List getConnectedPeripherals()
io.reactivex.Observable: java.lang.Object blockingSingle()
com.facebook.react.views.textinput.ReactTextInputManager: void setAutofillHints(com.facebook.react.views.textinput.ReactEditText,java.lang.String[])
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult: com.polidea.rxandroidble2.scan.IsConnectable isConnectable()
okhttp3.FormBody$Builder: okhttp3.FormBody build()
okhttp3.EventListener: void connectEnd(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
io.reactivex.Flowable: io.reactivex.Flowable ofType(java.lang.Class)
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi21_Factory: com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi21 newInstance(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator,com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator,com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter)
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
okhttp3.internal.platform.BouncyCastlePlatform: BouncyCastlePlatform(kotlin.jvm.internal.DefaultConstructorMarker)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$7: ScanSettingsEmulator$7(com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator)
com.facebook.soloader.Api18TraceUtils: Api18TraceUtils()
com.polidea.rxandroidble2.ClientComponent$ClientModule: java.lang.String[][] provideRecommendedScanRuntimePermissionNames(int,int,boolean)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodes(double,double)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
okhttp3.Cache$CacheResponseBody$1: void close()
okhttp3.Request$Builder: okhttp3.Request$Builder put(okhttp3.RequestBody)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeResources(int[])
okhttp3.internal.http2.Http2Connection: void start(boolean)
com.polidea.rxandroidble2.scan.ScanFilter$Builder: com.polidea.rxandroidble2.scan.ScanFilter$Builder setManufacturerData(int,byte[])
okhttp3.internal.http.RealResponseBody: long contentLength()
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(com.facebook.react.views.view.ReactViewGroup,int)
okhttp3.internal.http2.Http2Connection$Listener$Companion: Http2Connection$Listener$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
io.reactivex.Flowable: io.reactivex.Flowable timeout(long,java.util.concurrent.TimeUnit,org.reactivestreams.Publisher)
com.facebook.react.modules.intent.IntentModule: void openSettings(com.facebook.react.bridge.Promise)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.http1.HeadersReader access$getHeadersReader$p(okhttp3.internal.http1.Http1ExchangeCodec)
com.facebook.react.uimanager.ViewManager: void trimMemory()
com.facebook.react.uimanager.UIManagerModule: void removeRootView(int)
okhttp3.internal.http2.Http2Stream$FramingSource: void close()
com.polidea.rxandroidble2.internal.scan.ScanRecordImplCompat: java.lang.String getDeviceName()
io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,int)
com.facebook.react.bridge.ObjectAlreadyConsumedException: ObjectAlreadyConsumedException(java.lang.String)
okhttp3.internal.platform.Android10Platform: boolean isCleartextTrafficPermitted(java.lang.String)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void data(boolean,int,okio.BufferedSource,int)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
okhttp3.internal.http.HttpHeaders: java.lang.String readQuotedString(okio.Buffer)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
kotlin.internal.jdk7.JDK7PlatformImplementations: JDK7PlatformImplementations()
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: CatalystInstanceImpl$BridgeCallback(com.facebook.react.bridge.CatalystInstanceImpl)
com.polidea.rxandroidble2.internal.operations.CharacteristicReadOperation: io.reactivex.Single getCallback(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback)
com.facebook.react.runtime.hermes.HermesInstance$Companion: com.facebook.jni.HybridData initHybrid()
okhttp3.Request$Builder: okhttp3.Request$Builder url(java.net.URL)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
okhttp3.internal.platform.ConscryptPlatform$Companion: ConscryptPlatform$Companion()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
okhttp3.internal.platform.BouncyCastlePlatform$Companion: okhttp3.internal.platform.BouncyCastlePlatform buildIfSupported()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: void isActive(com.facebook.react.bridge.Promise)
com.polidea.rxandroidble2.internal.util.DisposableUtil$2: void onError(java.lang.Throwable)
com.facebook.react.views.textinput.ReactTextInputManager: void setAllowFontScaling(com.facebook.react.views.textinput.ReactEditText,boolean)
okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)
io.reactivex.Observable: io.reactivex.Observable merge(java.lang.Iterable,int,int)
okhttp3.MultipartReader: MultipartReader(okhttp3.ResponseBody)
okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)
io.reactivex.Observable: io.reactivex.Observable ambArray(io.reactivex.ObservableSource[])
com.facebook.react.uimanager.LayoutShadowNode: void setRowGap(float)
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecute(java.lang.Object)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.widget.ProgressBar createProgressBar(android.content.Context,int)
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread()
com.facebook.soloader.Elf32_Ehdr: Elf32_Ehdr()
com.bleplx.adapter.BleModule: void isDeviceConnected(java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
okhttp3.internal.Util$threadFactory$1: Util$threadFactory$1(java.lang.String,boolean)
okhttp3.internal.ws.WebSocketExtensions: int hashCode()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
androidx.appcompat.widget.SwitchCompat: float getThumbPosition()
io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long)
com.polidea.rxandroidble2.internal.operations.ScanOperationApi21$1: void onScanFailed(int)
androidx.appcompat.widget.AppCompatButton: void setEmojiCompatEnabled(boolean)
androidx.appcompat.widget.SearchView: void setInputType(int)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel fromInt(int)
io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.polidea.rxandroidble2.internal.logger.LoggerUtil: java.lang.String commonMacMessage(android.bluetooth.BluetoothGatt)
com.polidea.rxandroidble2.ClientComponent$ClientModule: com.polidea.rxandroidble2.RxBleClient bindRxBleClient(com.polidea.rxandroidble2.RxBleClientImpl)
okhttp3.EventListener: void connectionReleased(okhttp3.Call,okhttp3.Connection)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder callTimeout(long,java.util.concurrent.TimeUnit)
okhttp3.internal.http2.Hpack: java.util.Map getNAME_TO_FIRST_INDEX()
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$4: java.lang.Object apply(java.lang.Object)
com.facebook.react.ReactActivity: void requestPermissions(java.lang.String[],int,com.facebook.react.modules.core.PermissionListener)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsAndroidWearFactory: boolean provideIsAndroidWear(android.content.Context,int)
okhttp3.internal.Util$asFactory$1: okhttp3.EventListener create(okhttp3.Call)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okio.BufferedSource,okhttp3.MediaType,long)
io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit)
okhttp3.internal.connection.RealConnection: void access$setSocket$p(okhttp3.internal.connection.RealConnection,java.net.Socket)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: void close()
com.facebook.react.uimanager.RootViewManager: android.view.ViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.polidea.rxandroidble2.scan.ScanRecord: byte[] getBytes()
okhttp3.CertificatePinner$Builder: java.util.List getPins()
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$6: java.lang.Object apply(java.lang.Object)
com.facebook.react.bridge.JSIModuleRegistry: void notifyJSInstanceDestroy()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
okhttp3.internal.platform.Jdk9Platform$Companion: okhttp3.internal.platform.Jdk9Platform buildIfSupported()
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
com.facebook.fbreact.specs.NativeBlobModuleSpec: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
okhttp3.internal.concurrent.TaskRunner$RealBackend: TaskRunner$RealBackend(java.util.concurrent.ThreadFactory)
androidx.appcompat.widget.SwitchCompat: int getSwitchMinWidth()
com.facebook.react.bridge.BaseJavaModule: BaseJavaModule()
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideIllegalOperationHandlerFactory: ConnectionModule_ProvideIllegalOperationHandlerFactory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.views.image.ReactImageView: void setDefaultSource(java.lang.String)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideRecommendedScanRuntimePermissionNamesFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideRecommendedScanRuntimePermissionNamesFactory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthPercentJNI(long,float)
okhttp3.internal.ws.RealWebSocket: boolean writeOneFrame$okhttp()
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(android.view.View,java.lang.Integer)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReadableNativeMap: java.util.Iterator getEntryIterator()
okhttp3.internal.concurrent.TaskRunner: void kickCoordinator$okhttp(okhttp3.internal.concurrent.TaskQueue)
com.polidea.rxandroidble2.internal.serialization.RxBleThreadFactory: RxBleThreadFactory()
com.facebook.react.modules.network.NetworkingModule: okhttp3.Headers extractHeaders(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
androidx.core.app.ActivityCompat$Api16Impl: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: java.lang.String getName()
com.facebook.react.fabric.BindingImpl: void setConstraints(int,float,float,float,float,float,float,boolean,boolean)
okhttp3.internal.connection.RealCall: okhttp3.Response execute()
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,long)
io.reactivex.Observable: io.reactivex.Observable window(io.reactivex.ObservableSource,io.reactivex.functions.Function)
okhttp3.internal.ws.WebSocketReader: void readMessage()
com.polidea.rxandroidble2.exceptions.BleCannotSetCharacteristicNotificationException: BleCannotSetCharacteristicNotificationException(android.bluetooth.BluetoothGattCharacteristic)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideRecommendedConnectRuntimePermissionNamesFactory: java.lang.String[][] provideRecommendedConnectRuntimePermissionNames(int,int)
io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
com.polidea.rxandroidble2.RxBleDeviceServices$2: RxBleDeviceServices$2(com.polidea.rxandroidble2.RxBleDeviceServices,java.util.UUID)
com.facebook.react.bridge.queue.MessageQueueThread: boolean isOnThread()
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi18_Factory: com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi18 get()
okhttp3.ResponseBody$Companion: ResponseBody$Companion()
com.facebook.react.uimanager.UIManagerModule: void stopSurface(int)
okhttp3.internal.http2.Http2ExchangeCodec: java.util.List access$getHTTP_2_SKIPPED_RESPONSE_HEADERS$cp()
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
io.reactivex.Single: io.reactivex.observers.TestObserver test(boolean)
io.reactivex.Observable: io.reactivex.Observable skip(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
com.facebook.react.bridge.JavaOnlyMap$1: java.lang.String nextKey()
com.facebook.react.uimanager.UIManagerModule: void sendAccessibilityEvent(int,int)
okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.facebook.react.views.text.ReactTextViewManager: void setPadding(com.facebook.react.views.text.ReactTextView,int,int,int,int)
okhttp3.internal.platform.Jdk9Platform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.bleplx.adapter.BleModule: void safeReadCharacteristicForDevice(com.bleplx.adapter.Characteristic,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType valueOf(java.lang.String)
com.polidea.rxandroidble2.internal.serialization.QueueSemaphore: void awaitRelease()
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create$default(okhttp3.ResponseBody$Companion,okio.BufferedSource,okhttp3.MediaType,long,int,java.lang.Object)
com.polidea.rxandroidble2.internal.ScanResultInterface: long getTimestampNanos()
com.facebook.react.fabric.SurfaceHandlerBinding: int getSurfaceIdNative()
kotlin.jvm.internal.MutablePropertyReference0: java.lang.Object getDelegate()
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$4: void run()
com.polidea.rxandroidble2.internal.util.BleConnectionCompat: android.bluetooth.BluetoothGatt connectGatt(android.bluetooth.BluetoothDevice,boolean,android.bluetooth.BluetoothGattCallback)
com.facebook.react.uimanager.UIManagerModule: void invalidateNodeLayout(int)
com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker_Factory: IllegalOperationChecker_Factory(bleshadow.javax.inject.Provider)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.interfaces.TurboModule getTurboJavaModule(java.lang.String)
okhttp3.CacheControl: java.lang.String toString()
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedNodesManager getNodesManager()
com.facebook.react.uimanager.BaseViewManager: void setBackgroundColor(android.view.View,int)
com.facebook.react.bridge.Dynamic: boolean asBoolean()
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: Android10SocketAdapter$Companion()
com.facebook.react.bridge.FallbackJSBundleLoader: com.facebook.react.bridge.JSBundleLoader getDelegateLoader()
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: NativeJSCHeapCaptureSpec(com.facebook.react.bridge.ReactApplicationContext)
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices_Factory: com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices newInstance(com.polidea.rxandroidble2.internal.util.CharacteristicPropertiesParser)
okhttp3.internal.platform.ConscryptPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
io.reactivex.Observable: io.reactivex.Observable concatMapSingleDelayError(io.reactivex.functions.Function)
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl$1: java.lang.Object get()
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder expiresAt(long)
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: com.polidea.rxandroidble2.internal.operations.ConnectOperation connectOperation()
com.facebook.react.views.scroll.ReactScrollView: void setSnapInterval(int)
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: DiskLruCache$Entry$newSource$1(okhttp3.internal.cache.DiskLruCache$Entry,okio.Source,okio.Source)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLineHeight(float)
okhttp3.OkHttpClient$Builder: boolean getRetryOnConnectionFailure$okhttp()
com.polidea.rxandroidble2.internal.connection.MtuWatcher: void accept(java.lang.Integer)
com.facebook.react.bridge.JavaMethodWrapper: JavaMethodWrapper(com.facebook.react.bridge.JavaModuleWrapper,java.lang.reflect.Method,boolean)
io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function)
com.polidea.rxandroidble2.internal.operations.LegacyScanOperation$1: LegacyScanOperation$1(com.polidea.rxandroidble2.internal.operations.LegacyScanOperation,io.reactivex.ObservableEmitter)
okhttp3.internal.ws.RealWebSocket: void awaitTermination(long,java.util.concurrent.TimeUnit)
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(android.view.ViewGroup)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollEventThrottle(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
io.reactivex.Flowable: io.reactivex.Single any(io.reactivex.functions.Predicate)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
okhttp3.EventListener: void requestFailed(okhttp3.Call,java.io.IOException)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
okhttp3.internal.connection.RealConnection$connectTls$1: java.lang.Object invoke()
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: long read(okio.Buffer,long)
okhttp3.internal.http2.Settings: int get(int)
okhttp3.internal.connection.RouteSelector$Selection: RouteSelector$Selection(java.util.List)
okhttp3.FormBody: int -deprecated_size()
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider access$900(com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl)
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager: io.reactivex.functions.Function scheduleActualDiscoveryWithTimeout()
com.facebook.soloader.SysUtil: void deleteOrThrow(java.io.File)
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.Collection getModules()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
okhttp3.internal.platform.android.SocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
com.polidea.rxandroidble2.internal.RxBleDeviceImpl_Factory: com.polidea.rxandroidble2.internal.RxBleDeviceImpl newInstance(android.bluetooth.BluetoothDevice,com.polidea.rxandroidble2.internal.connection.Connector,com.jakewharton.rxrelay2.BehaviorRelay,com.polidea.rxandroidble2.internal.util.CheckerConnectPermission)
okhttp3.Cache$Entry: boolean isHttps()
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
io.reactivex.BackpressureOverflowStrategy: io.reactivex.BackpressureOverflowStrategy valueOf(java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext)
com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider_Factory$InstanceHolder: BluetoothGattProvider_Factory$InstanceHolder()
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$6: com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult apply(com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult)
okhttp3.internal.connection.RealConnection: void connect(int,int,int,int,boolean,okhttp3.Call,okhttp3.EventListener)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,boolean)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableIndicationValueFactory$InstanceHolder: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableIndicationValueFactory access$000()
com.polidea.rxandroidble2.internal.DeviceModule_ProvideBluetoothDeviceFactory: DeviceModule_ProvideBluetoothDeviceFactory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.internal.cache.DiskLruCache$Entry: int getLockingSourceCount$okhttp()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.lang.Object)
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes[] values()
com.facebook.react.uimanager.UIManagerModule: void initialize()
com.polidea.rxandroidble2.internal.cache.DeviceComponentWeakReference: boolean equals(java.lang.Object)
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher[],io.reactivex.functions.Function)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.polidea.rxandroidble2.internal.connection.ConnectionComponent$Builder: com.polidea.rxandroidble2.internal.connection.ConnectionComponent$Builder operationTimeout(com.polidea.rxandroidble2.Timeout)
com.facebook.react.modules.dialog.AlertFragment: AlertFragment()
com.polidea.rxandroidble2.internal.logger.LoggerUtil: void logOperationRemoved(com.polidea.rxandroidble2.internal.operations.Operation)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$11: com.polidea.rxandroidble2.exceptions.BleException provideException(android.os.DeadObjectException)
okhttp3.internal.platform.android.Android10SocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()
com.polidea.rxandroidble2.scan.ScanFilter$Builder: com.polidea.rxandroidble2.scan.ScanFilter build()
androidx.appcompat.app.AppCompatActivity: void setContentView(int)
okhttp3.internal.cache.DiskLruCache$snapshots$1: void remove()
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: com.facebook.soloader.ExtractFromZipSoSource$ZipDso[] ensureDsos()
okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentBuilder: com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentBuilder autoConnect(boolean)
com.facebook.react.views.image.ReactImageManager: void setResizeMethod(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$5: ScanSettingsEmulator$5(com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator)
com.facebook.soloader.FileLocker: FileLocker(java.io.File,boolean)
okhttp3.Address: java.lang.String toString()
com.bleplx.adapter.BleModule: void lambda$requestConnectionPriorityForDevice$2(com.bleplx.adapter.utils.SafeExecutor,java.lang.String,java.lang.Throwable)
com.facebook.react.jscexecutor.JSCExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
okhttp3.Headers$Builder: java.util.List getNamesAndValues$okhttp()
okhttp3.internal.authenticator.JavaNetAuthenticator: java.net.InetAddress connectToInetAddress(java.net.Proxy,okhttp3.HttpUrl,okhttp3.Dns)
androidx.fragment.app.FragmentActivity: void onMultiWindowModeChanged(boolean)
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String getColorScheme()
com.facebook.soloader.NativeLibrary: boolean loadLibraries()
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection build()
io.reactivex.Single: io.reactivex.Single onErrorResumeNext(io.reactivex.Single)
com.polidea.rxandroidble2.internal.util.BluetoothManagerWrapper_Factory: java.lang.Object get()
com.facebook.react.TurboReactPackage: java.util.List getViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideTargetSdkFactory: java.lang.Object get()
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String getName()
okhttp3.RequestBody$Companion$asRequestBody$1: long contentLength()
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$4: boolean test(com.polidea.rxandroidble2.internal.util.ByteAssociation)
io.reactivex.Single: io.reactivex.Single using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer)
okhttp3.internal.http2.ErrorCode$Companion: ErrorCode$Companion()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
com.facebook.drawee.view.GenericDraweeView: void setInflateHierarchyListener(com.facebook.drawee.view.GenericDraweeView$InflateHierarchyListener)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.DynamicFromMap create(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread(java.lang.String)
io.reactivex.internal.disposables.DisposableHelper: io.reactivex.internal.disposables.DisposableHelper valueOf(java.lang.String)
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$1: void accept(java.lang.Object)
com.polidea.rxandroidble2.internal.connection.ConnectionModule: com.polidea.rxandroidble2.internal.connection.ConnectionSubscriptionWatcher bindMtuWatcherSubscriptionWatcher(com.polidea.rxandroidble2.internal.connection.MtuWatcher)
com.polidea.rxandroidble2.internal.logger.LoggerUtil: void logOperationSkippedBecauseDisposedWhenAboutToRun(com.polidea.rxandroidble2.internal.operations.Operation)
com.facebook.react.bridge.ReactContext$1: ReactContext$1(com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.LifecycleEventListener)
okhttp3.Address: int hashCode()
com.polidea.rxandroidble2.internal.operations.ScanOperationApi18: void stopScan(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,java.lang.Object)
okhttp3.internal.connection.Exchange: void detachWithViolence()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.Boolean isRunningScreenshotTest()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void dismissRedbox()
io.reactivex.Single: void subscribe(io.reactivex.SingleObserver)
com.facebook.react.uimanager.ViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.uimanager.ViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl_Factory: com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl newInstance(com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueue,com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,android.bluetooth.BluetoothGatt,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,com.polidea.rxandroidble2.internal.operations.OperationsProvider,bleshadow.javax.inject.Provider,io.reactivex.Scheduler,com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker)
io.reactivex.Observable: io.reactivex.Observable flatMapSingle(io.reactivex.functions.Function)
com.facebook.soloader.UnpackingSoSource: void writeState(java.io.File,byte)
com.polidea.rxandroidble2.RxBleConnection$WriteOperationRetryStrategy$LongWriteFailure: int getBatchIndex()
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter getDefaultEventEmitter()
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
io.reactivex.Single: io.reactivex.Observable flatMapObservable(io.reactivex.functions.Function)
com.facebook.soloader.NativeDepsUnpacker: NativeDepsUnpacker()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleWithBorderFilter(android.graphics.Bitmap,int,int,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: void jniSetSourceURL(java.lang.String)
io.reactivex.Observable: io.reactivex.Observable zipWith(io.reactivex.ObservableSource,io.reactivex.functions.BiFunction,boolean,int)
okhttp3.internal.connection.RouteDatabase: void connected(okhttp3.Route)
com.polidea.rxandroidble2.internal.scan.ScanRecordImplCompat: java.util.List getServiceSolicitationUuids()
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueue: io.reactivex.Observable queue(com.polidea.rxandroidble2.internal.operations.Operation)
com.polidea.rxandroidble2.scan.ScanRecord: byte[] getManufacturerSpecificData(int)
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager: com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlay createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.JSExceptionHandler)
com.polidea.rxandroidble2.internal.util.ObservableUtil: io.reactivex.Observable justOnNext(java.lang.Object)
okhttp3.Cache: int networkCount()
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importTypeArray()
com.polidea.rxandroidble2.internal.logger.LoggerSetup: java.lang.String toString()
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
okhttp3.internal.Util: java.lang.String[] intersect(java.lang.String[],java.lang.String[],java.util.Comparator)
okhttp3.internal.http.ExchangeCodec: void cancel()
okhttp3.CacheControl: boolean noStore()
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: boolean isDisabledExtractNativeLibs(android.content.Context)
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
com.polidea.rxandroidble2.internal.util.ScanRecordParser_Factory: com.polidea.rxandroidble2.internal.util.ScanRecordParser newInstance()
com.polidea.rxandroidble2.internal.DeviceModule_ProvideConnectionStateRelayFactory: com.polidea.rxandroidble2.internal.DeviceModule_ProvideConnectionStateRelayFactory create()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignItemsJNI(long)
okhttp3.Cache: Cache(java.io.File,long,okhttp3.internal.io.FileSystem)
okhttp3.internal.concurrent.Task: java.lang.String getName()
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher: void notifyNativeMtuChangedCallback(android.bluetooth.BluetoothGatt,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
okhttp3.CookieJar$Companion$NoCookies: CookieJar$Companion$NoCookies()
io.reactivex.Flowable: io.reactivex.Flowable subscribeOn(io.reactivex.Scheduler)
com.polidea.rxandroidble2.internal.DeviceModule_ProvidesConnectTimeoutConfFactory: DeviceModule_ProvidesConnectTimeoutConfFactory(bleshadow.javax.inject.Provider)
okhttp3.internal.http2.Http2Connection: void access$failConnection(okhttp3.internal.http2.Http2Connection,java.io.IOException)
okhttp3.internal.platform.ConscryptPlatform: ConscryptPlatform(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: Http1ExchangeCodec$FixedLengthSource(okhttp3.internal.http1.Http1ExchangeCodec,long)
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()
com.facebook.soloader.Elf64_Ehdr: Elf64_Ehdr()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setStreamId(int)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextAlign(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int,boolean,boolean)
okhttp3.internal.http2.Http2Stream$FramingSource: void setFinished$okhttp(boolean)
io.reactivex.Flowable: io.reactivex.Flowable mergeWith(io.reactivex.SingleSource)
com.facebook.react.bridge.UnexpectedNativeTypeException: UnexpectedNativeTypeException(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.NativeModule: java.lang.String getName()
okhttp3.internal.cache.DiskLruCache$Snapshot: void close()
okhttp3.Address: javax.net.ssl.SSLSocketFactory -deprecated_sslSocketFactory()
okhttp3.internal.concurrent.TaskQueue: TaskQueue(okhttp3.internal.concurrent.TaskRunner,java.lang.String)
com.polidea.rxandroidble2.RxBleDeviceServices$1: boolean test(android.bluetooth.BluetoothGattService)
okhttp3.EventListener: void secureConnectStart(okhttp3.Call)
okhttp3.internal.http2.Settings: void clear()
com.facebook.react.bridge.JSIModuleType: JSIModuleType(java.lang.String,int)
com.facebook.soloader.FileLocker: com.facebook.soloader.FileLocker lock(java.io.File)
okhttp3.internal.http2.Hpack$Reader: int maxDynamicTableByteCount()
com.facebook.react.views.view.ReactViewManager: void setOpacity(com.facebook.react.views.view.ReactViewGroup,float)
com.polidea.rxandroidble2.RxBleClientImpl: boolean isScanRuntimePermissionGranted()
com.polidea.rxandroidble2.internal.operations.ReadRssiOperation_Factory: java.lang.Object get()
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: void close()
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
com.polidea.rxandroidble2.internal.operations.DisconnectOperation_Factory: com.polidea.rxandroidble2.internal.operations.DisconnectOperation newInstance(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider,java.lang.String,android.bluetooth.BluetoothManager,io.reactivex.Scheduler,com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration,com.polidea.rxandroidble2.internal.connection.ConnectionStateChangeListener)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$2$1: ScanSettingsEmulator$2$1(com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$2)
okhttp3.RequestBody$Companion$asRequestBody$1: okhttp3.MediaType contentType()
com.facebook.soloader.NativeLoaderToSoLoaderDelegate: java.lang.String getLibraryPath(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable publish(io.reactivex.functions.Function,int)
com.facebook.jni.HybridData: boolean isValid()
okhttp3.HttpUrl: java.lang.String queryParameter(java.lang.String)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: Http1ExchangeCodec$ChunkedSource(okhttp3.internal.http1.Http1ExchangeCodec,okhttp3.HttpUrl)
com.facebook.react.animated.NativeAnimatedModule: void removeAnimatedEventFromView(double,java.lang.String,double)
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.polidea.rxandroidble2.internal.util.ClientStateObservable_Factory: com.polidea.rxandroidble2.internal.util.ClientStateObservable get()
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.internal.io.FileSystem$Companion: FileSystem$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream newStream(java.util.List,boolean)
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi18_Factory$InstanceHolder: com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi18_Factory access$000()
com.facebook.soloader.NativeDepsUnpacker: boolean ensureDirExists(java.io.File)
io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexWrapJNI(long)
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl: io.reactivex.Observable queue(com.polidea.rxandroidble2.internal.operations.Operation)
okhttp3.CertificatePinner$Pin: java.lang.String getHashAlgorithm()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void sendBinary(java.lang.String,double)
com.facebook.react.animated.NativeAnimatedModule: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax: io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax[] values()
com.polidea.rxandroidble2.internal.QueueOperation: com.polidea.rxandroidble2.exceptions.BleException provideException(android.os.DeadObjectException)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDecelerationRate(float)
com.facebook.soloader.ApkSoSource$ApkUnpacker: boolean shouldExtract(java.util.zip.ZipEntry,java.lang.String)
com.himelbrand.ble.peripheral.RNBLEModule: void stop()
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: java.lang.String getName()
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice[] values()
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,io.reactivex.Scheduler)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter: io.reactivex.Observable awaitAdapterNotUsable(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,io.reactivex.Observable)
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.uimanager.UIManagerModule: void onHostDestroy()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator getAuthenticator$okhttp()
com.facebook.soloader.SoLoader: void assertInitialized()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableMap asMap()
io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
io.reactivex.Flowable: io.reactivex.Single toList(java.util.concurrent.Callable)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.polidea.rxandroidble2.internal.QueueOperation: int compareTo(java.lang.Object)
okhttp3.internal.http2.Http2Connection: java.util.Map getStreams$okhttp()
com.reactnativecommunity.asyncstorage.AsyncStorageExpoMigration: boolean isAsyncStorageDatabaseCreated(android.content.Context)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object getReactTextUpdate(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.common.mapbuffer.MapBuffer)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource)
okhttp3.Response: boolean isRedirect()
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.polidea.rxandroidble2.internal.operations.ReadRssiOperation: java.lang.String toString()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.polidea.rxandroidble2.exceptions.BleGattException: com.polidea.rxandroidble2.exceptions.BleGattOperationType getBleGattOperationType()
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
okhttp3.OkHttpClient: long minWebSocketMessageToCompress()
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.lang.String)
okhttp3.internal.ws.MessageDeflater: void close()
io.reactivex.Observable: io.reactivex.Observable observeOn(io.reactivex.Scheduler,boolean)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator_Factory: ScanSettingsEmulator_Factory(bleshadow.javax.inject.Provider)
okhttp3.internal.http2.Http2Connection$Builder: void setPingIntervalMillis$okhttp(int)
com.polidea.rxandroidble2.internal.ScanResultInterface: java.lang.String getDeviceName()
okhttp3.HttpUrl: int -deprecated_querySize()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerView: void setRemoveClippedSubviews(boolean)
io.reactivex.Observable: io.reactivex.Observable doOnComplete(io.reactivex.functions.Action)
com.facebook.react.uimanager.LayoutShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$7: io.reactivex.Observable apply(io.reactivex.Observable)
com.polidea.rxandroidble2.helpers.ValueInterpreter: java.lang.Integer getIntValue(byte[],int,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setEnabled(boolean)
com.facebook.soloader.SysUtil: com.facebook.soloader.FileLocker getFileLocker(java.io.File,boolean)
okhttp3.Dispatcher: Dispatcher(java.util.concurrent.ExecutorService)
com.facebook.react.bridge.BaseJavaModule: java.util.Map getConstants()
okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.time.Instant)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)
okhttp3.internal.http2.PushObserver$Companion: PushObserver$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.view.ReactViewManager: void setNeedsOffscreenAlphaCompositing(com.facebook.react.views.view.ReactViewGroup,boolean)
io.reactivex.Observable: io.reactivex.Observable generate(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer,io.reactivex.functions.Consumer)
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit valueOf(java.lang.String)
io.reactivex.Single: io.reactivex.Flowable mergeDelayError(io.reactivex.SingleSource,io.reactivex.SingleSource)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$1: RxBleConnectionImpl$1(com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl,java.util.UUID)
okhttp3.CertificatePinner: okhttp3.internal.tls.CertificateChainCleaner getCertificateChainCleaner$okhttp()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
okhttp3.internal.http2.Http2Writer: void writeContinuationFrames(int,long)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$11: io.reactivex.functions.Action clearNativeCallbackReferenceAction()
okhttp3.FormBody: java.lang.String encodedName(int)
okhttp3.internal.ws.RealWebSocket: void initReaderAndWriter(java.lang.String,okhttp3.internal.ws.RealWebSocket$Streams)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)
com.facebook.react.bridge.CatalystInstanceImpl: void destroy()
okhttp3.internal.http.HttpMethod: boolean invalidatesCache(java.lang.String)
com.bleplx.adapter.BleModule: java.util.List descriptorsForDevice(java.lang.String,java.lang.String,java.lang.String)
com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator: InternalScanResultCreator(com.polidea.rxandroidble2.internal.util.ScanRecordParser,com.polidea.rxandroidble2.internal.scan.IsConnectableChecker)
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23_Factory: LocationServicesStatusApi23_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.Challenge: java.util.Map authParams()
io.reactivex.Flowable: io.reactivex.Flowable concatEager(org.reactivestreams.Publisher)
okhttp3.WebSocket: long queueSize()
okhttp3.Cache$urls$1: boolean hasNext()
io.reactivex.Flowable: io.reactivex.Flowable doAfterNext(io.reactivex.functions.Consumer)
com.facebook.imagepipeline.memory.NativeMemoryChunk: long nativeAllocate(int)
androidx.fragment.app.FragmentActivity: androidx.loader.app.LoaderManager getSupportLoaderManager()
com.facebook.react.views.switchview.ReactSwitchManager: ReactSwitchManager()
io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,long)
com.polidea.rxandroidble2.internal.connection.DisconnectAction_Factory: java.lang.Object get()
okhttp3.ConnectionSpec$Builder: void setSupportsTlsExtensions$okhttp(boolean)
com.facebook.react.bridge.JavaOnlyArray: double getDouble(int)
com.facebook.react.bridge.JavaOnlyMap: void putString(java.lang.String,java.lang.String)
io.reactivex.Observable: io.reactivex.Observable debounce(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.views.image.ReactImageManager: void setResizeMode(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.fabric.BindingImpl: void startSurfaceWithConstraints(int,java.lang.String,com.facebook.react.bridge.NativeMap,float,float,float,float,float,float,boolean,boolean)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(android.view.View)
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl$1: void run()
com.polidea.rxandroidble2.scan.ScanFilter: byte[] getManufacturerData()
com.facebook.react.ReactActivity: void onNewIntent(android.content.Intent)
io.reactivex.Flowable: io.reactivex.Flowable switchMapSingleDelayError(io.reactivex.functions.Function)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
io.reactivex.Observable: io.reactivex.Observable concatMapEager(io.reactivex.functions.Function)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: NativeRoundingFilter()
com.polidea.rxandroidble2.RxBleAdapterStateObservable$1$2: RxBleAdapterStateObservable$1$2(com.polidea.rxandroidble2.RxBleAdapterStateObservable$1,android.content.BroadcastReceiver)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodeToView(double,double)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: NativeFileReaderModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.Cache: Cache(java.io.File,long)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlignVertical(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
okhttp3.OkHttpClient: okhttp3.EventListener$Factory eventListenerFactory()
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request()
com.facebook.react.uimanager.ViewManager: java.util.Map getCommandsMap()
com.facebook.react.bridge.ModuleHolder: boolean isTurboModule()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
okhttp3.internal.Util: void closeQuietly(java.net.Socket)
com.polidea.rxandroidble2.RxBleAdapterStateObservable$1$1: void onReceive(android.content.Context,android.content.Intent)
com.polidea.rxandroidble2.internal.logger.LoggerUtil: java.lang.String bytesToHex(byte[])
okhttp3.Interceptor$Chain: okhttp3.Connection connection()
androidx.appcompat.app.AppCompatActivity: void onStart()
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
com.facebook.react.bridge.WritableNativeArray: WritableNativeArray()
com.polidea.rxandroidble2.internal.DeviceComponent$Builder: com.polidea.rxandroidble2.internal.DeviceComponent build()
io.reactivex.Flowable: io.reactivex.Flowable distinct(io.reactivex.functions.Function)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$4: com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult apply(com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder socketFactory(javax.net.SocketFactory)
com.facebook.react.uimanager.BaseViewManager: void setPointerLeaveCapture(android.view.View,boolean)
okhttp3.internal.Util: boolean isCivilized(okhttp3.internal.io.FileSystem,java.io.File)
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod[] values()
com.polidea.rxandroidble2.exceptions.BleAlreadyConnectedException: BleAlreadyConnectedException(java.lang.String)
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache: java.lang.Object remove(java.lang.Object)
androidx.activity.ComponentActivity: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable$2: DisconnectOperation$DisconnectGattObservable$2(com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable)
okhttp3.internal.ws.RealWebSocket: boolean isValid(okhttp3.internal.ws.WebSocketExtensions)
io.reactivex.Flowable: io.reactivex.Flowable timestamp(java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.fragment.app.FragmentActivity: void onPictureInPictureModeChanged(boolean)
io.reactivex.Flowable: io.reactivex.Flowable groupJoin(org.reactivestreams.Publisher,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
okhttp3.Headers: java.lang.String get(java.lang.String)
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap[] values()
okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String key()
com.facebook.react.ReactRootView: int getHeightMeasureSpec()
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig getDefaultConfig(com.facebook.react.bridge.ReactContext)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationServicesStatusFactory: com.polidea.rxandroidble2.internal.util.LocationServicesStatus get()
okhttp3.CacheControl$Companion: okhttp3.CacheControl parse(okhttp3.Headers)
com.facebook.react.bridge.WritableNativeMap: void putDouble(java.lang.String,double)
io.reactivex.Flowable: io.reactivex.Flowable doOnSubscribe(io.reactivex.functions.Consumer)
okhttp3.internal.platform.Android10Platform: Android10Platform()
okhttp3.internal.connection.RealCall: void callStart()
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvidesOperationTimeoutConfFactory: ConnectionModule_ProvidesOperationTimeoutConfFactory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.views.view.ReactViewGroup: void setHitSlopRect(android.graphics.Rect)
io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable: io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable valueOf(java.lang.String)
okhttp3.internal.Util: int and(short,int)
com.bleplx.BlePlxModule: void readCharacteristicForService(int,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideConnectionQueueExecutorServiceFactory: java.lang.Object get()
io.reactivex.Observable: io.reactivex.Observable throttleLatest(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
com.facebook.react.views.scroll.ReactScrollView: void setContentOffset(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.bleplx.BlePlxModule: void readDescriptor(int,java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.internal.ws.WebSocketReader: void processNextFrame()
okhttp3.internal.Util: java.lang.String trimSubstring(java.lang.String,int,int)
com.facebook.react.modules.devloading.DevLoadingModule: DevLoadingModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeShareModuleSpec: java.lang.String getName()
com.facebook.react.fabric.BindingImpl: com.facebook.react.bridge.ReadableNativeMap getInspectorDataForInstance(com.facebook.react.fabric.events.EventEmitterWrapper)
okhttp3.internal.ws.MessageDeflater: MessageDeflater(boolean)
com.facebook.react.fabric.FabricUIManager: java.util.Map getPerformanceCounters()
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl create(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
io.reactivex.Flowable: io.reactivex.Flowable debounce(long,java.util.concurrent.TimeUnit)
com.facebook.soloader.SoLoader$1: java.lang.String getLibHash(java.lang.String)
com.facebook.react.modules.blob.BlobModule: BlobModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http2.Http2Reader$Handler: void data(boolean,int,okio.BufferedSource,int)
com.polidea.rxandroidble2.internal.SingleResponseOperation: io.reactivex.Single timeoutFallbackProcedure(android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,io.reactivex.Scheduler)
io.reactivex.Flowable: io.reactivex.Single toSortedList(java.util.Comparator,int)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityFocus(double)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.facebook.react.uimanager.ViewManager: java.util.Map getNativeProps()
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot$okhttp()
com.polidea.rxandroidble2.internal.util.ScanRecordParser_Factory: com.polidea.rxandroidble2.internal.util.ScanRecordParser_Factory create()
okhttp3.Cache$CacheResponseBody: okio.BufferedSource source()
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder(okhttp3.OkHttpClient)
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache: boolean containsValue(java.lang.Object)
okhttp3.internal.Util: int delimiterOffset$default(java.lang.String,java.lang.String,int,int,int,java.lang.Object)
kotlin.jvm.internal.CallableReference: boolean isFinal()
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: CatalystInstanceImpl$NativeExceptionHandler(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.polidea.rxandroidble2.internal.serialization.OperationPriorityFifoBlockingQueue: void add(com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: void maybeLoadOtherSoLibraries()
io.reactivex.Flowable: io.reactivex.Flowable mergeWith(org.reactivestreams.Publisher)
com.facebook.react.bridge.CatalystInstanceImpl$5: CatalystInstanceImpl$5(com.facebook.react.bridge.CatalystInstanceImpl)
okhttp3.Response$Builder: void checkPriorResponse(okhttp3.Response)
com.facebook.react.views.view.ReactViewManager: void setexperimental_layoutConformance(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
okhttp3.FormBody: void writeTo(okio.BufferedSink)
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow[] values()
com.facebook.react.bridge.CatalystInstanceImpl$3: void run()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String,java.lang.String,boolean)
okhttp3.internal.cache.DiskLruCache$snapshots$1: DiskLruCache$snapshots$1(okhttp3.internal.cache.DiskLruCache)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout getReadTimeout$okhttp()
okhttp3.internal.http2.PushObserver: boolean onHeaders(int,java.util.List,boolean)
okhttp3.internal.platform.android.Android10SocketAdapter: boolean isSupported()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColor(int)
okhttp3.internal.http2.Http2Connection: void start(boolean,okhttp3.internal.concurrent.TaskRunner)
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl$1: java.lang.Object apply(java.lang.Object)
com.polidea.rxandroidble2.RxBleClientImpl: io.reactivex.Observable bluetoothAdapterOffExceptionObservable()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothInteractionExecutorServiceFactory$InstanceHolder: ClientComponent_ClientModule_ProvideBluetoothInteractionExecutorServiceFactory$InstanceHolder()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ackSettings()
okhttp3.internal.cache2.Relay: long getBufferMaxSize()
okhttp3.OkHttpClient: okhttp3.Dispatcher -deprecated_dispatcher()
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(android.view.View,boolean)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: MessageQueueThreadImpl$3()
com.facebook.react.views.scroll.ReactScrollView: void setBackgroundColor(int)
io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit,int)
com.facebook.soloader.DirectApkSoSource: void loadDependencies(java.lang.String,int,android.os.StrictMode$ThreadPolicy)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothCallbacksSchedulerFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothCallbacksSchedulerFactory create()
okhttp3.Challenge: java.lang.String scheme()
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,boolean,int,int)
okhttp3.Handshake: boolean equals(java.lang.Object)
okhttp3.Cookie: boolean httpOnly()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noTransform()
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
okhttp3.internal.platform.android.SocketAdapter$DefaultImpls: javax.net.ssl.X509TrustManager trustManager(okhttp3.internal.platform.android.SocketAdapter,javax.net.ssl.SSLSocketFactory)
androidx.appcompat.app.AppCompatActivity: void onPanelClosed(int,android.view.Menu)
androidx.appcompat.widget.AppCompatToggleButton: void setEmojiCompatEnabled(boolean)
androidx.appcompat.widget.SwitchCompat: void setEnforceSwitchWidth(boolean)
io.reactivex.Flowable: io.reactivex.Flowable doOnCancel(io.reactivex.functions.Action)
com.facebook.soloader.SoFileLoader: void load(java.lang.String,int)
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode[] values()
com.facebook.soloader.SysUtil: SysUtil()
com.facebook.react.uimanager.BaseViewManager: void setResponderReject(android.view.View,boolean)
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache$1: DeviceComponentCache$1()
okhttp3.internal.connection.Exchange: void webSocketUpgradeFailed()
com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper makeDsoNative(java.lang.String,java.lang.String)
okhttp3.Cache$RealCacheRequest: Cache$RealCacheRequest(okhttp3.Cache,okhttp3.internal.cache.DiskLruCache$Editor)
okhttp3.Headers$Companion: java.lang.String get(java.lang.String[],java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$10: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactRawTextShadowNode createShadowNodeInstance()
com.polidea.rxandroidble2.internal.scan.EmulatedScanFilterMatcher: boolean isEmpty()
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable publish()
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6$1: java.lang.Object apply(java.lang.Object)
okhttp3.internal.platform.Platform$Companion: Platform$Companion()
com.facebook.react.bridge.queue.MessageQueueThread: boolean runOnQueue(java.lang.Runnable)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
com.facebook.soloader.SysUtil: long getParcelPadSize(long)
androidx.appcompat.widget.SwitchCompat: void setThumbResource(int)
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideIllegalOperationHandlerFactory: com.polidea.rxandroidble2.internal.connection.IllegalOperationHandler provideIllegalOperationHandler(boolean,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: java.lang.String toString()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideConnectionQueueExecutorServiceFactory: java.util.concurrent.ExecutorService provideConnectionQueueExecutorService()
okhttp3.internal.cache.DiskLruCache: void readJournal()
androidx.appcompat.app.AppCompatActivity: void onTitleChanged(java.lang.CharSequence,int)
com.facebook.react.bridge.ReadableNativeArray: double getDouble(int)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$2: void onMtuChanged(android.bluetooth.BluetoothGatt,int,int)
com.polidea.rxandroidble2.internal.util.CheckerLocationProvider_Factory: com.polidea.rxandroidble2.internal.util.CheckerLocationProvider_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: void rename(java.io.File,java.io.File)
com.facebook.react.bridge.JSIModuleRegistry: JSIModuleRegistry()
io.reactivex.Flowable: io.reactivex.subscribers.TestSubscriber test()
okhttp3.internal.http.RealInterceptorChain: int getConnectTimeoutMillis$okhttp()
okhttp3.internal.http2.Http2Connection: long getWriteBytesMaximum()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
okhttp3.internal.http.ExchangeCodec: long reportedContentLength(okhttp3.Response)
okhttp3.Headers$Builder: okhttp3.Headers$Builder addUnsafeNonAscii(java.lang.String,java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAccessible(com.facebook.react.views.text.ReactTextView,boolean)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.soloader.ElfByteChannel: com.facebook.soloader.ElfByteChannel truncate(long)
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)
com.facebook.react.bridge.WritableNativeMap: void merge(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JavaMethodWrapper$1: JavaMethodWrapper$1()
com.facebook.react.bridge.ReactContext: ReactContext(android.content.Context)
okhttp3.WebSocket$Factory: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)
okhttp3.Challenge: Challenge(java.lang.String,java.util.Map)
com.facebook.react.views.scroll.ReactScrollView: void setScrollPerfTag(java.lang.String)
okhttp3.Address: java.util.List connectionSpecs()
com.facebook.react.bridge.ReactMarker: void removeFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
okio.Timeout: okio.Timeout deadline(long,java.util.concurrent.TimeUnit)
com.polidea.rxandroidble2.internal.operations.ServiceDiscoveryOperation: io.reactivex.Single lambda$timeoutFallbackProcedure$2(android.bluetooth.BluetoothGatt,java.lang.Long)
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl -deprecated_get(java.lang.String)
com.facebook.soloader.SoLoader: java.io.File unpackLibraryAndDependencies(java.lang.String)
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi23_Factory: com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi23 get()
okhttp3.internal.ws.RealWebSocket: void access$setExtensions$p(okhttp3.internal.ws.RealWebSocket,okhttp3.internal.ws.WebSocketExtensions)
com.facebook.react.runtime.JSTimerExecutor: JSTimerExecutor(com.facebook.jni.HybridData)
okhttp3.internal.tls.OkHostnameVerifier: java.util.List allSubjectAltNames(java.security.cert.X509Certificate)
com.polidea.rxandroidble2.internal.operations.ConnectOperation_Factory: com.polidea.rxandroidble2.internal.operations.ConnectOperation_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.internal.tls.OkHostnameVerifier: java.lang.String asciiToLowercase(java.lang.String)
com.polidea.rxandroidble2.internal.connection.MtuWatcher$1: boolean test(java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl: void setGlobalVariable(java.lang.String,java.lang.String)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
com.facebook.jni.HybridData$Destructor: HybridData$Destructor(java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable concatArray(io.reactivex.ObservableSource[])
com.bleplx.adapter.BleModule: void lambda$readRSSIForDevice$3(com.bleplx.adapter.utils.SafeExecutor,java.lang.String)
com.polidea.rxandroidble2.utils.StandardUUIDsParser: java.lang.String getCharacteristicName(java.util.UUID)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
io.reactivex.Flowable: io.reactivex.Flowable doOnEach(org.reactivestreams.Subscriber)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: void setName(com.facebook.react.views.unimplementedview.ReactUnimplementedView,java.lang.String)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$10: java.lang.Object apply(java.lang.Object)
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.JavaMethodWrapper$6: JavaMethodWrapper$6()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.lang.String getName()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setOverflow(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator: com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult create(int,android.bluetooth.le.ScanResult)
com.polidea.rxandroidble2.internal.operations.ConnectOperation$1: void run()
com.facebook.soloader.UnpackingSoSource$InputDsoIterator: UnpackingSoSource$InputDsoIterator()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideRecommendedScanRuntimePermissionNamesFactory: java.lang.String[][] get()
okhttp3.Response: okhttp3.Request -deprecated_request()
okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: MessageQueueThreadImpl$1(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.common.futures.SimpleSettableFuture,java.util.concurrent.Callable)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api16Impl: void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: NativeImageLoaderAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeBusy()
com.bleplx.adapter.BleModule: void readCharacteristicForDevice(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$1: RxBleGattCallback$1(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback)
io.reactivex.Single: io.reactivex.Observable concat(io.reactivex.ObservableSource)
okhttp3.internal.platform.android.SocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.polidea.rxandroidble2.ClientComponent$ClientModule: boolean provideIsAndroidWear(android.content.Context,int)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideScanPreconditionVerifierFactory: ClientComponent_ClientModule_ProvideScanPreconditionVerifierFactory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.polidea.rxandroidble2.RxBleClientImpl: io.reactivex.ObservableSource lambda$scanBleDevices$1(com.polidea.rxandroidble2.scan.ScanSettings,com.polidea.rxandroidble2.scan.ScanFilter[])
okhttp3.HttpUrl: java.lang.String -deprecated_query()
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String getName()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodeFromView(double,double)
com.facebook.react.runtime.ReactSurfaceView: void setIsFabric(boolean)
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSlingshotDistance(int)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothAdapterFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothAdapterFactory create()
com.polidea.rxandroidble2.internal.RxBleDeviceImpl: java.lang.String toString()
com.polidea.rxandroidble2.internal.connection.DescriptorWriter_Factory: com.polidea.rxandroidble2.internal.connection.DescriptorWriter newInstance(com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueue,com.polidea.rxandroidble2.internal.operations.OperationsProvider)
com.facebook.react.uimanager.LayoutShadowNode: void setAspectRatio(float)
com.polidea.rxandroidble2.internal.util.QueueReleasingEmitterWrapper: void cancel()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder parse$okhttp(okhttp3.HttpUrl,java.lang.String)
com.polidea.rxandroidble2.internal.util.CheckerPermission_Factory: java.lang.Object get()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$7: io.reactivex.SingleSource apply(com.polidea.rxandroidble2.RxBleDeviceServices)
okhttp3.internal.http2.Http2Writer: void connectionPreface()
io.reactivex.Observable: io.reactivex.Observable repeat()
io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher,int)
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,boolean,int)
com.polidea.rxandroidble2.internal.RxBleDeviceImpl_Factory: RxBleDeviceImpl_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
io.reactivex.Observable: io.reactivex.Observable startWith(java.lang.Iterable)
com.facebook.react.uimanager.LayoutShadowNode: void setMaxWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.uimanager.UIManagerModule: void dismissPopupMenu()
io.reactivex.observers.TestObserver$EmptyObserver: io.reactivex.observers.TestObserver$EmptyObserver valueOf(java.lang.String)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5$3: boolean test(java.lang.Object)
okhttp3.internal.connection.Exchange: okhttp3.Response$Builder readResponseHeaders(boolean)
io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function8)
okhttp3.internal.platform.OpenJSSEPlatform: OpenJSSEPlatform()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setRemoveClippedSubviews(boolean)
com.polidea.rxandroidble2.RxBleClient: boolean isScanRuntimePermissionGranted()
com.facebook.react.bridge.ReadableMap: java.lang.String getString(java.lang.String)
com.facebook.react.animated.EventAnimationDriver: EventAnimationDriver(java.lang.String,int,java.util.List,com.facebook.react.animated.ValueAnimatedNode)
com.polidea.rxandroidble2.utils.GattStatusParser: GattStatusParser()
okhttp3.Response$Builder: void setNetworkResponse$okhttp(okhttp3.Response)
okhttp3.MultipartReader$Companion: MultipartReader$Companion()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isAccessibilityServiceEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.views.text.ReactVirtualTextShadowNode createShadowNodeInstance()
okhttp3.Address: java.util.List -deprecated_protocols()
com.polidea.rxandroidble2.internal.RxBleDeviceImpl: java.lang.String getMacAddress()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: CatalystInstanceImpl$Builder()
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration access$1600(com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl)
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier -deprecated_hostnameVerifier()
okhttp3.WebSocket: boolean close(int,java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable buffer(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.facebook.react.bridge.ReactMarker: void addFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl: java.lang.String toLanguageTag(java.util.Locale)
com.facebook.react.animated.NativeAnimatedModule: void addUnbatchedOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
io.reactivex.Observable: io.reactivex.Observable skipLast(int)
com.polidea.rxandroidble2.helpers.LocationServicesOkObservable_Factory: com.polidea.rxandroidble2.helpers.LocationServicesOkObservable get()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMinimumFontScale(float)
okhttp3.OkHttpClient: java.net.Proxy -deprecated_proxy()
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.ReadableNativeMap: boolean hasKey(java.lang.String)
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: Http2Connection$pushDataLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okio.Buffer,int,boolean)
com.polidea.rxandroidble2.ClientComponent$PlatformConstants: ClientComponent$PlatformConstants()
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
io.reactivex.Single: io.reactivex.Flowable concatArrayEager(io.reactivex.SingleSource[])
com.facebook.react.bridge.ReactContext: void emitDeviceEvent(java.lang.String,java.lang.Object)
okhttp3.internal.connection.RealCall$CallReference: java.lang.Object getCallStackTrace()
com.facebook.react.modules.core.JavaTimerManager: void setSendIdleEvents(boolean)
io.reactivex.Observable: io.reactivex.Observable take(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.internal.io.FileSystem: void rename(java.io.File,java.io.File)
com.polidea.rxandroidble2.scan.ScanSettings: int getCallbackType()
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1$2: java.lang.Object apply(java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl$4: CatalystInstanceImpl$4(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(android.view.View)
com.facebook.soloader.UnpackingSoSource$InputDso: void write(java.io.DataOutput,byte[])
com.facebook.react.bridge.JavaMethodWrapper: char paramTypeToChar(java.lang.Class)
okhttp3.internal.platform.Platform$Companion: Platform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher: void notifyNativeReadRssiCallback(android.bluetooth.BluetoothGatt,int,int)
okhttp3.internal.platform.BouncyCastlePlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.OkHttpClient$Builder: okhttp3.Cache getCache$okhttp()
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter: void emit(java.lang.String,java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
com.facebook.react.bridge.NativeModuleRegistry: void onBatchComplete()
io.reactivex.Single: io.reactivex.Flowable concat(io.reactivex.SingleSource,io.reactivex.SingleSource)
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.lang.String getName()
okhttp3.EventListener: void callFailed(okhttp3.Call,java.io.IOException)
okhttp3.TlsVersion: java.lang.String -deprecated_javaName()
io.reactivex.Flowable: io.reactivex.Flowable doOnNext(io.reactivex.functions.Consumer)
okhttp3.Headers$Companion: okhttp3.Headers -deprecated_of(java.util.Map)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothAdapterFactory$InstanceHolder: ClientComponent_ClientModule_ProvideBluetoothAdapterFactory$InstanceHolder()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(android.view.View,java.lang.Float)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.reactivex.Observable: io.reactivex.Observable switchOnNext(io.reactivex.ObservableSource)
com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker_Factory: com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker newInstance(com.polidea.rxandroidble2.internal.connection.IllegalOperationHandler)
com.polidea.rxandroidble2.LogOptions: java.lang.Integer getLogLevel()
okhttp3.internal.http1.Http1ExchangeCodec: Http1ExchangeCodec(okhttp3.OkHttpClient,okhttp3.internal.connection.RealConnection,okio.BufferedSource,okio.BufferedSink)
com.facebook.react.bridge.JavaMethodWrapper$8: JavaMethodWrapper$8()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function,boolean)
okhttp3.Request$Builder: okhttp3.Request build()
com.bleplx.adapter.BleModule: java.lang.String mapNativeAdapterStateToLocalBluetoothState(int)
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
com.polidea.rxandroidble2.internal.operations.ServiceDiscoveryOperation: io.reactivex.Single getCallback(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$2: AsyncStorageModule$2(com.reactnativecommunity.asyncstorage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback,com.facebook.react.bridge.ReadableArray)
com.facebook.soloader.ExtractFromZipSoSource$ZipDso: int compareTo(java.lang.Object)
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Observable setupNotification(android.bluetooth.BluetoothGattCharacteristic)
com.facebook.yoga.YogaNative: int jni_YGConfigGetErrataJNI(long)
com.polidea.rxandroidble2.RxBleDeviceServices$2: android.bluetooth.BluetoothGattCharacteristic call()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: void scan(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.SearchView$Api29Impl: void setInputMethodMode(androidx.appcompat.widget.SearchView$SearchAutoComplete,int)
okio.AsyncTimeout: okio.AsyncTimeout access$getNext$p(okio.AsyncTimeout)
com.polidea.rxandroidble2.exceptions.BleConflictingNotificationAlreadySetException: boolean notificationAlreadySet()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightPercentJNI(long,float)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1$3: io.reactivex.ObservableSource apply(io.reactivex.Observable)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderColor(com.facebook.react.views.textinput.ReactEditText,int,java.lang.Integer)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void close(double,java.lang.String,double)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
okhttp3.CipherSuite$Companion: okhttp3.CipherSuite init(java.lang.String,int)
io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,int,long,java.util.concurrent.TimeUnit)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
com.facebook.fbreact.specs.NativeRedBoxSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner)
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter_Factory: com.polidea.rxandroidble2.internal.connection.DisconnectionRouter get()
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()
com.facebook.react.views.view.ReactViewManager: void setNativeForeground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
com.polidea.rxandroidble2.internal.scan.ScanRecordImplCompat: int getTxPowerLevel()
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void quitSynchronous()
com.facebook.common.time.AwakeTimeSinceBootClock: long nowNanos()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
io.reactivex.Observable: io.reactivex.Observable delay(long,java.util.concurrent.TimeUnit)
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme)
io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setLastScrollDispatchTime(long)
androidx.fragment.app.FragmentActivity: void supportFinishAfterTransition()
io.reactivex.Flowable: io.reactivex.Flowable concatMapIterable(io.reactivex.functions.Function)
com.polidea.rxandroidble2.internal.util.CheckerPermission: boolean isAnyPermissionGranted(java.lang.String[])
com.facebook.soloader.MergedSoMapping: void invokeJniOnload(java.lang.String)
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResultLegacy: android.bluetooth.BluetoothDevice getBluetoothDevice()
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: NativeAnimationsDebugModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.reactnativecommunity.asyncstorage.AsyncStorageErrorUtil: com.facebook.react.bridge.WritableMap getDBError(java.lang.String)
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl: com.polidea.rxandroidble2.internal.operations.DescriptorWriteOperation provideWriteDescriptor(android.bluetooth.BluetoothGattDescriptor,byte[])
com.facebook.react.views.scroll.ReactScrollView: long getLastScrollDispatchTime()
com.reactnativecommunity.asyncstorage.AsyncStorageExpoMigration: java.io.File getLastModifiedFile(java.util.ArrayList)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.util.Map getTypedExportedConstants()
okhttp3.internal.platform.android.Android10SocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$3: io.reactivex.ObservableSource apply(io.reactivex.Observable)
com.facebook.react.uimanager.UIManagerModule: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.platform.android.SocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.react.bridge.JavaOnlyArray: void pushBoolean(boolean)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodeToView(double,double)
okhttp3.internal.http2.ConnectionShutdownException: ConnectionShutdownException()
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl_Factory: com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.bridge.JavaOnlyArray: boolean isNull(int)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.soloader.ExoSoSource: ExoSoSource(android.content.Context,java.lang.String)
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi18_Factory: com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi18_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
com.facebook.react.views.view.ReactViewGroup: void setBackgroundColor(int)
com.polidea.rxandroidble2.internal.connection.ConstantPayloadSizeLimit: int getPayloadSizeLimit()
okhttp3.internal.http2.Hpack$Reader: void clearDynamicTable()
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
com.polidea.rxandroidble2.internal.RxBleLog: void v(java.lang.Throwable,java.lang.String,java.lang.Object[])
com.polidea.rxandroidble2.internal.util.ClientStateObservable: ClientStateObservable(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,io.reactivex.Observable,io.reactivex.Observable,com.polidea.rxandroidble2.internal.util.LocationServicesStatus,io.reactivex.Scheduler)
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideIllegalOperationHandlerFactory: java.lang.Object get()
com.facebook.react.views.textinput.ReactTextInputManager: void checkPasswordType(com.facebook.react.views.textinput.ReactEditText)
okhttp3.internal.connection.ConnectionSpecSelector: boolean connectionFailed(java.io.IOException)
com.polidea.rxandroidble2.internal.operations.DisconnectOperation_Factory: DisconnectOperation_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.hermes.unicode.AndroidUnicodeUtils: int localeCompare(java.lang.String,java.lang.String)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder -addNetworkInterceptor(kotlin.jvm.functions.Function1)
okhttp3.FormBody: okhttp3.MediaType contentType()
com.polidea.rxandroidble2.internal.operations.CharacteristicWriteOperation: boolean startOperation(android.bluetooth.BluetoothGatt)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18: ScanSetupBuilderImplApi18(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator,com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void getInitialURL(com.facebook.react.bridge.Promise)
com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter: android.bluetooth.le.ScanFilter toNative(com.polidea.rxandroidble2.scan.ScanFilter)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: void call(com.facebook.react.bridge.CatalystInstanceImpl)
okhttp3.MultipartBody$Part$Companion: MultipartBody$Part$Companion()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getConstants()
com.ghostcommv2.MainActivity: java.lang.String getMainComponentName()
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$5: boolean test(java.lang.Object)
com.polidea.rxandroidble2.DaggerClientComponent$Builder: com.polidea.rxandroidble2.DaggerClientComponent$Builder applicationContext(android.content.Context)
okhttp3.internal.http2.Http2ExchangeCodec: Http2ExchangeCodec(okhttp3.OkHttpClient,okhttp3.internal.connection.RealConnection,okhttp3.internal.http.RealInterceptorChain,okhttp3.internal.http2.Http2Connection)
com.polidea.rxandroidble2.internal.util.CharacteristicPropertiesParser: int[] getPossibleProperties()
okhttp3.internal.connection.RealCall: java.io.IOException messageDone$okhttp(okhttp3.internal.connection.Exchange,boolean,boolean,java.io.IOException)
okhttp3.RequestBody$Companion$toRequestBody$1: okhttp3.MediaType contentType()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Single writeCharacteristic(android.bluetooth.BluetoothGattCharacteristic,byte[])
androidx.appcompat.widget.SwitchCompat: void setSwitchPadding(int)
com.polidea.rxandroidble2.internal.util.CheckerLocationProvider_Factory: CheckerLocationProvider_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(com.facebook.react.views.modal.ReactModalHostView,boolean)
okhttp3.CertificatePinner: void check(java.lang.String,java.security.cert.Certificate[])
com.facebook.soloader.SoLoader: void init(android.content.Context,int)
com.facebook.react.uimanager.UIManagerModule: void replaceExistingNonRootView(int,int)
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi31_Factory: com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi31 get()
okhttp3.internal.Util: java.lang.Object readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl: com.polidea.rxandroidble2.internal.operations.ServiceDiscoveryOperation provideServiceDiscoveryOperation(long,java.util.concurrent.TimeUnit)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnContentSizeChange(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.CxxModuleWrapper getTurboLegacyCxxModule(java.lang.String)
com.facebook.react.bridge.UIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
com.polidea.rxandroidble2.internal.serialization.OperationPriorityFifoBlockingQueue: boolean isEmpty()
com.polidea.rxandroidble2.RxBleClientImpl: io.reactivex.Observable observeStateChanges()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentInvertColorsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.polidea.rxandroidble2.scan.ScanFilter: android.os.ParcelUuid getServiceSolicitationUuid()
okhttp3.internal.http.HttpHeaders: boolean skipCommasAndWhitespace(okio.Buffer)
io.reactivex.Observable: io.reactivex.Observable skipWhile(io.reactivex.functions.Predicate)
com.polidea.rxandroidble2.internal.SingleResponseOperation: java.lang.String toString()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextUpdate getReactTextUpdate(java.lang.String,int)
com.facebook.react.bridge.DynamicFromArray: double asDouble()
com.bleplx.adapter.BleModule: void lambda$safeConnectToDevice$30(com.bleplx.adapter.utils.SafeExecutor,com.polidea.rxandroidble2.RxBleDevice,java.lang.Throwable)
com.facebook.fbreact.specs.NativeDevMenuSpec: void reload()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable)
okhttp3.internal.Util: void wait(java.lang.Object)
com.polidea.rxandroidble2.internal.scan.InternalToExternalScanResultConverter_Factory: com.polidea.rxandroidble2.internal.scan.InternalToExternalScanResultConverter get()
com.facebook.react.bridge.ReactContext: boolean isOnUiQueueThread()
com.facebook.soloader.UnpackingSoSource$Dso: UnpackingSoSource$Dso(java.lang.String,java.lang.String)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler getExceptionHandler()
okhttp3.internal.connection.Exchange$RequestBodySink: Exchange$RequestBodySink(okhttp3.internal.connection.Exchange,okio.Sink,long)
okhttp3.internal.Util: java.nio.charset.Charset readBomAsCharset(okio.BufferedSource,java.nio.charset.Charset)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
okhttp3.internal.Util: void assertThreadDoesntHoldLock(java.lang.Object)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapInterval(int)
okhttp3.Dispatcher: java.util.List runningCalls()
com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(float)
com.facebook.react.bridge.ReactContext: void removeActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
com.facebook.react.bridge.Dynamic: java.lang.String asString()
com.facebook.soloader.nativeloader.NativeLoader: NativeLoader()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle valueOf(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setResponderEnd(android.view.View,boolean)
com.polidea.rxandroidble2.internal.connection.DisconnectAction: DisconnectAction(com.polidea.rxandroidble2.internal.serialization.ClientOperationQueue,com.polidea.rxandroidble2.internal.operations.DisconnectOperation)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
okhttp3.internal.connection.Exchange$ResponseBodySource: Exchange$ResponseBodySource(okhttp3.internal.connection.Exchange,okio.Source,long)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: boolean propagateErrorIfOccurred(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$Output,android.bluetooth.BluetoothGatt,int,com.polidea.rxandroidble2.exceptions.BleGattOperationType)
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy()
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomLeftRadius(android.view.View,float)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5: io.reactivex.functions.Function bufferIsNotEmpty(java.nio.ByteBuffer)
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: com.polidea.rxandroidble2.helpers.LocationServicesOkObservable locationServicesOkObservable()
okhttp3.OkHttpClient: boolean -deprecated_followSslRedirects()
io.reactivex.Observable: io.reactivex.Observable materialize()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,byte[])
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: com.polidea.rxandroidble2.RxBleConnection rxBleConnection()
com.polidea.rxandroidble2.RxBleClientImpl: java.util.Set toDistinctSet(java.util.UUID[])
okhttp3.internal.http2.Http2Connection: int openStreamCount()
okhttp3.internal.Util: okhttp3.EventListener$Factory asFactory(okhttp3.EventListener)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.polidea.rxandroidble2.internal.util.ByteAssociationUtil$2: java.lang.Object apply(java.lang.Object)
com.polidea.rxandroidble2.internal.logger.LoggerUtil: void logOperationStarted(com.polidea.rxandroidble2.internal.operations.Operation)
com.facebook.soloader.NativeDepsUnpacker: java.io.File getNativeDepsDir(android.content.Context)
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi18_Factory$InstanceHolder: LocationServicesStatusApi18_Factory$InstanceHolder()
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
okhttp3.internal.ws.WebSocketProtocol: java.lang.String closeCodeExceptionMessage(int)
io.reactivex.Flowable: io.reactivex.Flowable zipWith(org.reactivestreams.Publisher,io.reactivex.functions.BiFunction)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method getMethod()
okhttp3.internal.ws.WebSocketExtensions: boolean component6()
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache$1: com.polidea.rxandroidble2.internal.cache.DeviceComponentWeakReference provide(com.polidea.rxandroidble2.internal.DeviceComponent)
com.facebook.react.fabric.FabricUIManager: java.lang.Object getEventDispatcher()
com.polidea.rxandroidble2.internal.operations.MtuRequestOperation_Factory: com.polidea.rxandroidble2.internal.operations.MtuRequestOperation get()
okhttp3.internal.platform.ConscryptPlatform: ConscryptPlatform()
okhttp3.Route: okhttp3.Address address()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
com.facebook.react.bridge.ReactContext: void raiseCatalystInstanceMissingException()
okhttp3.internal.Internal: okhttp3.Response cacheGet(okhttp3.Cache,okhttp3.Request)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
io.reactivex.Flowable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate,io.reactivex.functions.Consumer)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(android.view.View,android.view.View,int)
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.Response$Builder: void setCacheResponse$okhttp(okhttp3.Response)
io.reactivex.Flowable: io.reactivex.Flowable sample(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.internal.http2.Header: boolean equals(java.lang.Object)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPaused(android.app.Activity)
io.reactivex.Single: io.reactivex.Observable flattenAsObservable(io.reactivex.functions.Function)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder getDefaultConfigBuilder(com.facebook.react.bridge.ReactContext)
com.polidea.rxandroidble2.RxBleDeviceServices: io.reactivex.Single getCharacteristic(java.util.UUID,java.util.UUID)
com.facebook.react.modules.core.ExceptionsManagerModule: void dismissRedbox()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAdjustFontSizeToFit(com.facebook.react.views.text.ReactTextView,boolean)
okhttp3.internal.platform.android.DeferredSocketAdapter: DeferredSocketAdapter(okhttp3.internal.platform.android.DeferredSocketAdapter$Factory)
okhttp3.internal.Util: int delimiterOffset(java.lang.String,char,int,int)
io.reactivex.Observable: io.reactivex.Observable concat(io.reactivex.ObservableSource,int)
okhttp3.internal.http2.Header: Header(okio.ByteString,java.lang.String)
okhttp3.internal.Util: int skipAll(okio.Buffer,byte)
okhttp3.Response: void close()
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.fabric.FabricUIManager: void attachRootView(com.facebook.react.interfaces.fabric.SurfaceHandler,android.view.View)
okhttp3.Cookie$Companion: boolean access$domainMatch(okhttp3.Cookie$Companion,java.lang.String,java.lang.String)
com.facebook.react.ReactActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
okhttp3.internal.http2.Http2Connection: void writeHeaders$okhttp(int,boolean,java.util.List)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getSignature()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
okhttp3.internal.concurrent.TaskRunner$RealBackend: void coordinatorWait(okhttp3.internal.concurrent.TaskRunner,long)
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: io.reactivex.Observable namedObservableOfBoolean()
com.polidea.rxandroidble2.internal.RxBleLog$2: void log(int,java.lang.String,java.lang.String)
com.facebook.react.modules.appregistry.AppRegistry: void startHeadlessTask(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.polidea.rxandroidble2.internal.logger.LoggerUtil$AttributeLogWrapper: java.lang.String toString()
com.facebook.soloader.SoLoader$TestOnlyUtils: SoLoader$TestOnlyUtils()
io.reactivex.Observable: io.reactivex.Observable distinctUntilChanged(io.reactivex.functions.BiPredicate)
com.facebook.react.bridge.WritableNativeMap: void putInt(java.lang.String,int)
com.facebook.react.bridge.JavaOnlyMap: double getDouble(java.lang.String)
kotlin.jvm.internal.Lambda: java.lang.String toString()
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
io.reactivex.Observable: io.reactivex.Observable doOnError(io.reactivex.functions.Consumer)
okhttp3.internal.cache.DiskLruCache: void checkNotClosed()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
com.facebook.react.views.text.ReactVirtualTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.http.StatusLine: StatusLine(okhttp3.Protocol,int,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
com.polidea.rxandroidble2.scan.ScanRecord: int getAdvertiseFlags()
com.facebook.react.modules.appstate.AppStateModule: void onHostDestroy()
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider access$1100(com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableNotificationValueFactory$InstanceHolder: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableNotificationValueFactory access$000()
com.bleplx.adapter.BleModule: void lambda$safeMonitorCharacteristicForDevice$44(com.bleplx.adapter.Characteristic,com.bleplx.adapter.OnEventCallback,byte[])
io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.facebook.react.views.textinput.ReactEditText: void setBackgroundColor(int)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: void setSelected(java.lang.String)
com.facebook.soloader.nativeloader.NativeLoader: void init(com.facebook.soloader.nativeloader.NativeLoaderDelegate)
okhttp3.OkHttpClient: boolean -deprecated_followRedirects()
com.facebook.react.uimanager.UIConstantsProviderManager: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
okhttp3.internal.http2.Http2Connection: void writeData(int,boolean,okio.Buffer,long)
io.reactivex.Observable: io.reactivex.Observable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)
okhttp3.HttpUrl$Builder$Companion: int parsePort(java.lang.String,int,int)
io.reactivex.Observable: io.reactivex.Observable buffer(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.polidea.rxandroidble2.internal.logger.LoggerUtil: com.polidea.rxandroidble2.internal.logger.LoggerUtil$AttributeLogWrapper wrap(android.bluetooth.BluetoothGattDescriptor,boolean)
com.facebook.react.defaults.DefaultReactNativeHost: com.facebook.react.JSEngineResolutionAlgorithm getJSEngineResolutionAlgorithm()
com.facebook.react.views.view.ReactViewManager: void setBorderWidth(com.facebook.react.views.view.ReactViewGroup,int,float)
io.reactivex.Observable: io.reactivex.Observable subscribeOn(io.reactivex.Scheduler)
com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider_Factory: BluetoothGattProvider_Factory()
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: okhttp3.internal.publicsuffix.PublicSuffixDatabase get()
androidx.appcompat.app.AppCompatActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
io.reactivex.internal.util.EmptyComponent: io.reactivex.internal.util.EmptyComponent[] values()
com.facebook.react.views.scroll.ReactScrollView: void setDisableIntervalMomentum(boolean)
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.Class)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
okhttp3.internal.http2.Http2Reader$ContinuationSource: long read(okio.Buffer,long)
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory_Factory: com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory get()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
okhttp3.internal.http2.Http2Reader$Handler: void headers(boolean,int,int,java.util.List)
okhttp3.OkHttpClient$Builder: void setReadTimeout$okhttp(int)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisPercentJNI(long,float)
io.reactivex.Observable: io.reactivex.observers.TestObserver test()
androidx.appcompat.widget.SwitchCompat: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
io.reactivex.Observable: io.reactivex.Observable mergeArray(int,int,io.reactivex.ObservableSource[])
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: Http2Connection$pushRequestLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,java.util.List)
com.polidea.rxandroidble2.scan.ScanFilter: boolean deepEquals(byte[],byte[])
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex copy$default(okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex,javax.net.ssl.X509TrustManager,java.lang.reflect.Method,int,java.lang.Object)
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool: AshmemMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
okhttp3.internal.http2.Http2Stream$StreamTimeout: void exitAndThrowIfTimedOut()
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: android.view.ActionMode onWindowStartingActionMode(android.view.Window$Callback,android.view.ActionMode$Callback,int)
io.reactivex.Flowable: void blockingForEach(io.reactivex.functions.Consumer)
com.polidea.rxandroidble2.internal.connection.ThrowingIllegalOperationHandler_Factory: java.lang.Object get()
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event valueOf(java.lang.String)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder -addInterceptor(kotlin.jvm.functions.Function1)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
io.reactivex.Observable: io.reactivex.Observable concatMapMaybe(io.reactivex.functions.Function,int)
okhttp3.internal.http2.Header: Header(java.lang.String,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: CatalystInstanceImpl$1$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1$1)
okhttp3.internal.Util: java.lang.Throwable withSuppressed(java.lang.Exception,java.util.List)
com.polidea.rxandroidble2.internal.DeviceModule_ProvideConnectionStateRelayFactory: java.lang.Object get()
com.facebook.react.bridge.interop.InteropModuleRegistry: com.facebook.react.bridge.JavaScriptModule getInteropModule(java.lang.Class)
okhttp3.OkHttpClient: java.util.List interceptors()
com.facebook.fbreact.specs.NativeImageEditorSpec: java.lang.String getName()
okhttp3.HttpUrl$Companion: HttpUrl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.DefaultJSExceptionHandler: DefaultJSExceptionHandler()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionPercentJNI(long,int,float)
okhttp3.internal.cache2.Relay: void commit(long)
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager()
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: NativeHeadlessJsTaskSupportSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentBuilder: DaggerClientComponent$ConnectionComponentBuilder(com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl,com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl,com.polidea.rxandroidble2.DaggerClientComponent$1)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$5: AsyncStorageModule$5(com.reactnativecommunity.asyncstorage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback)
io.reactivex.Observable: io.reactivex.Observable zipWith(io.reactivex.ObservableSource,io.reactivex.functions.BiFunction)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
okhttp3.internal.connection.Exchange: okhttp3.Headers trailers()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegment(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.Headers: int size()
okhttp3.OkHttpClient$Builder: java.util.List getInterceptors$okhttp()
io.reactivex.Observable: io.reactivex.Observable withLatestFrom(io.reactivex.ObservableSource[],io.reactivex.functions.Function)
com.polidea.rxandroidble2.scan.ScanFilter: byte[] getServiceData()
okhttp3.internal.ws.WebSocketWriter: void writePong(okio.ByteString)
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23_Factory: java.lang.Object get()
com.reactnativecommunity.asyncstorage.AsyncStorageExpoMigration: void copyFile(java.io.FileInputStream,java.io.FileOutputStream)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,java.lang.Integer)
com.reactnativecommunity.asyncstorage.AsyncStorageExpoMigration: java.util.ArrayList getExpoDatabases(android.content.Context)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightJNI(long,float)
com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker$1: IllegalOperationChecker$1(com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker,android.bluetooth.BluetoothGattCharacteristic,int)
com.polidea.rxandroidble2.scan.BackgroundScanner: void stopBackgroundBleScan(android.app.PendingIntent)
io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit)
com.polidea.rxandroidble2.exceptions.BleGattException: int getStatus()
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState[] values()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDataDetectorType(com.facebook.react.views.text.ReactTextView,java.lang.String)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: StandardAndroidSocketAdapter(java.lang.Class,java.lang.Class,java.lang.Class)
okhttp3.CertificatePinner: java.util.Set getPins()
okhttp3.CacheControl: boolean -deprecated_immutable()
okhttp3.internal.http2.Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1: void onStream(okhttp3.internal.http2.Http2Stream)
com.polidea.rxandroidble2.internal.util.CheckerConnectPermission_Factory: com.polidea.rxandroidble2.internal.util.CheckerConnectPermission get()
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetGapJNI(long,int)
com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker$1: void run()
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$2$1: void cancel()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl: void terminate(com.polidea.rxandroidble2.exceptions.BleException)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(android.view.View,float)
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer resolveResourcePath(android.content.Context,java.lang.String)
com.polidea.rxandroidble2.RxBleAdapterStateObservable$1$2: void cancel()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month[] values()
com.polidea.rxandroidble2.exceptions.BleCannotSetCharacteristicNotificationException: int getReason()
com.facebook.react.uimanager.BaseViewManager: void setPointerMoveCapture(android.view.View,boolean)
okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String)
com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl: void stopBackgroundBleScan(android.app.PendingIntent)
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
com.facebook.react.modules.blob.BlobModule: void addWebSocketHandler(double)
com.facebook.react.modules.blob.BlobModule: void release(java.lang.String)
com.polidea.rxandroidble2.internal.util.ClientStateObservable$3: io.reactivex.Observable apply(com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: TurboModuleManagerDelegate()
com.polidea.rxandroidble2.internal.util.BluetoothManagerWrapper: BluetoothManagerWrapper(android.bluetooth.BluetoothManager)
com.polidea.rxandroidble2.internal.QueueOperation: com.polidea.rxandroidble2.internal.Priority definedPriority()
com.facebook.soloader.SoLoader: java.util.concurrent.atomic.AtomicInteger access$200()
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
com.bleplx.BlePlxModule: void lambda$new$0(java.lang.Throwable)
com.polidea.rxandroidble2.ClientComponent$ClientModule: io.reactivex.Observable bindStateObs(com.polidea.rxandroidble2.RxBleAdapterStateObservable)
com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry: int compareTo(com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry)
com.facebook.react.bridge.CatalystInstanceImpl: void setSourceURLs(java.lang.String,java.lang.String)
androidx.core.app.NavUtils$Api16Impl: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
com.facebook.react.uimanager.UIManagerModule: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
okhttp3.internal.http2.Settings: okhttp3.internal.http2.Settings set(int,int)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$2: void onConnectionStateChange(android.bluetooth.BluetoothGatt,int,int)
okhttp3.internal.platform.Android10Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
io.reactivex.Observable: io.reactivex.Maybe elementAt(long)
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator: io.reactivex.ObservableTransformer emulateScanMode(int)
com.facebook.soloader.UnpackingSoSource: UnpackingSoSource(android.content.Context,java.io.File)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontVariant(com.facebook.react.bridge.ReadableArray)
com.polidea.rxandroidble2.internal.serialization.RxBleThreadFactory$RxBleNonBlockingThread: RxBleThreadFactory$RxBleNonBlockingThread(java.lang.Runnable,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: java.lang.Object getEventDispatcher()
okhttp3.Response: okhttp3.Response$Builder newBuilder()
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String,int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginPercentJNI(long,int,float)
okhttp3.internal.cache.DiskLruCache: boolean access$getHasJournalErrors$p(okhttp3.internal.cache.DiskLruCache)
com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter: AndroidScanObjectsConverter(int)
okhttp3.internal.Util: java.lang.String toHexString(int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.polidea.rxandroidble2.internal.connection.DisconnectAction: void onConnectionUnsubscribed()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void applyAndAckSettings(boolean,okhttp3.internal.http2.Settings)
okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion: RetryAndFollowUpInterceptor$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.polidea.rxandroidble2.internal.connection.MtuWatcher: void onConnectionSubscribed()
com.facebook.react.CompositeReactPackageTurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
com.facebook.react.ReactRootView: int getWidthMeasureSpec()
com.facebook.react.modules.network.NetworkingModule: void removeRequest(int)
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideIllegalOperationHandlerFactory: com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideIllegalOperationHandlerFactory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.internal.cache2.Relay: void setUpstreamReader(java.lang.Thread)
okhttp3.internal.http2.Http2Reader$Companion: int lengthWithoutPadding(int,int,int)
okhttp3.Cookie$Companion: Cookie$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.ReactContext: boolean hasCatalystInstance()
com.polidea.rxandroidble2.internal.RxBleLog$2: RxBleLog$2(com.polidea.rxandroidble2.internal.RxBleLog$Logger)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ping(boolean,int,int)
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi23: boolean areFiltersSpecified(com.polidea.rxandroidble2.scan.ScanFilter[])
com.bleplx.BlePlxModule: void descriptorsForService(int,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
io.reactivex.Flowable: java.lang.Iterable blockingLatest()
com.facebook.soloader.NativeDepsUnpacker: java.io.File getNativeDepsFilePath(android.content.Context)
androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.polidea.rxandroidble2.exceptions.BleGattOperationType: BleGattOperationType(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeOffset(double,double)
io.reactivex.Single: io.reactivex.Single timeout(long,java.util.concurrent.TimeUnit)
com.facebook.react.modules.debug.DevSettingsModule: void setProfilingEnabled(boolean)
okhttp3.internal.http2.Settings$Companion: Settings$Companion()
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
okhttp3.internal.cache.CacheRequest: void abort()
com.facebook.react.fabric.FabricUIManager: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
okhttp3.internal.concurrent.TaskQueue: void setActiveTask$okhttp(okhttp3.internal.concurrent.Task)
okhttp3.internal.cache.DiskLruCache: void initialize()
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
okhttp3.HttpUrl$Builder$Companion: int access$portColonOffset(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: java.lang.String getName()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Single readCharacteristic(java.util.UUID)
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatCheckedTextView: void setEmojiCompatEnabled(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontFamily(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
okhttp3.HttpUrl$Builder: java.lang.String getEncodedPassword$okhttp()
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.facebook.react.devsupport.JSCHeapCapture: JSCHeapCapture(com.facebook.react.bridge.ReactApplicationContext)
com.bleplx.adapter.BleModule: java.lang.String getName()
com.facebook.react.bridge.OnBatchCompleteListener: void onBatchComplete()
com.facebook.react.views.scroll.ReactScrollView: void setLastScrollDispatchTime(long)
okhttp3.internal.ws.WebSocketExtensions: boolean component1()
com.facebook.react.uimanager.ViewManager: java.lang.String getName()
com.polidea.rxandroidble2.internal.operations.DescriptorReadOperation: java.lang.String toString()
com.polidea.rxandroidble2.internal.connection.ConnectorImpl_Factory: com.polidea.rxandroidble2.internal.connection.ConnectorImpl_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.internal.platform.Platform: void log(java.lang.String,int,java.lang.Throwable)
okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)
com.facebook.react.uimanager.BaseViewManager: void setPointerLeave(android.view.View,boolean)
com.facebook.react.modules.image.ImageLoaderModule: void onHostPause()
com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper_Factory: com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper newInstance(android.bluetooth.BluetoothAdapter)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthAutoJNI(long)
okhttp3.internal.http.RealInterceptorChain: RealInterceptorChain(okhttp3.internal.connection.RealCall,java.util.List,int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int)
androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)
androidx.core.app.ActivityCompat$Api21Impl: void setEnterSharedElementCallback(android.app.Activity,android.app.SharedElementCallback)
com.bleplx.adapter.BleModule: void requestMTUForDevice(java.lang.String,int,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl: io.reactivex.Observable build()
io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.BiFunction)
kotlin.jvm.internal.PropertyReference: boolean equals(java.lang.Object)
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType[] values()
okhttp3.HttpUrl$Companion: void writePercentDecoded(okio.Buffer,java.lang.String,int,int,boolean)
okhttp3.internal.connection.RealCall$timeout$1: RealCall$timeout$1(okhttp3.internal.connection.RealCall)
okhttp3.internal.http.BridgeInterceptor: java.lang.String cookieHeader(java.util.List)
okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$602(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
okhttp3.HttpUrl$Companion: void toPathString$okhttp(java.util.List,java.lang.StringBuilder)
com.facebook.react.fabric.BindingImpl: void installFabricUIManager(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.bridge.RuntimeScheduler,com.facebook.react.fabric.FabricUIManager,com.facebook.react.fabric.events.EventBeatManager,com.facebook.react.fabric.ComponentFactory,java.lang.Object)
io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(org.reactivestreams.Publisher[],io.reactivex.functions.Function)
kotlin.jvm.internal.CallableReference: boolean isOpen()
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
okhttp3.ConnectionSpec: java.lang.String[] access$getTlsVersionsAsString$p(okhttp3.ConnectionSpec)
okhttp3.Response$Builder: okhttp3.Protocol getProtocol$okhttp()
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.facebook.react.modules.devloading.DevLoadingModule: void showMessage(java.lang.String,java.lang.Double,java.lang.Double)
io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,long,java.util.concurrent.TimeUnit)
com.facebook.hermes.intl.Collator: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodes(double,double)
io.reactivex.Observable: io.reactivex.Observable dematerialize(io.reactivex.functions.Function)
com.facebook.react.bridge.ReadableArray: boolean isNull(int)
com.bleplx.adapter.BleModule: com.polidea.rxandroidble2.RxBleConnection lambda$safeConnectToDevice$23(com.polidea.rxandroidble2.RxBleConnection,java.lang.Boolean)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,okio.ByteString)
okhttp3.internal.platform.android.DeferredSocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi21_Factory: ScanSetupBuilderImplApi21_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.animated.NativeAnimatedModule: void extractAnimatedNodeOffset(double)
okhttp3.internal.concurrent.TaskLoggerKt: java.lang.Object logElapsed(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0)
okhttp3.internal.connection.RealCall$AsyncCall: java.lang.String getHost()
com.polidea.rxandroidble2.RxBleAdapterStateObservable$1: void subscribe(io.reactivex.ObservableEmitter)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: void run()
com.facebook.imagepipeline.platform.PreverificationHelper: boolean shouldUseHardwareBitmapConfig(android.graphics.Bitmap$Config)
okhttp3.OkHttpClient$Builder: javax.net.ssl.HostnameVerifier getHostnameVerifier$okhttp()
okhttp3.Cookie: boolean -deprecated_persistent()
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])
com.facebook.react.uimanager.ComponentNameResolverManager: void staticInit()
io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.views.modal.ReactModalHostView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.polidea.rxandroidble2.internal.operations.DescriptorWriteOperation: io.reactivex.Single getCallback(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback)
com.bleplx.BlePlxModule: void removeListeners(int)
io.reactivex.Observable: io.reactivex.Observable take(long)
com.facebook.react.views.textinput.ReactEditText: void setGravityHorizontal(int)
com.polidea.rxandroidble2.internal.scan.ScanFilterInterface: boolean isAllFieldsEmpty()
okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)
androidx.core.content.res.ResourcesCompat$Api15Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int)
com.bleplx.adapter.errors.BleErrorCode: com.bleplx.adapter.errors.BleErrorCode valueOf(java.lang.String)
okhttp3.HttpUrl$Companion: java.lang.String percentDecode$okhttp(java.lang.String,int,int,boolean)
com.facebook.react.bridge.queue.MessageQueueThread: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable$3: void run()
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableType getType()
okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes valueOf(java.lang.String)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskRunner access$getTaskRunner$p(okhttp3.internal.http2.Http2Connection)
com.facebook.fbreact.specs.NativeRedBoxSpec: java.lang.String getName()
com.facebook.react.bridge.ReadableNativeMap: boolean isNull(java.lang.String)
okhttp3.internal.platform.Platform$Companion: boolean isConscryptPreferred()
com.polidea.rxandroidble2.internal.util.ScanRecordParser: int parseServiceSolicitationUuid(byte[],int,int,int,java.util.List)
com.facebook.react.fabric.FabricUIManager: long measureMapBuffer(int,java.lang.String,com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,float,float,float,float,float[])
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetGapJNI(long,int,float)
okhttp3.OkHttpClient: int connectTimeoutMillis()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder password(java.lang.String)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addListener(java.lang.String)
okhttp3.FormBody$Builder: FormBody$Builder()
okhttp3.CertificatePinner: java.lang.String pin(java.security.cert.Certificate)
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy[] values()
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel valueOf(java.lang.String)
com.facebook.react.bridge.ReactContext: void assertOnUiQueueThread()
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18$1: io.reactivex.ObservableSource apply(io.reactivex.Observable)
androidx.core.view.ViewCompat$Api31Impl: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
io.reactivex.Flowable: io.reactivex.Flowable switchMap(io.reactivex.functions.Function,int)
io.reactivex.Flowable: io.reactivex.Flowable defaultIfEmpty(java.lang.Object)
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: boolean hasModule(java.lang.String)
okhttp3.HttpUrl$Builder$Companion: HttpUrl$Builder$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.cache.DiskLruCache: void access$setInitialized$p(okhttp3.internal.cache.DiskLruCache,boolean)
io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,long,java.util.concurrent.TimeUnit)
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices_Factory: java.lang.Object get()
com.facebook.react.bridge.ReactContext: void runOnNativeModulesQueueThread(java.lang.Runnable)
okhttp3.internal.ws.RealWebSocket$Message: okio.ByteString getData()
com.polidea.rxandroidble2.internal.connection.ConnectionModule: android.bluetooth.BluetoothGatt provideBluetoothGatt(com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.concurrent.Task: void initQueue$okhttp(okhttp3.internal.concurrent.TaskQueue)
com.facebook.react.defaults.DefaultReactNativeHost: com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder getReactPackageTurboModuleManagerDelegateBuilder()
io.reactivex.Flowable: io.reactivex.Flowable timeout(long,java.util.concurrent.TimeUnit)
okhttp3.internal.cache.DiskLruCache$Companion: DiskLruCache$Companion()
com.facebook.react.uimanager.BaseViewManager: void setMoveShouldSetResponderCapture(android.view.View,boolean)
io.reactivex.Flowable: io.reactivex.Flowable flatMapSingle(io.reactivex.functions.Function)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationManagerFactory: java.lang.Object get()
okhttp3.OkHttpClient$Builder: javax.net.SocketFactory getSocketFactory$okhttp()
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
okhttp3.MediaType: MediaType(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])
com.facebook.hermes.intl.Intl: java.lang.String toLocaleLowerCase(java.util.List,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
okhttp3.internal.cache.DiskLruCache$snapshots$1: boolean hasNext()
io.reactivex.Single: io.reactivex.Flowable mergeWith(io.reactivex.SingleSource)
okhttp3.internal.platform.ConscryptPlatform$Companion: ConscryptPlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void clear(com.facebook.react.bridge.Callback)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removePathSegment(int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatRadioButton: void setEmojiCompatEnabled(boolean)
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1: void invoke(java.io.IOException)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.RuntimeExecutor getBufferedRuntimeExecutor()
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18: com.polidea.rxandroidble2.internal.scan.ScanSetup build(com.polidea.rxandroidble2.scan.ScanSettings,com.polidea.rxandroidble2.scan.ScanFilter[])
okhttp3.ResponseBody: okhttp3.MediaType contentType()
com.facebook.react.bridge.JavaOnlyMap: boolean equals(java.lang.Object)
okhttp3.internal.cache.DiskLruCache: boolean access$getMostRecentTrimFailed$p(okhttp3.internal.cache.DiskLruCache)
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyLabel(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager: void receiveCommand(com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlay,java.lang.String,com.facebook.react.bridge.ReadableArray)
io.reactivex.Flowable: io.reactivex.Single single(java.lang.Object)
com.facebook.react.bridge.JsonWriterHelper: void readableArrayValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableArray)
okhttp3.CacheControl$Builder: int clampToInt(long)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
io.reactivex.Observable: io.reactivex.Single last(java.lang.Object)
com.facebook.react.views.image.ReactImageManager: void setBorderWidth(com.facebook.react.views.image.ReactImageView,float)
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl_Factory: com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl get()
io.reactivex.Observable: java.lang.Object blockingFirst(java.lang.Object)
androidx.appcompat.app.AppCompatActivity: void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
okhttp3.ResponseBody: java.nio.charset.Charset charset()
com.facebook.yoga.YogaNative: long jni_YGNodeNewJNI()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostDestroy()
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult: com.polidea.rxandroidble2.scan.ScanCallbackType getScanCallbackType()
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(android.view.View,boolean)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(byte[],okhttp3.MediaType,int,int)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream newStream(int,java.util.List,boolean)
com.facebook.react.bridge.DynamicFromArray: boolean isNull()
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator: io.reactivex.functions.Function toMatchLost()
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator: ScanSettingsEmulator(io.reactivex.Scheduler)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void dismissActionSheet()
com.polidea.rxandroidble2.internal.cache.DeviceComponentWeakReference: DeviceComponentWeakReference(com.polidea.rxandroidble2.internal.DeviceComponent,java.lang.ref.ReferenceQueue)
com.facebook.react.views.text.ReactTextAnchorViewManager: ReactTextAnchorViewManager()
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: long runOnce()
com.facebook.react.modules.network.NetworkingModule: void removeListeners(double)
com.facebook.react.bridge.UIManager: java.lang.Object getEventDispatcher()
com.facebook.react.modules.appstate.AppStateModule: void onWindowFocusChange(boolean)
com.polidea.rxandroidble2.internal.util.ScanRecordParser_Factory: ScanRecordParser_Factory()
okio.ForwardingSource: long read(okio.Buffer,long)
com.polidea.rxandroidble2.internal.util.ClientStateObservable$4: ClientStateObservable$4(com.polidea.rxandroidble2.internal.util.ClientStateObservable)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideComputationSchedulerFactory$InstanceHolder: ClientComponent_ClientModule_ProvideComputationSchedulerFactory$InstanceHolder()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.CertificatePinner$Pin: CertificatePinner$Pin(java.lang.String,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
com.polidea.rxandroidble2.internal.connection.ConnectorImpl_Factory: ConnectorImpl_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl: com.polidea.rxandroidble2.internal.operations.MtuRequestOperation provideMtuChangeOperation(int)
okhttp3.internal.cache.DiskLruCache: void rebuildJournal$okhttp()
com.polidea.rxandroidble2.LogOptions$Builder: com.polidea.rxandroidble2.LogOptions$Builder setLogger(com.polidea.rxandroidble2.LogOptions$Logger)
androidx.appcompat.widget.DrawableUtils$Api29Impl: android.graphics.Insets getOpticalInsets(android.graphics.drawable.Drawable)
io.reactivex.Flowable: io.reactivex.Single elementAtOrError(long)
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.views.view.ReactViewManager: java.util.Map getCommandsMap()
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable$2: boolean test(com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.text.ReactTextView)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.bleplx.BlePlxModule: void stopDeviceScan(com.facebook.react.bridge.Promise)
com.facebook.soloader.SysUtil: void dumbDeleteRecursive(java.io.File)
okhttp3.internal.connection.RealConnection: void establishProtocol(okhttp3.internal.connection.ConnectionSpecSelector,int,okhttp3.Call,okhttp3.EventListener)
com.facebook.react.uimanager.LayoutShadowNode: void setHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.polidea.rxandroidble2.helpers.LocationServicesOkObservable_Factory: java.lang.Object get()
com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl: com.polidea.rxandroidble2.scan.ScanResult convertScanResultToRxAndroidBLEModel(int,android.bluetooth.le.ScanResult)
com.facebook.react.turbomodule.core.TurboModuleManager: void installJSIBindings(boolean)
com.facebook.react.bridge.WritableMap: void putDouble(java.lang.String,double)
okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)
com.polidea.rxandroidble2.DaggerClientComponent$Builder: com.polidea.rxandroidble2.ClientComponent build()
com.polidea.rxandroidble2.internal.util.BleConnectionCompat: android.bluetooth.BluetoothGatt createBluetoothGatt(java.lang.Object,android.bluetooth.BluetoothDevice)
io.reactivex.Flowable: io.reactivex.Flowable switchIfEmpty(org.reactivestreams.Publisher)
okhttp3.internal.concurrent.TaskQueue$schedule$2: long runOnce()
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.bleplx.adapter.BleModule: void lambda$safeReadCharacteristicForDevice$34(com.bleplx.adapter.utils.SafeExecutor,java.lang.String)
com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation: java.lang.String connectionPriorityToString(int)
com.facebook.react.modules.websocket.WebSocketModule: void setContentHandler(int,com.facebook.react.modules.websocket.WebSocketModule$ContentHandler)
okhttp3.Headers: Headers(java.lang.String[])
com.bleplx.BlePlxModule: void monitorCharacteristic(int,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void getSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.activity.ComponentActivity: void reportFullyDrawn()
io.reactivex.Flowable: io.reactivex.Flowable concatEager(org.reactivestreams.Publisher,int,int)
com.polidea.rxandroidble2.internal.util.ByteAssociationUtil: io.reactivex.functions.Predicate characteristicUUIDPredicate(java.util.UUID)
io.reactivex.Observable: io.reactivex.Observable window(long,long,int)
com.facebook.react.animated.NativeAnimatedModule: void initialize()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableType getType(int)
com.facebook.react.bridge.ReactMarker: ReactMarker()
com.facebook.react.views.text.ReactTextView: void setBorderStyle(java.lang.String)
com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation_Factory: com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation newInstance(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration,int,com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
okhttp3.Headers$Companion: java.lang.String access$get(okhttp3.Headers$Companion,java.lang.String[],java.lang.String)
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.bridge.Inspector$Page: java.lang.String toString()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideRecommendedConnectRuntimePermissionNamesFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideRecommendedConnectRuntimePermissionNamesFactory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
io.reactivex.Observable: io.reactivex.Observable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSink getSink$okhttp()
com.facebook.react.uimanager.UIManagerModule: void updateNodeSize(int,int,int)
okhttp3.Cookie$Companion: java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers)
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier getInstance(android.content.Context)
com.facebook.react.uimanager.ViewGroupManager: void removeViewAt(android.view.ViewGroup,int)
okhttp3.internal.ws.RealWebSocket$connect$1: RealWebSocket$connect$1(okhttp3.internal.ws.RealWebSocket,okhttp3.Request)
okhttp3.internal.connection.RealCall$AsyncCall: void reuseCallsPerHostFrom(okhttp3.internal.connection.RealCall$AsyncCall)
com.ghostcommv2.R: R()
com.polidea.rxandroidble2.internal.DeviceModule: android.bluetooth.BluetoothDevice provideBluetoothDevice(java.lang.String,com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper)
com.facebook.react.defaults.DefaultComponentsRegistry: DefaultComponentsRegistry(com.facebook.react.fabric.ComponentFactory)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils: DalvikPurgeableDecoder$OreoUtils()
io.reactivex.Flowable: io.reactivex.Maybe lastElement()
org.linusu.RNGetRandomValuesModule: java.lang.String getName()
okhttp3.internal.http2.Http2Connection: Http2Connection(okhttp3.internal.http2.Http2Connection$Builder)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
okhttp3.OkHttpClient$Builder: void setCache$okhttp(okhttp3.Cache)
okhttp3.internal.platform.android.Android10SocketAdapter: Android10SocketAdapter()
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(android.view.View,int)
com.polidea.rxandroidble2.internal.scan.EmulatedScanFilterMatcher: java.lang.String toString()
okhttp3.internal.concurrent.Task: java.lang.String toString()
com.polidea.rxandroidble2.internal.operations.OperationsProvider: com.polidea.rxandroidble2.internal.operations.ServiceDiscoveryOperation provideServiceDiscoveryOperation(long,java.util.concurrent.TimeUnit)
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String,java.lang.Throwable)
com.polidea.rxandroidble2.internal.cache.DeviceComponentWeakReference$Provider: com.polidea.rxandroidble2.internal.cache.DeviceComponentWeakReference provide(com.polidea.rxandroidble2.internal.DeviceComponent)
okhttp3.Response$Builder: void initExchange$okhttp(okhttp3.internal.connection.Exchange)
okhttp3.internal.http2.Http2Connection: void close()
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$2: ServiceDiscoveryManager$2(com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager)
okhttp3.Request$Builder: okhttp3.Request$Builder get()
com.facebook.react.bridge.JSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.polidea.rxandroidble2.internal.connection.ConnectorImpl: io.reactivex.Observable prepareConnection(com.polidea.rxandroidble2.ConnectionSetup)
com.facebook.react.bridge.ReadableNativeMap$2: java.lang.String nextKey()
com.polidea.rxandroidble2.internal.connection.ConnectionComponent$NamedBooleans: ConnectionComponent$NamedBooleans()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$5: RxBleConnectionImpl$5(com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl,byte[])
io.reactivex.Observable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)
okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getFactory()
com.facebook.react.modules.image.ImageLoaderModule: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
io.reactivex.Observable: io.reactivex.Observable generate(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: byte[] lambda$observeOnCharacteristicChangeCallbacks$8(com.polidea.rxandroidble2.internal.util.CharacteristicChangedEvent)
okhttp3.Response$Builder: long getSentRequestAtMillis$okhttp()
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: boolean onSearchRequested(android.view.Window$Callback,android.view.SearchEvent)
com.polidea.rxandroidble2.ConnectionParameters: int getConnectionInterval()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.Collection getNativeModules()
okhttp3.internal.http2.Http2Reader: void readConnectionPreface(okhttp3.internal.http2.Http2Reader$Handler)
com.polidea.rxandroidble2.internal.operations.DisconnectOperation: java.lang.String toString()
com.facebook.fbreact.specs.NativeToastAndroidSpec: void show(java.lang.String,double)
com.polidea.rxandroidble2.internal.logger.LoggerUtil: void logCallback(java.lang.String,android.bluetooth.BluetoothGatt,int,android.bluetooth.BluetoothGattCharacteristic,boolean)
okhttp3.EventListener: void secureConnectEnd(okhttp3.Call,okhttp3.Handshake)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.polidea.rxandroidble2.internal.connection.ConnectionComponent: com.polidea.rxandroidble2.internal.connection.RxBleGattCallback gattCallback()
io.reactivex.Flowable: io.reactivex.Flowable sample(long,java.util.concurrent.TimeUnit)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String)
com.facebook.react.views.text.ReactTextView: void setLinkifyMask(int)
io.reactivex.Single: java.lang.Object to(io.reactivex.functions.Function)
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSource getSource$okhttp()
com.polidea.rxandroidble2.internal.connection.ConnectionModule: com.polidea.rxandroidble2.RxBleConnection bindRxBleConnection(com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl)
okhttp3.internal.http2.Http2Stream: Http2Stream(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers)
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache: void clear()
com.polidea.rxandroidble2.internal.util.BluetoothManagerWrapper_Factory: com.polidea.rxandroidble2.internal.util.BluetoothManagerWrapper get()
okhttp3.HttpUrl: java.util.Set queryParameterNames()
io.reactivex.Observable: io.reactivex.Single single(java.lang.Object)
okhttp3.CacheControl: int -deprecated_maxAgeSeconds()
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: DaggerClientComponent$ClientComponentImpl(android.content.Context)
okhttp3.Request: okhttp3.Headers -deprecated_headers()
okhttp3.internal.platform.AndroidPlatform: boolean access$isSupported$cp()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExecutor(com.facebook.react.bridge.JavaScriptExecutor)
io.reactivex.Single: io.reactivex.Single fromFuture(java.util.concurrent.Future,io.reactivex.Scheduler)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
okhttp3.CacheControl: boolean mustRevalidate()
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1$3: ScanSettingsEmulator$1$3(com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1)
com.facebook.hermes.intl.DateTimeFormat: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
okhttp3.internal.http.ExchangeCodec: okio.Source openResponseBodySource(okhttp3.Response)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedCallback newOnBackInvokedCallback(java.lang.Runnable)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
io.reactivex.Flowable: io.reactivex.Flowable sorted(java.util.Comparator)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableIndicationValueFactory: java.lang.Object get()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
androidx.drawerlayout.widget.DrawerLayout: void setDrawerElevation(float)
com.facebook.jni.DestructorThread$1: DestructorThread$1(java.lang.String)
okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.internal.http2.Http2Stream: int getId()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDeviceSdkFactory$InstanceHolder: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDeviceSdkFactory access$000()
io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function5)
io.reactivex.Observable: io.reactivex.Observable buffer(io.reactivex.ObservableSource,io.reactivex.functions.Function)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: java.lang.String getSelected()
okhttp3.HttpUrl: java.lang.String -deprecated_encodedPassword()
okhttp3.internal.connection.RealConnection: okhttp3.Protocol protocol()
okhttp3.MultipartReader$Companion: okio.Options getAfterBoundaryOptions()
androidx.appcompat.widget.Toolbar: void setBackInvokedCallbackEnabled(boolean)
io.reactivex.Flowable: io.reactivex.Flowable switchMapDelayError(io.reactivex.functions.Function,int)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingEnd(android.view.View)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: long runOnce()
io.reactivex.Flowable: io.reactivex.Flowable rebatchRequests(int)
okhttp3.Cache: void setWriteSuccessCount$okhttp(int)
com.polidea.rxandroidble2.internal.connection.ConnectionParametersImpl: int getSupervisionTimeout()
okhttp3.OkHttpClient$Companion: OkHttpClient$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.OkHttpClient: int pingIntervalMillis()
com.reactnativecommunity.asyncstorage.AsyncStoragePackage$1: java.util.Map getReactModuleInfos()
com.polidea.rxandroidble2.internal.RxBleLog: int getMacAddressLogSetting()
com.polidea.rxandroidble2.DaggerClientComponent$Builder: DaggerClientComponent$Builder(com.polidea.rxandroidble2.DaggerClientComponent$1)
io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)
com.facebook.react.modules.network.NetworkingModule: void removeResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
androidx.core.widget.TextViewCompat$Api16Impl: int getMaxLines(android.widget.TextView)
com.facebook.react.bridge.UIManagerProvider: com.facebook.react.bridge.UIManager createUIManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.GuardedRunnable: void runGuarded()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startOperationBatch()
io.reactivex.Flowable: io.reactivex.Maybe elementAt(long)
io.reactivex.Single: io.reactivex.Single contains(java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.polidea.rxandroidble2.RxBleClientImpl_Factory: com.polidea.rxandroidble2.RxBleClientImpl newInstance(com.polidea.rxandroidble2.internal.util.BluetoothManagerWrapper,com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,com.polidea.rxandroidble2.internal.serialization.ClientOperationQueue,io.reactivex.Observable,com.polidea.rxandroidble2.internal.util.ScanRecordParser,com.polidea.rxandroidble2.internal.util.LocationServicesStatus,bleshadow.dagger.Lazy,com.polidea.rxandroidble2.internal.RxBleDeviceProvider,com.polidea.rxandroidble2.internal.scan.ScanSetupBuilder,com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifier,io.reactivex.functions.Function,io.reactivex.Scheduler,com.polidea.rxandroidble2.ClientComponent$ClientComponentFinalizer,com.polidea.rxandroidble2.scan.BackgroundScanner,com.polidea.rxandroidble2.internal.util.CheckerScanPermission,com.polidea.rxandroidble2.internal.util.CheckerConnectPermission)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl_Factory: com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl get()
io.reactivex.Flowable: io.reactivex.Flowable timeout(io.reactivex.functions.Function)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
okhttp3.internal.connection.RouteSelector$Selection: java.util.List getRoutes()
okhttp3.EventListener: void cacheConditionalHit(okhttp3.Call,okhttp3.Response)
com.facebook.react.views.image.ReactImageView: void setTileMode(android.graphics.Shader$TileMode)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream removeStream$okhttp(int)
com.polidea.rxandroidble2.internal.RxBleLog: boolean getShouldLogAttributeValues()
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation: io.reactivex.functions.Predicate writeResponseForMatchingCharacteristic(android.bluetooth.BluetoothGattCharacteristic)
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody)
okhttp3.Headers$Companion: Headers$Companion()
okhttp3.OkHttpClient: okhttp3.Authenticator authenticator()
okhttp3.Response$Builder: void setRequest$okhttp(okhttp3.Request)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedBundleFromNetworkLoader(java.lang.String,java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void restoreDefaultValues(double)
com.polidea.rxandroidble2.ClientComponent$NamedExecutors: ClientComponent$NamedExecutors()
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String getAndroidID()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
io.reactivex.Observable: java.lang.Iterable blockingIterable(int)
io.reactivex.Flowable: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function)
com.facebook.soloader.ExoSoSource$FileDso: ExoSoSource$FileDso(java.lang.String,java.lang.String,java.io.File)
com.polidea.rxandroidble2.exceptions.BleGattCannotStartException: BleGattCannotStartException(com.polidea.rxandroidble2.exceptions.BleGattOperationType)
okhttp3.Response$Builder: okhttp3.Response getPriorResponse$okhttp()
com.polidea.rxandroidble2.RxBleDeviceServices$6: RxBleDeviceServices$6(com.polidea.rxandroidble2.RxBleDeviceServices,java.util.UUID)
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: java.lang.String getName()
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
com.facebook.common.time.MonotonicNanoClock: long nowNanos()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityCollectionItem(android.view.View,com.facebook.react.bridge.ReadableMap)
com.bleplx.BlePlxModule: void readCharacteristicForDevice(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableMap getMap(int)
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback)
io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function7)
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: bleshadow.javax.inject.Provider access$1200(com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl)
com.polidea.rxandroidble2.internal.serialization.OperationPriorityFifoBlockingQueue: com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry takeNow()
com.facebook.react.uimanager.BaseViewManager: void setClickCapture(android.view.View,boolean)
com.facebook.react.bridge.ReactContext: void destroy()
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5$1: CharacteristicLongWriteOperation$5$1(com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Observable setupIndication(java.util.UUID)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothManagerFactory: android.bluetooth.BluetoothManager provideBluetoothManager(android.content.Context)
com.facebook.react.ReactActivity: void loadApp(java.lang.String)
com.polidea.rxandroidble2.internal.operations.ConnectOperation$4$1: boolean test(com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState)
okhttp3.internal.platform.Android10Platform: boolean access$isSupported$cp()
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory$1$2: void cancel()
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
io.reactivex.Flowable: io.reactivex.Flowable window(long,long,int)
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$2$1: ConnectionOperationQueueImpl$2$1(com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$2,com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry)
okhttp3.OkHttpClient: okhttp3.Dns -deprecated_dns()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Observable setupNotification(java.util.UUID,com.polidea.rxandroidble2.NotificationSetupMode)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$2: ScanSettingsEmulator$2(com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator,int,long)
com.polidea.rxandroidble2.internal.logger.LoggerUtil: void logCallback(java.lang.String,android.bluetooth.BluetoothGatt,int,int)
com.polidea.rxandroidble2.internal.connection.ConnectorImpl: void lambda$prepareConnection$0(java.util.Set,io.reactivex.disposables.Disposable)
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: long read(okio.Buffer,long)
com.polidea.rxandroidble2.internal.util.CheckerPermission_Factory: com.polidea.rxandroidble2.internal.util.CheckerPermission_Factory create(bleshadow.javax.inject.Provider)
com.facebook.react.bridge.JSIModulePackage: java.util.List getJSIModules(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.bridge.JavaScriptContextHolder)
com.polidea.rxandroidble2.internal.connection.IllegalOperationMessageCreator_Factory: java.lang.Object get()
com.facebook.react.ReactNativeHost: java.lang.String getBundleAssetName()
okhttp3.Response: java.util.List challenges()
okhttp3.Call: okio.Timeout timeout()
com.bleplx.adapter.BleModule: com.bleplx.adapter.Descriptor getDescriptor(int,java.lang.String,java.lang.String)
okhttp3.FormBody$Builder: okhttp3.FormBody$Builder addEncoded(java.lang.String,java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextDecorationLine(java.lang.String)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider)
okhttp3.MultipartReader: okio.BufferedSource access$getSource$p(okhttp3.MultipartReader)
com.facebook.react.bridge.WritableMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.polidea.rxandroidble2.scan.ScanFilter$Builder: com.polidea.rxandroidble2.scan.ScanFilter$Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)
com.bleplx.BlePlxModule: void requestConnectionPriorityForDevice(java.lang.String,int,java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
com.bleplx.BlePlxModule: void connectToDevice(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: ProxyJavaScriptExecutor$Factory(com.facebook.react.bridge.JavaJSExecutor$Factory)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5: java.lang.Object apply(java.lang.Object)
okhttp3.internal.connection.Exchange: okhttp3.ResponseBody openResponseBody(okhttp3.Response)
okhttp3.internal.concurrent.TaskRunner: TaskRunner(okhttp3.internal.concurrent.TaskRunner$Backend)
com.facebook.react.views.modal.ReactModalHostManager: java.util.Map getExportedCustomDirectEventTypeConstants()
io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher)
okhttp3.Cache: void close()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance()
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOn()
okhttp3.internal.connection.RealCall: boolean isCanceled()
androidx.startup.InitializationProvider: InitializationProvider()
com.facebook.react.views.scroll.ReactScrollViewManager: void setPointerEvents(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable retryUntil(io.reactivex.functions.BooleanSupplier)
com.reactnativecommunity.asyncstorage.AsyncLocalStorageUtil: java.lang.String getItemImpl(android.database.sqlite.SQLiteDatabase,java.lang.String)
okhttp3.Headers$Builder: okhttp3.Headers build()
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KCallable computeReflected()
okhttp3.internal.http.RequestLine: RequestLine()
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: Http2Connection$pushHeadersLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,java.util.List,boolean)
okhttp3.OkHttpClient$Companion: java.util.List getDEFAULT_PROTOCOLS$okhttp()
com.facebook.react.bridge.JSExceptionHandler: void handleException(java.lang.Exception)
com.facebook.soloader.NativeDeps: boolean useDepsFileFromApkSync(android.content.Context,boolean)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.polidea.rxandroidble2.internal.util.CheckerConnectPermission: java.lang.String[] getRecommendedConnectRuntimePermissions()
com.facebook.react.bridge.ReadableArray: boolean getBoolean(int)
com.polidea.rxandroidble2.ConnectionSetup$Builder: com.polidea.rxandroidble2.ConnectionSetup build()
androidx.core.view.ViewCompat$Api17Impl: void setLabelFor(android.view.View,int)
okhttp3.internal.Util: void closeQuietly(java.io.Closeable)
okhttp3.Address: okhttp3.Authenticator proxyAuthenticator()
okhttp3.internal.cache.DiskLruCache: okio.BufferedSink newJournalWriter()
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation[] values()
com.polidea.rxandroidble2.internal.logger.LoggerUtil: java.lang.String commonValueMessage()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: NativeLinkingManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.cache.DiskLruCache$Entry: java.util.List getDirtyFiles$okhttp()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noCache()
com.facebook.react.modules.appregistry.AppRegistry: void unmountApplicationComponentAtRootTag(int)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
androidx.lifecycle.ProcessLifecycleOwner$3: ProcessLifecycleOwner$3(androidx.lifecycle.ProcessLifecycleOwner)
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher[],io.reactivex.functions.Function,int)
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker$ZipBackedInputDsoIterator: boolean hasNext()
okhttp3.internal.http2.Http2Stream: void cancelStreamIfNecessary$okhttp()
com.facebook.react.modules.fresco.FrescoModule: java.lang.String getName()
com.facebook.fbreact.specs.NativeTimingSpec: void deleteTimer(double)
okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)
okhttp3.internal.http2.Http2Connection: void writePingAndAwaitPong()
com.polidea.rxandroidble2.internal.util.BleConnectionCompat: void setAutoConnectValue(android.bluetooth.BluetoothGatt,boolean)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
okhttp3.OkHttpClient$Builder: boolean getFollowSslRedirects$okhttp()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void announceForAccessibility(java.lang.String)
io.reactivex.Observable: io.reactivex.Single sequenceEqual(io.reactivex.ObservableSource,io.reactivex.ObservableSource)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
okhttp3.internal.connection.RealCall: okhttp3.Request request()
com.ghostcommv2.R$drawable: R$drawable()
okhttp3.Cookie: boolean hostOnly()
okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)
com.bleplx.adapter.BleModule: void lambda$safeReadDescriptorForDevice$11(com.bleplx.adapter.utils.SafeExecutor,java.lang.String,java.lang.Throwable)
okhttp3.internal.Util: long toLongOrDefault(java.lang.String,long)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: com.facebook.react.views.unimplementedview.ReactUnimplementedView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])
okhttp3.internal.cache.DiskLruCache: void delete()
okhttp3.internal.http2.Http2Reader$ContinuationSource: Http2Reader$ContinuationSource(okio.BufferedSource)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: java.lang.Object invoke()
okhttp3.internal.authenticator.JavaNetAuthenticator: JavaNetAuthenticator()
okhttp3.internal.connection.RealConnection: RealConnection(okhttp3.internal.connection.RealConnectionPool,okhttp3.Route)
com.facebook.react.modules.blob.FileReaderModule: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.internal.platform.android.DeferredSocketAdapter: boolean isSupported()
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule()
okhttp3.internal.Util: int toNonNegativeInt(java.lang.String,int)
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: byte[] toByteArray(com.facebook.react.bridge.ReadableArray)
com.facebook.soloader.Elf64_Phdr: Elf64_Phdr()
okhttp3.CipherSuite$Companion: CipherSuite$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.polidea.rxandroidble2.RxBleClientImpl: com.polidea.rxandroidble2.RxBleScanResult convertToPublicScanResult(com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResultLegacy)
com.facebook.react.bridge.CatalystInstanceImpl$1$1: void run()
com.facebook.soloader.NativeDeps: void verifyUninitialized()
okhttp3.internal.connection.RealCall: okio.AsyncTimeout timeout()
okhttp3.ConnectionSpec$Builder: boolean getSupportsTlsExtensions$okhttp()
com.facebook.react.views.textinput.ReactEditText: void setFontFeatureSettings(java.lang.String)
okhttp3.internal.http2.Http2Connection: void setLastGoodStreamId$okhttp(int)
io.reactivex.Flowable: io.reactivex.Flowable concat(java.lang.Iterable)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothInteractionExecutorServiceFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothInteractionExecutorServiceFactory create()
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl: com.polidea.rxandroidble2.RxBleConnection$LongWriteOperationBuilder setBytes(byte[])
kotlin.jvm.internal.PropertyReference: boolean isLateinit()
okhttp3.internal.http1.Http1ExchangeCodec: boolean isChunked(okhttp3.Request)
com.facebook.react.modules.clipboard.ClipboardModule: void getString(com.facebook.react.bridge.Promise)
com.polidea.rxandroidble2.internal.operations.CharacteristicWriteOperation: java.lang.String toString()
io.reactivex.Observable: io.reactivex.Observable share()
io.reactivex.observers.DisposableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.internal.platform.ConscryptPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.cache.DiskLruCache: int access$getRedundantOpCount$p(okhttp3.internal.cache.DiskLruCache)
okhttp3.Request$Builder: okhttp3.HttpUrl getUrl$okhttp()
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$7$1: java.lang.Object apply(java.lang.Object)
com.facebook.soloader.UnpackingSoSource: java.lang.Runnable createSyncer(com.facebook.soloader.FileLocker,byte[],java.io.File,java.io.File,com.facebook.soloader.UnpackingSoSource$DsoManifest,java.lang.Boolean)
io.reactivex.Observable: io.reactivex.Observable defer(java.util.concurrent.Callable)
com.facebook.react.uimanager.ViewGroupManager: int getChildCount(android.view.View)
io.reactivex.Flowable: java.lang.Object blockingLast(java.lang.Object)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$2: void onDescriptorRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactScrollView,boolean)
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setReactQueueConfigurationSpec(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.ReactCallerContextFactory)
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl$1: com.polidea.rxandroidble2.internal.DeviceComponent$Builder get()
okio.AsyncTimeout: okio.Sink sink(okio.Sink)
com.facebook.react.modules.network.NetworkingModule: void abortRequest(double)
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(int,io.reactivex.Scheduler)
okhttp3.WebSocket: boolean send(java.lang.String)
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi31: boolean isLocationProviderOk()
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
com.facebook.react.uimanager.BaseViewManager: void setResponderStart(android.view.View,boolean)
okhttp3.CacheControl: int minFreshSeconds()
com.polidea.rxandroidble2.internal.DeviceModule_ProvideConnectionStateChangeListenerFactory: DeviceModule_ProvideConnectionStateChangeListenerFactory(bleshadow.javax.inject.Provider)
io.reactivex.Single: io.reactivex.Single ambWith(io.reactivex.SingleSource)
com.facebook.soloader.MinElf: java.lang.String[] extract_DT_NEEDED(java.io.File)
okhttp3.internal.connection.RealCall: void enqueue(okhttp3.Callback)
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function)
okhttp3.internal.ws.RealWebSocket: int receivedPingCount()
okhttp3.internal.http2.Http2Connection: int getNextStreamId$okhttp()
com.facebook.react.views.scroll.ReactScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactScrollView,float)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.internal.http2.Huffman$Node: Huffman$Node(int,int)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(android.view.View)
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23: boolean isLocationProviderEnabledRequired()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopAnimation(double)
com.facebook.react.views.textinput.ReactTextInputManager: boolean shouldHideCursorForEmailTextInput()
com.polidea.rxandroidble2.internal.operations.DescriptorReadOperation_Factory: com.polidea.rxandroidble2.internal.operations.DescriptorReadOperation newInstance(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration,android.bluetooth.BluetoothGattDescriptor)
com.facebook.react.bridge.WritableArray: void pushMap(com.facebook.react.bridge.ReadableMap)
io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
okhttp3.internal.platform.android.AndroidSocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
com.facebook.react.bridge.ReactSoftExceptionLogger: void logNoThrowSoftExceptionWithMessage(java.lang.String,java.lang.String)
okhttp3.internal.ws.MessageInflater: MessageInflater(boolean)
okhttp3.HttpUrl$Builder: java.util.List getEncodedPathSegments$okhttp()
okhttp3.EventListener: void proxySelectStart(okhttp3.Call,okhttp3.HttpUrl)
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleProvider: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
io.reactivex.Observable: io.reactivex.Observable fromPublisher(org.reactivestreams.Publisher)
com.facebook.soloader.SoLoader: int getAppType(android.content.Context,int)
okhttp3.Response$Builder: okhttp3.Response build()
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: long runOnce()
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Single getCharacteristic(java.util.UUID)
com.polidea.rxandroidble2.HiddenBluetoothGattCallback: void onConnectionUpdated(android.bluetooth.BluetoothGatt,int,int,int,int)
okhttp3.Request$Builder: void setMethod$okhttp(java.lang.String)
okhttp3.Route: java.net.Proxy proxy()
com.facebook.react.uimanager.LayoutShadowNode: void setBorderWidths(int,float)
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.facebook.react.modules.websocket.WebSocketModule: void close(double,java.lang.String,double)
okhttp3.Cookie: long expiresAt()
com.facebook.react.views.textinput.ReactEditText: boolean getDisableFullscreenUI()
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.lang.String getName()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideFinalizationCloseableFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideFinalizationCloseableFactory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.internal.connection.RealConnection: int getRouteFailureCount$okhttp()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToAlignment(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second valueOf(java.lang.String)
okhttp3.MultipartReader: java.lang.String boundary()
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.ws.RealWebSocket,okhttp3.internal.ws.WebSocketWriter,okio.ByteString,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$IntRef,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$ObjectRef)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.Throwable)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedQueryParameter(java.lang.String,java.lang.String)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator: io.reactivex.ObservableTransformer repeatedWindowTransformer(int)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightPercentJNI(long,float)
okhttp3.Interceptor$Chain: okhttp3.Request request()
okhttp3.internal.http2.Http2Stream: void setReadBytesAcknowledged$okhttp(long)
com.facebook.soloader.NativeDepsUnpacker: void ensureNativeDepsAvailable(android.content.Context)
com.facebook.react.fabric.SurfaceHandlerBinding: void setLayoutConstraintsNative(float,float,float,float,float,float,boolean,boolean,float)
io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.CertificatePinner: boolean equals(java.lang.Object)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)
io.reactivex.Flowable: io.reactivex.Single collect(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)
com.polidea.rxandroidble2.internal.logger.LoggerUtil: void logConnectionUpdateCallback(java.lang.String,android.bluetooth.BluetoothGatt,int,int,int,int)
com.polidea.rxandroidble2.RxBleClientImpl: java.util.Set getBondedDevices()
com.facebook.react.views.text.ReactTextView: void setBackgroundColor(int)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: io.reactivex.Observable getOnRssiRead()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableType getType()
com.bleplx.adapter.BleModule: void onDeviceDisconnected(com.polidea.rxandroidble2.RxBleDevice)
com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl: java.util.List extractScanResults(android.content.Intent)
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(com.facebook.react.views.switchview.ReactSwitch,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.MultipartReader: void access$setCurrentPart$p(okhttp3.MultipartReader,okhttp3.MultipartReader$PartSource)
com.polidea.rxandroidble2.internal.connection.DescriptorWriter_Factory: com.polidea.rxandroidble2.internal.connection.DescriptorWriter get()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult: java.lang.String getAddress()
okhttp3.internal.concurrent.TaskQueue: void execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.facebook.react.bridge.ReactContext: void registerSegment(int,java.lang.String,com.facebook.react.bridge.Callback)
com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider_Factory: com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider_Factory create()
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()
io.reactivex.Observable: io.reactivex.Observable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
com.facebook.fbreact.specs.NativeVibrationSpec: java.lang.String getName()
io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper: boolean hasBluetoothAdapter()
com.facebook.hermes.intl.Collator: Collator(java.util.List,java.util.Map)
androidx.appcompat.widget.AppCompatRadioButton: void setAllCaps(boolean)
okhttp3.internal.connection.RealConnection: void setNoNewExchanges(boolean)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getThumbTintMode()
com.facebook.react.bridge.ReactContext: boolean isBridgeless()
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$3$1: java.lang.Object apply(java.lang.Object)
com.facebook.react.uimanager.UIManagerModule: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.bleplx.adapter.BleModule: void lambda$requestMTUForDevice$8(com.bleplx.adapter.utils.SafeExecutor,java.lang.String,java.lang.Throwable)
io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable: io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable valueOf(java.lang.String)
com.facebook.react.ReactRootView: android.view.ViewGroup getRootViewGroup()
okhttp3.MultipartBody: okhttp3.MediaType type()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignContentJNI(long)
okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$3: DisconnectionRouter$3(com.polidea.rxandroidble2.internal.connection.DisconnectionRouter,java.lang.String)
okhttp3.ConnectionSpec: boolean supportsTlsExtensions()
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation: void protectedRun(io.reactivex.ObservableEmitter,com.polidea.rxandroidble2.internal.serialization.QueueReleaseInterface)
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getDraweeControllerBuilder()
okhttp3.Response: java.lang.String -deprecated_message()
com.facebook.react.bridge.JavaMethodWrapper$10: int getJSArgumentsNeeded()
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
com.facebook.react.uimanager.LayoutShadowNode: void setMinHeight(com.facebook.react.bridge.Dynamic)
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$5: ServiceDiscoveryManager$5(com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager)
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentBuilder: DaggerClientComponent$ConnectionComponentBuilder(com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl,com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceTransparencyState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.polidea.rxandroidble2.RxBleAdapterStateObservable: void subscribeActual(io.reactivex.Observer)
io.reactivex.Observable: void blockingForEach(io.reactivex.functions.Consumer)
okhttp3.internal.connection.ExchangeFinder: void trackFailure(java.io.IOException)
okhttp3.internal.platform.android.CloseGuard: boolean warnIfOpen(java.lang.Object)
com.facebook.soloader.NativeLoaderToSoLoaderDelegate: boolean loadLibrary(java.lang.String,int)
okhttp3.MultipartBody$Part: okhttp3.Headers headers()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: SwipeRefreshLayoutManager()
com.facebook.react.bridge.ReadableNativeMap$2: boolean hasNextKey()
okhttp3.OkHttpClient$Builder: int getWriteTimeout$okhttp()
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher_Factory$InstanceHolder: NativeCallbackDispatcher_Factory$InstanceHolder()
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5: CharacteristicLongWriteOperation$5(com.polidea.rxandroidble2.internal.util.QueueReleasingEmitterWrapper,java.nio.ByteBuffer,com.polidea.rxandroidble2.RxBleConnection$WriteOperationAckStrategy)
okhttp3.Cache$RealCacheRequest: void setDone(boolean)
com.facebook.react.runtime.JSCInstance: com.facebook.jni.HybridData initHybrid()
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl: com.polidea.rxandroidble2.RxBleConnection$LongWriteOperationBuilder setWriteOperationRetryStrategy(com.polidea.rxandroidble2.RxBleConnection$WriteOperationRetryStrategy)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
com.facebook.react.views.scroll.ReactScrollView: int getMaxScrollY()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$2: RxBleConnectionImpl$2(com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl,com.polidea.rxandroidble2.NotificationSetupMode)
io.reactivex.Observable: io.reactivex.Observable cast(java.lang.Class)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int)
okhttp3.internal.http2.Hpack: Hpack()
com.polidea.rxandroidble2.internal.connection.ConnectionModule: int minimumMtu()
com.facebook.react.bridge.CatalystInstance: void setGlobalVariable(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.yoga.YogaNative: void jni_YGNodeInsertChildJNI(long,long,int)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$7$1: ScanSettingsEmulator$7$1(com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$7)
okhttp3.Cookie$Companion: int dateCharacterOffset(java.lang.String,int,int,boolean)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp()
androidx.core.app.ActivityCompat$Api16Impl: void finishAffinity(android.app.Activity)
io.reactivex.Flowable: java.lang.Object blockingSingle(java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable debounce(long,java.util.concurrent.TimeUnit)
io.reactivex.Observable: io.reactivex.Observable concat(io.reactivex.ObservableSource)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOff()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(int,boolean,okio.Buffer,int,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.Util: int readMedium(okio.BufferedSource)
okhttp3.internal.platform.Platform: java.lang.String getPrefix()
com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry$1$1: FIFORunnableEntry$1$1(com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry$1)
com.facebook.imagepipeline.nativecode.Bitmaps: void nativeCopyBitmap(android.graphics.Bitmap,int,android.graphics.Bitmap,int,int)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,com.facebook.react.views.image.ReactCallerContextFactory)
io.reactivex.Flowable: io.reactivex.Flowable switchMapMaybe(io.reactivex.functions.Function)
com.facebook.soloader.SoLoader: void AddSystemLibSoSource(java.util.ArrayList,java.lang.String[])
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$7: java.lang.Object apply(java.lang.Object)
com.facebook.react.views.textinput.ReactTextInputManager: void setUnderlineColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.soloader.ElfFileChannel: int read(java.nio.ByteBuffer,long)
com.polidea.rxandroidble2.internal.logger.LoggerUtil: void logCallback(java.lang.String,android.bluetooth.BluetoothGatt,int)
okhttp3.MultipartReader$PartSource: void close()
androidx.activity.ComponentActivity: android.content.Context peekAvailableContext()
io.reactivex.Flowable: java.lang.Object as(io.reactivex.FlowableConverter)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCheckMarkTintList()
okhttp3.OkHttpClient$Builder: java.util.List getConnectionSpecs$okhttp()
com.facebook.react.bridge.WritableArray: void pushString(java.lang.String)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole valueOf(java.lang.String)
okhttp3.CacheControl: boolean noCache()
io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(long,java.util.concurrent.TimeUnit)
okhttp3.internal.connection.RealConnectionPool: long cleanup(long)
io.reactivex.Observable: io.reactivex.Single all(io.reactivex.functions.Predicate)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.appearance.AppearanceModule: void setColorScheme(java.lang.String)
com.polidea.rxandroidble2.scan.ScanFilter$Builder: com.polidea.rxandroidble2.scan.ScanFilter$Builder setServiceUuid(android.os.ParcelUuid)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.soloader.ElfZipFileChannel: boolean isOpen()
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager(com.facebook.react.views.scroll.FpsListener)
okhttp3.internal.concurrent.TaskQueue: void schedule$default(okhttp3.internal.concurrent.TaskQueue,okhttp3.internal.concurrent.Task,long,int,java.lang.Object)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
io.reactivex.Observable: io.reactivex.Single reduce(java.lang.Object,io.reactivex.functions.BiFunction)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper getLooper()
com.facebook.react.uimanager.ViewGroupManager: void removeViewAt(android.view.View,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function,boolean,int)
com.facebook.react.bridge.JavaScriptModuleRegistry: java.lang.String getJSModuleName(java.lang.Class)
androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()
com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)
okhttp3.internal.platform.BouncyCastlePlatform: BouncyCastlePlatform()
com.polidea.rxandroidble2.internal.DeviceModule_ProvidesDisconnectTimeoutConfFactory: com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration providesDisconnectTimeoutConf(io.reactivex.Scheduler)
io.reactivex.Observable: io.reactivex.Observable observeOn(io.reactivex.Scheduler,boolean,int)
com.facebook.fbreact.specs.NativeAlertManagerSpec: void alertWithArgs(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
org.linusu.RNGetRandomValuesModule: RNGetRandomValuesModule(com.facebook.react.bridge.ReactApplicationContext)
com.polidea.rxandroidble2.scan.ScanFilter$Builder: com.polidea.rxandroidble2.scan.ScanFilter$Builder setDeviceAddress(java.lang.String)
okhttp3.internal.http2.Http2Stream: void checkOutNotClosed$okhttp()
io.reactivex.Flowable: io.reactivex.Flowable concatEager(java.lang.Iterable,int,int)
com.polidea.rxandroidble2.internal.operations.MtuRequestOperation: boolean startOperation(android.bluetooth.BluetoothGatt)
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(int,int,android.content.Intent)
com.polidea.rxandroidble2.utils.GattStatusParser: java.lang.String getGattCallbackStatusDescription(int)
okhttp3.ResponseBody$BomAwareReader: int read(char[],int,int)
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: long runOnce()
com.polidea.rxandroidble2.internal.operations.ConnectOperation: com.polidea.rxandroidble2.exceptions.BleException provideException(android.os.DeadObjectException)
com.facebook.react.views.text.ReactTextViewManager: long measure(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
okhttp3.ResponseBody: java.lang.Object consumeSource(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$6: DisconnectionRouter$6()
com.facebook.react.bridge.CatalystInstanceImpl: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create$default(okhttp3.ResponseBody$Companion,byte[],okhttp3.MediaType,int,java.lang.Object)
io.reactivex.Single: io.reactivex.Single cast(java.lang.Class)
com.facebook.yoga.YogaNative: void jni_YGConfigSetPointScaleFactorJNI(long,float)
com.facebook.react.uimanager.UIConstantsProviderManager: void installJSIBindings()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void send(java.lang.String,double)
okio.AsyncTimeout: long access$getIDLE_TIMEOUT_MILLIS$cp()
com.facebook.react.modules.statusbar.StatusBarModule: void setTranslucent(boolean)
com.facebook.react.bridge.WritableMap: void putBoolean(java.lang.String,boolean)
io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher,org.reactivestreams.Publisher)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideScanSetupProviderFactory: java.lang.Object get()
com.facebook.soloader.NativeLibrary: java.lang.UnsatisfiedLinkError getError()
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetBorderJNI(long,int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second[] values()
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function)
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.NativeMap getConstants()
androidx.appcompat.resources.Compatibility$Api15Impl: void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean)
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskQueue newQueue()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
okhttp3.Headers: boolean equals(java.lang.Object)
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi31_Factory: com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi31_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(io.reactivex.functions.Function,org.reactivestreams.Publisher[])
androidx.core.text.ICUCompat$Api24Impl: java.lang.String getScript(java.lang.Object)
okhttp3.Cookie$Companion: boolean domainMatch(java.lang.String,java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager: TurboModuleManager(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate,com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder,com.facebook.react.turbomodule.core.interfaces.NativeMethodCallInvokerHolder)
okhttp3.internal.http2.Http2Connection$Builder: java.net.Socket getSocket$okhttp()
com.bleplx.adapter.BleModule: io.reactivex.ObservableSource lambda$safeConnectToDevice$25(int,com.polidea.rxandroidble2.RxBleConnection)
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache_Factory$InstanceHolder: com.polidea.rxandroidble2.internal.cache.DeviceComponentCache_Factory access$000()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
okhttp3.CipherSuite$Companion: java.util.Comparator getORDER_BY_NAME$okhttp()
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache: com.polidea.rxandroidble2.internal.DeviceComponent put(java.lang.String,com.polidea.rxandroidble2.internal.DeviceComponent)
com.polidea.rxandroidble2.internal.util.ClientStateObservable$4: java.lang.Object apply(java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiFunction,boolean,int)
okhttp3.internal.platform.Platform$Companion: boolean isAndroid()
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$5: DisconnectionRouter$5(com.polidea.rxandroidble2.internal.connection.DisconnectionRouter)
com.polidea.rxandroidble2.internal.operations.ConnectOperation$5: android.bluetooth.BluetoothGatt call()
com.polidea.rxandroidble2.internal.util.UUIDUtil: java.util.List extractUUIDs(byte[])
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Snapshot get(java.lang.String)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(android.view.View,java.lang.String)
com.polidea.rxandroidble2.internal.operations.DisconnectOperation: void considerGattDisconnected(io.reactivex.Emitter,com.polidea.rxandroidble2.internal.serialization.QueueReleaseInterface)
com.facebook.react.views.scroll.ReactScrollView: void setBorderRadius(float)
com.facebook.soloader.SoLoader: void deinitForTest()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopListeningToAnimatedNodeValue(double)
com.polidea.rxandroidble2.internal.util.CheckerLocationProvider_Factory: java.lang.Object get()
com.facebook.react.modules.debug.SourceCodeModule: java.util.Map getTypedExportedConstants()
com.facebook.fbreact.specs.NativeLogBoxSpec: void hide()
com.facebook.react.bridge.DynamicFromObject: DynamicFromObject(java.lang.Object)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetPositionTypeJNI(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
okhttp3.internal.http2.Http2Connection: void pushRequestLater$okhttp(int,java.util.List)
okhttp3.RequestBody: RequestBody()
okhttp3.internal.platform.android.CloseGuard$Companion: CloseGuard$Companion()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.soloader.NativeDepsUnpacker: void writeApkIdentifier(android.content.Context,java.io.File)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)
okhttp3.EventListener: void responseHeadersEnd(okhttp3.Call,okhttp3.Response)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation: boolean startOperation(android.bluetooth.BluetoothGatt)
com.polidea.rxandroidble2.internal.util.ClientStateObservable: void subscribeActual(io.reactivex.Observer)
okhttp3.Request$Builder: Request$Builder(okhttp3.Request)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$2: io.reactivex.Observable apply(io.reactivex.Observable)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundResource(int)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6$2: void accept(java.lang.Object)
com.bleplx.BlePlxModule: void requestMTUForDevice(java.lang.String,int,java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.Cookie$Companion: boolean access$pathMatch(okhttp3.Cookie$Companion,okhttp3.HttpUrl,java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.runtime.ReactInstance: com.facebook.jni.HybridData initHybrid(com.facebook.react.runtime.JSEngineInstance,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.modules.core.JavaTimerManager,com.facebook.react.runtime.JSTimerExecutor,com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler,com.facebook.react.runtime.BindingsInstaller,boolean)
okhttp3.internal.ws.WebSocketProtocol: java.lang.String acceptHeader(java.lang.String)
com.facebook.soloader.NativeDeps: void indexLib(int,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactScrollView,float)
com.polidea.rxandroidble2.internal.operations.MtuRequestOperation_Factory: MtuRequestOperation_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: NativeDeviceEventManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier: ConscryptPlatform$DisabledHostnameVerifier()
okhttp3.internal.platform.AndroidPlatform: AndroidPlatform()
com.polidea.rxandroidble2.scan.ScanSettings$1: java.lang.Object[] newArray(int)
com.facebook.soloader.NativeDepsUnpacker: void extractNativeDeps(android.content.Context)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$1: void doInBackgroundGuarded(java.lang.Void[])
okhttp3.Cookie$Builder: Cookie$Builder()
com.polidea.rxandroidble2.internal.operations.DisconnectOperation: io.reactivex.Single disconnect(android.bluetooth.BluetoothGatt)
okhttp3.internal.Util: java.lang.String trimSubstring$default(java.lang.String,int,int,int,java.lang.Object)
com.polidea.rxandroidble2.RxBleClientImpl: void lambda$createScanOperationApi18$6(com.polidea.rxandroidble2.RxBleScanResult)
okhttp3.Cache$CacheResponseBody: okhttp3.internal.cache.DiskLruCache$Snapshot getSnapshot()
com.ghostcommv2.MainActivity: com.facebook.react.ReactActivityDelegate createReactActivityDelegate()
com.facebook.react.bridge.Inspector$Page: java.lang.String getTitle()
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider access$700(com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl)
com.polidea.rxandroidble2.internal.operations.ScanOperation$1: void cancel()
com.polidea.rxandroidble2.internal.operations.LegacyScanOperation: void stopScan(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,android.bluetooth.BluetoothAdapter$LeScanCallback)
kotlin.collections.EmptyMap: java.lang.Object readResolve()
okhttp3.internal.http2.Http2Connection$Listener$Companion: Http2Connection$Listener$Companion()
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$2$1: io.reactivex.ObservableSource apply(io.reactivex.Observable)
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18_Factory: java.lang.Object get()
okhttp3.Authenticator$Companion$AuthenticatorNone: Authenticator$Companion$AuthenticatorNone()
com.facebook.react.uimanager.BaseViewManager: void setRotation(android.view.View,float)
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: bleshadow.javax.inject.Provider access$1300(com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl)
com.facebook.react.bridge.WritableArray: void pushBoolean(boolean)
com.polidea.rxandroidble2.exceptions.BleException: BleException()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Observable setupNotification(android.bluetooth.BluetoothGattCharacteristic,com.polidea.rxandroidble2.NotificationSetupMode)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
okhttp3.internal.ws.RealWebSocket: void failWebSocket(java.lang.Exception,okhttp3.Response)
com.polidea.rxandroidble2.exceptions.BleCharacteristicNotFoundException: java.util.UUID getCharactersisticUUID()
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCorrect(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSendMomentumEvents(boolean)
io.reactivex.Observable: io.reactivex.Observable buffer(io.reactivex.ObservableSource)
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(com.facebook.react.views.image.ReactImageView)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setFlex(float)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
io.reactivex.Flowable: java.lang.Object to(io.reactivex.functions.Function)
okhttp3.TlsVersion: TlsVersion(java.lang.String,int,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry getTurboModuleRegistry()
com.facebook.soloader.ExoSoSource$ExoUnpacker: com.facebook.soloader.ExoSoSource$FileDso[] access$100(com.facebook.soloader.ExoSoSource$ExoUnpacker)
com.polidea.rxandroidble2.internal.DeviceModule_ProvidesConnectTimeoutConfFactory: com.polidea.rxandroidble2.internal.DeviceModule_ProvidesConnectTimeoutConfFactory create(bleshadow.javax.inject.Provider)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] getLocalArray()
okhttp3.Response$Builder: okhttp3.Response getCacheResponse$okhttp()
com.polidea.rxandroidble2.internal.operations.DescriptorWriteOperation: java.lang.String toString()
okhttp3.internal.connection.RealCall: okhttp3.Call clone()
com.facebook.react.bridge.NativeModule$NativeMethod: java.lang.String getType()
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager_Factory: java.lang.Object get()
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType valueOf(java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day[] values()
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl get(java.lang.String)
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
okhttp3.internal.http1.HeadersReader: HeadersReader(okio.BufferedSource)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder authenticator(okhttp3.Authenticator)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream pushStream(int,java.util.List,boolean)
okhttp3.Headers: okhttp3.Headers of(java.lang.String[])
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
com.facebook.react.uimanager.ViewGroupManager: boolean needsCustomLayoutForChildren()
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodeFromView(double,double)
okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$2: void onServicesDiscovered(android.bluetooth.BluetoothGatt,int)
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentBuilder: com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentBuilder suppressOperationChecks(boolean)
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl$1: io.reactivex.SingleSource apply(com.polidea.rxandroidble2.RxBleDeviceServices)
com.facebook.hermes.intl.NumberFormat: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideRecommendedScanRuntimePermissionNamesFactory: java.lang.String[][] provideRecommendedScanRuntimePermissionNames(int,int,boolean)
com.polidea.rxandroidble2.internal.connection.DisconnectionRouterInput: void onGattConnectionStateException(com.polidea.rxandroidble2.exceptions.BleGattException)
io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function9)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices_Factory: com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices_Factory create(bleshadow.javax.inject.Provider)
okhttp3.internal.http2.Hpack$Reader: boolean isStaticHeader(int)
okhttp3.internal.connection.RealCall: RealCall(okhttp3.OkHttpClient,okhttp3.Request,boolean)
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: boolean needsCustomLayoutForChildren()
com.facebook.react.uimanager.LayoutShadowNode: void setCollapsable(boolean)
okhttp3.internal.http.HttpMethod: boolean redirectsToGet(java.lang.String)
com.polidea.rxandroidble2.internal.operations.ConnectOperation: ConnectOperation(android.bluetooth.BluetoothDevice,com.polidea.rxandroidble2.internal.util.BleConnectionCompat,com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider,com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration,boolean,com.polidea.rxandroidble2.internal.connection.ConnectionStateChangeListener)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
okhttp3.Handshake$Companion: okhttp3.Handshake -deprecated_get(javax.net.ssl.SSLSession)
io.reactivex.Single: io.reactivex.Completable ignoreElement()
okhttp3.ResponseBody: java.io.Reader charStream()
io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceInitialized()
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
io.reactivex.Flowable: io.reactivex.Flowable retry(io.reactivex.functions.BiPredicate)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(android.view.View,java.lang.Integer)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.jni.NativeRunnable: void run()
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: Http2Connection$writeSynResetLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okhttp3.internal.http2.ErrorCode)
com.bleplx.adapter.BleModule: void lambda$safeReadDescriptorForDevice$9(com.bleplx.adapter.utils.SafeExecutor,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetBorderJNI(long,int,float)
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long,int)
io.reactivex.Observable: io.reactivex.Observable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
okhttp3.internal.proxy.NullProxySelector: NullProxySelector()
com.polidea.rxandroidble2.internal.connection.ConnectionComponent$Builder: com.polidea.rxandroidble2.internal.connection.ConnectionComponent$Builder autoConnect(boolean)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
okhttp3.Request$Builder: okhttp3.Request$Builder tag(java.lang.Object)
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi26_Factory: com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi26 get()
com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl_Factory: BackgroundScannerImpl_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
com.polidea.rxandroidble2.internal.operations.Operation: com.polidea.rxandroidble2.internal.Priority definedPriority()
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
io.reactivex.Observable: io.reactivex.Observable takeLast(int)
okhttp3.OkHttpClient$Builder: void setProxyAuthenticator$okhttp(okhttp3.Authenticator)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry$1: FIFORunnableEntry$1(com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry,com.polidea.rxandroidble2.internal.serialization.QueueSemaphore,io.reactivex.Scheduler)
okhttp3.internal.ws.WebSocketWriter: void writeClose(int,okio.ByteString)
okhttp3.Cache: boolean isClosed()
okhttp3.internal.connection.RealConnectionPool$Companion: RealConnectionPool$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.OkHttpClient$Builder: java.util.List getProtocols$okhttp()
okhttp3.internal.ws.RealWebSocket: java.lang.String access$getName$p(okhttp3.internal.ws.RealWebSocket)
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: void setMaximumSize(long)
okhttp3.Cache: void trackResponse$okhttp(okhttp3.internal.cache.CacheStrategy)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackgroundColor(int)
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$1: void accept(java.lang.Object)
okhttp3.internal.Util: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)
okhttp3.internal.http1.Http1ExchangeCodec: okio.BufferedSink access$getSink$p(okhttp3.internal.http1.Http1ExchangeCodec)
okhttp3.CacheControl: boolean immutable()
io.reactivex.Flowable: io.reactivex.Flowable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getFactory()
com.facebook.react.modules.debug.DevSettingsModule: void toggleElementInspector()
com.polidea.rxandroidble2.internal.operations.ConnectOperation$4$1: ConnectOperation$4$1(com.polidea.rxandroidble2.internal.operations.ConnectOperation$4)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
com.facebook.react.bridge.JavaOnlyArray: void pushInt(int)
io.reactivex.Observable: io.reactivex.Observable mergeDelayError(io.reactivex.ObservableSource,int)
com.facebook.react.modules.appearance.AppearanceModule: void emitAppearanceChanged(java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexWrap(java.lang.String)
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory_Factory: com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory newInstance(android.content.Context,com.polidea.rxandroidble2.internal.util.LocationServicesStatus)
io.reactivex.Flowable: io.reactivex.Flowable ambArray(org.reactivestreams.Publisher[])
com.facebook.react.animated.InterpolationAnimatedNode$OutputType: com.facebook.react.animated.InterpolationAnimatedNode$OutputType[] values()
com.polidea.rxandroidble2.internal.connection.ImmediateSerializedBatchAckStrategy: ImmediateSerializedBatchAckStrategy()
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable)
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasNativeModule(java.lang.Class)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getTypedExportedConstants()
com.polidea.rxandroidble2.internal.operations.ScanOperationApi21$1: void onScanResult(int,android.bluetooth.le.ScanResult)
okhttp3.internal.http2.Hpack$Reader: Hpack$Reader(okio.Source,int)
com.facebook.react.views.text.ReactTextViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.polidea.rxandroidble2.RxBleAdapterStateObservable_Factory: com.polidea.rxandroidble2.RxBleAdapterStateObservable get()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideScanSetupProviderFactory: com.polidea.rxandroidble2.internal.scan.ScanSetupBuilder provideScanSetupProvider(int,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
io.reactivex.Single: io.reactivex.Single doOnSubscribe(io.reactivex.functions.Consumer)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void addListener(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable concatMapIterable(io.reactivex.functions.Function,int)
io.reactivex.Observable: io.reactivex.Observable switchMapDelayError(io.reactivex.functions.Function)
com.bleplx.BlePlxModule: void readDescriptorForCharacteristic(int,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
io.reactivex.Observable: io.reactivex.Observable repeat(long)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray asArray()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
com.bleplx.adapter.BleModule: void setLogLevel(java.lang.String)
com.facebook.react.bridge.PromiseImpl: void resolve(java.lang.Object)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthPercentJNI(long,float)
io.reactivex.Observable: io.reactivex.Observable distinct(io.reactivex.functions.Function,java.util.concurrent.Callable)
com.bleplx.adapter.BleModule: void readCharacteristicForService(int,java.lang.String,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
com.facebook.react.modules.core.TimingModule: void initialize()
okhttp3.internal.platform.Platform: void log$default(okhttp3.internal.platform.Platform,java.lang.String,int,java.lang.Throwable,int,java.lang.Object)
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: DaggerClientComponent$ConnectionComponentImpl(com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl,com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl,java.lang.Boolean,java.lang.Boolean,com.polidea.rxandroidble2.Timeout,com.polidea.rxandroidble2.DaggerClientComponent$1)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType valueOf(java.lang.String)
okhttp3.OkHttpClient: java.util.List -deprecated_interceptors()
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
com.facebook.react.uimanager.BaseViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPagingEnabled(boolean)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeDevMenuSpec: void setProfilingEnabled(boolean)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1: AndroidSocketAdapter$Companion$factory$1(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void initializeLifecycleEventListenersForViewTag(int)
com.facebook.react.bridge.WritableMap: void putString(java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void flattenAnimatedNodeOffset(double)
com.facebook.react.modules.camera.ImageStoreManager: ImageStoreManager(com.facebook.react.bridge.ReactApplicationContext)
com.polidea.rxandroidble2.scan.ScanFilter: java.lang.String getDeviceName()
okhttp3.Cookie: java.lang.String value()
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function5)
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void invalidate()
com.polidea.rxandroidble2.internal.util.UUIDUtil: java.util.Set toDistinctSet(java.util.UUID[])
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityCollection(android.view.View,com.facebook.react.bridge.ReadableMap)
okio.Timeout: long deadlineNanoTime()
com.facebook.react.uimanager.UIConstantsProvider: com.facebook.react.bridge.NativeMap getConstants()
io.reactivex.Single: io.reactivex.Flowable mergeDelayError(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)
com.facebook.react.modules.share.ShareModule: ShareModule(com.facebook.react.bridge.ReactApplicationContext)
com.polidea.rxandroidble2.internal.connection.ConnectionModule: com.polidea.rxandroidble2.internal.connection.IllegalOperationHandler provideIllegalOperationHandler(boolean,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.bleplx.adapter.BleModule: void lambda$safeStartDeviceScan$20(com.bleplx.adapter.OnErrorCallback,java.lang.Throwable)
com.bleplx.BlePlxModule: void cancelDeviceConnection(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.ConnectionSpec$Builder: void setTlsVersions$okhttp(java.lang.String[])
okhttp3.internal.cache.DiskLruCache: void flush()
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
okhttp3.Route: boolean requiresTunnel()
okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)
com.facebook.react.uimanager.UIManagerModule: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.SwitchCompat: int getThumbOffset()
okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient$okhttp(java.lang.String,java.lang.String)
com.facebook.react.bridge.WritableNativeArray: void pushDouble(double)
io.reactivex.Flowable: io.reactivex.Completable ignoreElements()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontStyle(java.lang.String)
com.facebook.common.time.AwakeTimeSinceBootClock: long now()
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl: com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation provideConnectionPriorityChangeOperation(int,long,java.util.concurrent.TimeUnit)
okhttp3.OkHttpClient$Builder: void setSslSocketFactoryOrNull$okhttp(javax.net.ssl.SSLSocketFactory)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPositionJNI(long,int)
okhttp3.OkHttpClient: int -deprecated_pingIntervalMillis()
com.polidea.rxandroidble2.internal.operations.ServiceDiscoveryOperation: io.reactivex.SingleSource lambda$timeoutFallbackProcedure$3(android.bluetooth.BluetoothGatt,io.reactivex.Scheduler)
com.facebook.react.config.ReactFeatureFlags: ReactFeatureFlags()
okhttp3.internal.connection.Exchange: void responseHeadersStart()
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.ResponseBody$BomAwareReader: ResponseBody$BomAwareReader(okio.BufferedSource,java.nio.charset.Charset)
com.facebook.drawee.view.DraweeView: float getAspectRatio()
okhttp3.Interceptor$Chain: int connectTimeoutMillis()
com.polidea.rxandroidble2.internal.util.ClientStateObservable_Factory: ClientStateObservable_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.WebSocketListener: void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType valueOf(java.lang.String)
com.facebook.soloader.SoSource: int loadLibrary(java.lang.String,int,android.os.StrictMode$ThreadPolicy)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$5: java.lang.Object apply(java.lang.Object)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$5: io.reactivex.ObservableSource apply(io.reactivex.Observable)
com.polidea.rxandroidble2.internal.connection.DescriptorWriter_Factory: DescriptorWriter_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
com.facebook.soloader.SoSource: void prepare(int)
com.facebook.react.uimanager.RootViewManager: RootViewManager()
okhttp3.EventListener: void canceled(okhttp3.Call)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
okhttp3.internal.cache.DiskLruCache$Companion: DiskLruCache$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.SwitchCompat: void setFilters(android.text.InputFilter[])
okhttp3.internal.concurrent.TaskRunner$RealBackend: void shutdown()
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
io.reactivex.Flowable: io.reactivex.Flowable repeatUntil(io.reactivex.functions.BooleanSupplier)
io.reactivex.Flowable: io.reactivex.Flowable timestamp(io.reactivex.Scheduler)
okhttp3.internal.Util: void notify(java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl: void incrementPendingJSCalls()
com.facebook.react.bridge.Inspector$LocalConnection: void disconnect()
com.facebook.react.animated.NativeAnimatedModule: void decrementInFlightAnimationsForViewTag(int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder dispatcher(okhttp3.Dispatcher)
okhttp3.internal.concurrent.TaskLoggerKt: void log(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SwitchCompat: int getThumbTextPadding()
okhttp3.EventListener: void connectStart(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy)
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrate(double)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegments(java.lang.String,boolean)
com.bleplx.BlePlxModule: void writeDescriptorForDevice(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.Response: okhttp3.Handshake handshake()
okhttp3.internal.connection.ExchangeFinder: boolean retryAfterFailure()
okhttp3.internal.http1.Http1ExchangeCodec: boolean isClosed()
com.facebook.soloader.SysUtil: int copyBytes(java.io.DataOutput,java.io.InputStream,int,byte[])
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getTypedExportedConstants()
okhttp3.internal.platform.Platform: void logCloseableLeak(java.lang.String,java.lang.Object)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.nio.ByteBuffer importByteBuffer()
io.reactivex.Observable: io.reactivex.Observable mergeDelayError(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetJustifyContentJNI(long)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$3: java.lang.Object apply(java.lang.Object)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderRadius(com.facebook.react.views.text.ReactTextView,int,float)
okhttp3.Address: java.net.ProxySelector -deprecated_proxySelector()
com.facebook.common.time.RealtimeSinceBootClock: com.facebook.common.time.RealtimeSinceBootClock get()
com.facebook.soloader.NativeDeps: void indexDepsBytes(byte[],int)
com.polidea.rxandroidble2.internal.util.DisposableUtil$3: void onError(java.lang.Throwable)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopListeningToAnimatedNodeValue(double)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reloadWithReason(java.lang.String)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign[] values()
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
okhttp3.Request: java.lang.String header(java.lang.String)
com.bleplx.adapter.BleModule: void lambda$safeWriteCharacteristicForDevice$38(com.bleplx.adapter.Characteristic,com.bleplx.adapter.utils.SafeExecutor,java.lang.String,byte[])
com.facebook.react.ReactNativeHost: com.facebook.react.ReactInstanceManager createReactInstanceManager()
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter: io.reactivex.Observable asErrorOnlyObservable()
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: ExtractFromZipSoSource$ZipUnpacker(com.facebook.soloader.ExtractFromZipSoSource,com.facebook.soloader.UnpackingSoSource)
okhttp3.internal.connection.RouteSelector: okhttp3.Address access$getAddress$p(okhttp3.internal.connection.RouteSelector)
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
com.facebook.react.bridge.JavaOnlyMap: boolean isNull(java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager: void initialize()
androidx.activity.ComponentActivity: void removeOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
com.polidea.rxandroidble2.internal.util.CharacteristicChangedEvent: boolean equals(java.lang.Object)
com.facebook.drawee.view.DraweeView: void setImageBitmap(android.graphics.Bitmap)
com.facebook.soloader.DirectApkSoSource: java.io.File unpackLibrary(java.lang.String)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
okhttp3.MultipartReader: long currentPartBytesRemaining(long)
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: io.reactivex.Completable writeClientCharacteristicConfig(android.bluetooth.BluetoothGattCharacteristic,com.polidea.rxandroidble2.internal.connection.DescriptorWriter,byte[])
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAndroidHyphenationFrequency(com.facebook.react.views.text.ReactTextView,java.lang.String)
io.reactivex.Observable: io.reactivex.Observable concatArrayEager(int,int,io.reactivex.ObservableSource[])
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl_Factory: com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl get()
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1: io.reactivex.Observable apply(io.reactivex.Observable)
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: java.util.Set connectionSubscriptionWatchers()
okhttp3.OkHttpClient$Builder: okhttp3.ConnectionPool getConnectionPool$okhttp()
okhttp3.CertificatePinner: int hashCode()
com.facebook.react.bridge.CatalystInstance: void runJSBundle()
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean,int,int)
com.polidea.rxandroidble2.helpers.ValueInterpreter: java.lang.Float getFloatValue(byte[],int,int)
com.polidea.rxandroidble2.internal.util.ClientStateObservable$2: boolean test(java.lang.Object)
com.polidea.rxandroidble2.internal.util.ObservableUtil$1: io.reactivex.Observable apply(io.reactivex.Observable)
okhttp3.Handshake: okhttp3.CipherSuite cipherSuite()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
com.facebook.react.uimanager.LayoutShadowNode: void setJustifyContent(java.lang.String)
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$1: void onSuccess(java.lang.Object)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addNetworkInterceptor(okhttp3.Interceptor)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
io.reactivex.Flowable: io.reactivex.Flowable onErrorReturn(io.reactivex.functions.Function)
com.polidea.rxandroidble2.internal.util.CheckerPermission_Factory: CheckerPermission_Factory(bleshadow.javax.inject.Provider)
com.facebook.jni.DestructorThread$DestructorList: DestructorThread$DestructorList()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: NativeExceptionsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher[],io.reactivex.functions.Function)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])
com.facebook.react.bridge.CatalystInstanceImpl$4: void run()
com.polidea.rxandroidble2.RxBleDeviceServices: io.reactivex.Single getDescriptor(java.util.UUID,java.util.UUID,java.util.UUID)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit$default(okhttp3.internal.cache.DiskLruCache,java.lang.String,long,int,java.lang.Object)
io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer)
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl$2: LongWriteOperationBuilderImpl$2(com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl)
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18$1: io.reactivex.Observable apply(io.reactivex.Observable)
com.facebook.react.fabric.FabricUIManager: FabricUIManager(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.events.BatchEventDispatchedListener)
com.facebook.react.bridge.WritableMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatTextHelper$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl$1: DaggerClientComponent$ClientComponentImpl$1(com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.connection.RealConnection: java.util.List getCalls()
com.facebook.react.devsupport.HMRClient: void enable()
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: java.util.List getEagerInitModuleNames()
com.polidea.rxandroidble2.internal.connection.ThrowingIllegalOperationHandler_Factory: com.polidea.rxandroidble2.internal.connection.ThrowingIllegalOperationHandler_Factory create(bleshadow.javax.inject.Provider)
com.polidea.rxandroidble2.internal.operations.MtuRequestOperation: MtuRequestOperation(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration,int)
io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(org.reactivestreams.Publisher[],io.reactivex.functions.Function,int)
okhttp3.internal.connection.RealConnectionPool$Companion: RealConnectionPool$Companion()
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.StateWrapper getStateWrapper()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.jni.ThreadScopeSupport: ThreadScopeSupport()
okhttp3.internal.http2.Http2Connection: void pushResetLater$okhttp(int,okhttp3.internal.http2.ErrorCode)
com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl_Factory: java.lang.Object get()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getTypedExportedConstants()
io.reactivex.Observable: io.reactivex.Observable observeOn(io.reactivex.Scheduler)
com.polidea.rxandroidble2.internal.RxBleDeviceImpl: io.reactivex.Observable establishConnection(boolean,com.polidea.rxandroidble2.Timeout)
okhttp3.internal.concurrent.TaskRunner$Companion: java.util.logging.Logger getLogger()
okhttp3.internal.cache.DiskLruCache$snapshots$1: okhttp3.internal.cache.DiskLruCache$Snapshot next()
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl: io.reactivex.Observable queue(com.polidea.rxandroidble2.internal.operations.Operation)
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable$1: DisconnectOperation$DisconnectGattObservable$1(com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable)
com.facebook.react.views.scroll.ReactScrollView: android.view.View getContentView()
io.reactivex.Single: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function)
com.polidea.rxandroidble2.internal.connection.IllegalOperationMessageCreator_Factory: com.polidea.rxandroidble2.internal.connection.IllegalOperationMessageCreator get()
okhttp3.Protocol$Companion: Protocol$Companion()
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybridDefaultConfig(boolean,java.lang.String)
okhttp3.internal.http2.Hpack$Writer: void writeHeaders(java.util.List)
okio.ForwardingSink: void write(okio.Buffer,long)
okhttp3.internal.platform.AndroidPlatform: java.lang.Object getStackTraceForCloseable(java.lang.String)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableIndicationValueFactory: byte[] get()
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$6: ScanSettingsEmulator$6()
okhttp3.internal.http2.Http2Writer: Http2Writer(okio.BufferedSink,boolean)
okhttp3.RequestBody: okhttp3.RequestBody create(okio.ByteString,okhttp3.MediaType)
androidx.appcompat.widget.SwitchCompat: boolean getSplitTrack()
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(byte[],okhttp3.MediaType)
io.reactivex.Flowable: io.reactivex.Flowable zipArray(io.reactivex.functions.Function,boolean,int,org.reactivestreams.Publisher[])
okhttp3.internal.platform.AndroidPlatform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)
io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function5)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform findAndroidPlatform()
okhttp3.internal.http2.Http2Reader: void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int)
com.polidea.rxandroidble2.exceptions.BleDescriptorNotFoundException: java.util.UUID getDescriptorUUID()
okhttp3.Request: okhttp3.Request$Builder newBuilder()
androidx.appcompat.app.AppCompatActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
io.reactivex.Flowable: io.reactivex.Flowable merge(java.lang.Iterable)
okhttp3.internal.cache.FaultHidingSink: kotlin.jvm.functions.Function1 getOnException()
io.reactivex.Flowable: io.reactivex.Flowable merge(java.lang.Iterable,int)
com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator: com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult create(android.bluetooth.le.ScanResult)
io.reactivex.Flowable: io.reactivex.Flowable concatMapEagerDelayError(io.reactivex.functions.Function,int,int,boolean)
com.facebook.react.views.view.ReactViewGroup: void setOnInterceptTouchEventListener(com.facebook.react.touch.OnInterceptTouchEventListener)
okhttp3.MultipartBody: java.lang.String -deprecated_boundary()
com.bleplx.adapter.BleModule: io.reactivex.disposables.Disposable monitorAdapterStateChanges(android.content.Context,com.bleplx.adapter.OnEventCallback)
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache: int size()
com.polidea.rxandroidble2.scan.IsConnectable: com.polidea.rxandroidble2.scan.IsConnectable valueOf(java.lang.String)
com.polidea.rxandroidble2.internal.connection.Connector: io.reactivex.Observable prepareConnection(com.polidea.rxandroidble2.ConnectionSetup)
com.polidea.rxandroidble2.RxBleDeviceServices$6: java.lang.Object apply(java.lang.Object)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBar getSupportActionBar()
io.reactivex.Flowable: io.reactivex.Flowable takeUntil(org.reactivestreams.Publisher)
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue access$000()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.EventListener: void proxySelectEnd(okhttp3.Call,okhttp3.HttpUrl,java.util.List)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothManagerFactory: java.lang.Object get()
com.facebook.react.modules.blob.BlobModule: java.util.Map getTypedExportedConstants()
io.reactivex.Flowable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostResume()
com.polidea.rxandroidble2.internal.operations.ReadRssiOperation_Factory: com.polidea.rxandroidble2.internal.operations.ReadRssiOperation_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.views.textinput.ReactEditText: java.lang.String getSubmitBehavior()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable repeat()
com.polidea.rxandroidble2.helpers.ValueInterpreter: int unsignedToSigned(int,int)
okhttp3.internal.ws.RealWebSocket: long queueSize()
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18_Factory: ScanSetupBuilderImplApi18_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer getColor(java.lang.Object,android.content.Context,int)
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher: NativeCallbackDispatcher()
okhttp3.internal.http1.Http1ExchangeCodec: okio.Source newFixedLengthSource(long)
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(java.util.List,java.util.Map,java.util.Map)
okhttp3.internal.Util: void notifyAll(java.lang.Object)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryUnregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.polidea.rxandroidble2.internal.util.ObservableUtil$1: io.reactivex.ObservableSource apply(io.reactivex.Observable)
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: long getMarkerTime()
okhttp3.internal.connection.RealConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.view.ReactViewGroup)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void removeWebSocketHandler(double)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int,boolean,boolean,io.reactivex.functions.Action)
okhttp3.Request: java.util.Map getTags$okhttp()
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus(com.facebook.jni.DestructorThread$1)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: void run()
com.facebook.react.bridge.JsonWriterHelper: JsonWriterHelper()
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer getReceiveBuffer()
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager: void reset()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder builder()
okhttp3.Dns$Companion: Dns$Companion()
okhttp3.internal.cache.DiskLruCache$Entry: void setLockingSourceCount$okhttp(int)
com.facebook.react.bridge.AssertionException: AssertionException(java.lang.String)
okhttp3.CacheControl: boolean -deprecated_onlyIfCached()
okhttp3.internal.http2.Http2Reader$Companion: Http2Reader$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromList(java.util.List)
io.reactivex.Flowable: io.reactivex.Flowable onErrorReturnItem(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.polidea.rxandroidble2.internal.SingleResponseOperation: SingleResponseOperation(android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,com.polidea.rxandroidble2.exceptions.BleGattOperationType,com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration)
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarVisibility(boolean)
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: android.bluetooth.le.AdvertiseSettings buildAdvertiseSettings(com.facebook.react.bridge.ReadableMap)
com.facebook.soloader.ApplicationSoSource: void addToLdLibraryPath(java.util.Collection)
com.facebook.react.views.text.ReactVirtualTextViewManager: ReactVirtualTextViewManager()
okhttp3.internal.connection.RealCall: void setConnectionToCancel(okhttp3.internal.connection.RealConnection)
io.reactivex.Flowable: io.reactivex.Flowable flatMapIterable(io.reactivex.functions.Function,int)
okhttp3.Dispatcher: boolean promoteAndExecute()
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$2: void onReadRemoteRssi(android.bluetooth.BluetoothGatt,int,int)
okhttp3.internal.cache.CacheInterceptor$Companion: CacheInterceptor$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.concurrent.TaskQueue: boolean getShutdown$okhttp()
io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function3)
io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function4)
okhttp3.internal.connection.RealCall$AsyncCall: RealCall$AsyncCall(okhttp3.internal.connection.RealCall,okhttp3.Callback)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.bleplx.BlePlxModule: void writeCharacteristicForService(int,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: java.lang.String getName()
okhttp3.internal.cache.CacheInterceptor$Companion: okhttp3.Response stripBody(okhttp3.Response)
okhttp3.Challenge: boolean equals(java.lang.Object)
com.facebook.react.bridge.ReadableNativeArray: boolean isNull(int)
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: io.reactivex.ObservableTransformer setupModeTransformer(com.polidea.rxandroidble2.internal.connection.DescriptorWriter,android.bluetooth.BluetoothGattCharacteristic,byte[],com.polidea.rxandroidble2.NotificationSetupMode)
io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource[],io.reactivex.functions.Function)
okhttp3.internal.cache.CacheInterceptor$Companion: okhttp3.Headers combine(okhttp3.Headers,okhttp3.Headers)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void finishOperationBatch()
io.reactivex.Observable: io.reactivex.Observable map(io.reactivex.functions.Function)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderWidth(com.facebook.react.views.textinput.ReactEditText,int,float)
com.polidea.rxandroidble2.internal.operations.MtuRequestOperation: java.lang.String toString()
okhttp3.Dispatcher: void finished$okhttp(okhttp3.internal.connection.RealCall$AsyncCall)
io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiFunction)
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl$2$1: void run()
okhttp3.MultipartReader: okhttp3.MultipartReader$Part nextPart()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)
okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)
com.facebook.hermes.intl.NumberFormat: NumberFormat(java.util.List,java.util.Map)
io.reactivex.Flowable: io.reactivex.Flowable mergeArray(org.reactivestreams.Publisher[])
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothInteractionExecutorServiceFactory$InstanceHolder: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothInteractionExecutorServiceFactory access$000()
okhttp3.Route: okhttp3.Address -deprecated_address()
com.facebook.react.views.modal.ReactModalHostManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
io.reactivex.Observable: io.reactivex.Observable flatMapMaybe(io.reactivex.functions.Function,boolean)
com.polidea.rxandroidble2.internal.util.CheckerConnectPermission_Factory: com.polidea.rxandroidble2.internal.util.CheckerConnectPermission_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setStyle(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: NativeWebSocketModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
io.reactivex.Single: io.reactivex.Flowable concat(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)
io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit,boolean)
com.polidea.rxandroidble2.RxBleClient: java.lang.String[] getRecommendedScanRuntimePermissions()
androidx.fragment.app.FragmentActivity: void supportPostponeEnterTransition()
io.reactivex.Single: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(android.view.View,int)
com.facebook.hermes.intl.Intl: java.util.List getCanonicalLocales(java.util.List)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationServicesStatusFactory: com.polidea.rxandroidble2.internal.util.LocationServicesStatus provideLocationServicesStatus(int,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher: void setNativeCallback(android.bluetooth.BluetoothGattCallback)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(android.view.View,java.lang.String)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
com.facebook.react.views.view.ReactClippingViewManager: ReactClippingViewManager()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,int,com.facebook.react.bridge.ReadableArray)
com.polidea.rxandroidble2.internal.operations.ScanOperationApi21: java.lang.String toString()
com.polidea.rxandroidble2.RxBleClientImpl: boolean lambda$bluetoothAdapterOffExceptionObservable$3(com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState)
okhttp3.internal.connection.ExchangeFinder: ExchangeFinder(okhttp3.internal.connection.RealConnectionPool,okhttp3.Address,okhttp3.internal.connection.RealCall,okhttp3.EventListener)
okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsShakeToShowDevMenuEnabled(boolean)
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.toast.ToastModule)
okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()
okio.ForwardingSource: okio.Timeout timeout()
com.polidea.rxandroidble2.internal.operations.DescriptorReadOperation_Factory: java.lang.Object get()
com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper: int startLeScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)
com.polidea.rxandroidble2.internal.operations.ScanOperationApi18: void stopScan(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,android.bluetooth.BluetoothAdapter$LeScanCallback)
okhttp3.OkHttpClient$Builder: void setProxy$okhttp(java.net.Proxy)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,com.facebook.react.bridge.ReadableArray)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: boolean isException(int)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void toCircle(android.graphics.Bitmap,boolean)
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi31: boolean isLocationProviderEnabledRequired()
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(int)
com.polidea.rxandroidble2.internal.operations.LegacyScanOperation: boolean startScan(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,android.bluetooth.BluetoothAdapter$LeScanCallback)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.polidea.rxandroidble2.internal.util.ByteAssociationUtil: io.reactivex.functions.Function getBytesFromAssociation()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder query(java.lang.String)
com.facebook.react.views.text.ReactTextView: void setEllipsizeLocation(android.text.TextUtils$TruncateAt)
com.facebook.react.views.image.ReactImageView: void setBorderColor(int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.MultipartBody: java.util.List parts()
okhttp3.Route: int hashCode()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
com.facebook.react.turbomodule.core.TurboModuleManager: boolean shouldEnableLegacyModuleInterop()
com.bleplx.adapter.BleModule: void monitorCharacteristicForDevice(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.bleplx.adapter.OnEventCallback,com.bleplx.adapter.OnErrorCallback)
okhttp3.Protocol: okhttp3.Protocol get(java.lang.String)
io.reactivex.Flowable: io.reactivex.Single contains(java.lang.Object)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
com.facebook.react.bridge.ReadableNativeMap$1: boolean hasNext()
okio.Timeout: boolean hasDeadline()
io.reactivex.Flowable: io.reactivex.Flowable timeInterval(java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifier: void verify(boolean)
okhttp3.MultipartBody$Part: MultipartBody$Part(okhttp3.Headers,okhttp3.RequestBody)
androidx.appcompat.app.AppCompatActivity: void onLocalesChanged(androidx.core.os.LocaleListCompat)
com.facebook.soloader.NativeLoaderToSoLoaderDelegate: int getSoSourcesVersion()
io.reactivex.Flowable: io.reactivex.Flowable timeInterval(java.util.concurrent.TimeUnit)
okhttp3.RequestBody: boolean isOneShot()
androidx.fragment.app.FragmentActivity: boolean onPrepareOptionsPanel(android.view.View,android.view.Menu)
com.polidea.rxandroidble2.internal.connection.NoRetryStrategy: io.reactivex.Observable apply(io.reactivex.Observable)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.polidea.rxandroidble2.RxBleScanResult: com.polidea.rxandroidble2.RxBleDevice getBleDevice()
com.facebook.react.uimanager.ViewManager: android.view.View recycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
io.reactivex.Single: io.reactivex.Flowable flattenAsFlowable(io.reactivex.functions.Function)
com.facebook.react.modules.i18nmanager.I18nManagerModule: void swapLeftAndRightInRTL(boolean)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setResizeMode(java.lang.String)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setQueryParameter(java.lang.String,java.lang.String)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideScanPreconditionVerifierFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideScanPreconditionVerifierFactory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.fabric.StateWrapperImpl: StateWrapperImpl()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: RxBleConnectionImpl(com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueue,com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager,com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager,com.polidea.rxandroidble2.internal.connection.MtuProvider,com.polidea.rxandroidble2.internal.connection.DescriptorWriter,com.polidea.rxandroidble2.internal.operations.OperationsProvider,bleshadow.javax.inject.Provider,io.reactivex.Scheduler,com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
com.bleplx.adapter.BleModule: void lambda$changeAdapterState$16(com.bleplx.adapter.utils.SafeExecutor,java.lang.String)
com.polidea.rxandroidble2.ClientComponent$ClientModule: android.bluetooth.BluetoothAdapter provideBluetoothAdapter()
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache_Factory: java.lang.Object get()
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
com.facebook.react.modules.network.NetworkingModule: void applyCustomBuilder(okhttp3.OkHttpClient$Builder)
com.bleplx.adapter.BleModule: void readDescriptorForService(int,java.lang.String,java.lang.String,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher_Factory: com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher_Factory create()
okhttp3.internal.platform.android.Android10SocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
com.facebook.react.modules.toast.ToastModule: void show(java.lang.String,double)
com.polidea.rxandroidble2.internal.util.QueueReleasingEmitterWrapper: boolean isWrappedEmitterUnsubscribed()
com.facebook.fbreact.specs.NativeI18nManagerSpec: void swapLeftAndRightInRTL(boolean)
okhttp3.internal.connection.RealConnection: void cancel()
com.polidea.rxandroidble2.internal.RxBleLog: int getUuidLogSetting()
com.polidea.rxandroidble2.internal.RxBleLog$1: void log(int,java.lang.String,java.lang.String)
okhttp3.internal.concurrent.TaskLoggerKt: void access$log(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,java.lang.String)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.facebook.react.bridge.queue.QueueThreadExceptionHandler: void handleException(java.lang.Exception)
com.polidea.rxandroidble2.scan.ScanSettings$1: ScanSettings$1()
com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider_Factory: java.lang.Object get()
androidx.appcompat.widget.AppCompatEditText: void setEmojiCompatEnabled(boolean)
okhttp3.Request: java.lang.Object tag()
io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher,int)
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation: LegacySavedStateHandleController$OnRecreation()
com.polidea.rxandroidble2.exceptions.BleGattException: java.lang.String getMacAddress()
okhttp3.internal.http2.Http2Connection: long access$getDegradedPongsReceived$p(okhttp3.internal.http2.Http2Connection)
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: NotificationAndIndicationManager(byte[],byte[],byte[],android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,com.polidea.rxandroidble2.internal.connection.DescriptorWriter)
com.facebook.react.fabric.ReactNativeConfig: boolean getBool(java.lang.String)
com.facebook.react.bridge.CxxCallbackImpl: void nativeInvoke(com.facebook.react.bridge.NativeArray)
okhttp3.internal.concurrent.TaskQueue$AwaitIdleTask: java.util.concurrent.CountDownLatch getLatch()
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: io.reactivex.ObservableSource lambda$setupServerInitiatedCharacteristicRead$2(android.bluetooth.BluetoothGattCharacteristic,boolean,com.polidea.rxandroidble2.NotificationSetupMode)
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: void clear()
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl: LongWriteOperationBuilderImpl(com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueue,com.polidea.rxandroidble2.internal.connection.MtuBasedPayloadSizeLimit,com.polidea.rxandroidble2.RxBleConnection,com.polidea.rxandroidble2.internal.operations.OperationsProvider)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: com.polidea.rxandroidble2.RxBleConnection$LongWriteOperationBuilder createNewLongWriteBuilder()
com.polidea.rxandroidble2.internal.RxBleDeviceImpl_Factory: com.polidea.rxandroidble2.internal.RxBleDeviceImpl get()
com.polidea.rxandroidble2.internal.operations.DisconnectOperation_Factory: java.lang.Object get()
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: void addListener(java.lang.String)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: boolean setFontVariationSettings(android.widget.TextView,java.lang.String)
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter_Factory: DisconnectionRouter_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void showMessage(java.lang.String,java.lang.Double,java.lang.Double)
okhttp3.Cache$Companion: java.lang.String key(okhttp3.HttpUrl)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedCallback registerOnBackPressedCallback(java.lang.Object,androidx.appcompat.app.AppCompatDelegateImpl)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableMap getMap(int)
androidx.appcompat.app.AppCompatActivity: void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.imagehelper.ImageSource getImageSource()
io.reactivex.Flowable: io.reactivex.Flowable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator getProxyAuthenticator$okhttp()
okhttp3.Handshake: java.util.List peerCertificates()
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.text.ReactRawTextManager: java.lang.String getName()
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
com.polidea.rxandroidble2.internal.util.ByteAssociationUtil$2: ByteAssociationUtil$2()
io.reactivex.Flowable: io.reactivex.Flowable concatWith(io.reactivex.MaybeSource)
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority[] values()
io.reactivex.Single: io.reactivex.Single defer(java.util.concurrent.Callable)
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$7: java.lang.Object apply(java.lang.Object)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Class getShadowNodeClass()
io.reactivex.Flowable: io.reactivex.Flowable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(android.os.Bundle)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$10: io.reactivex.SingleSource apply(com.polidea.rxandroidble2.RxBleDeviceServices)
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
com.facebook.react.bridge.ReactContext: boolean hasCurrentActivity()
com.facebook.react.bridge.DynamicFromMap: java.lang.String asString()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.common.time.MonotonicClock: long now()
com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator_Factory: InternalScanResultCreator_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.Handshake$peerCertificates$2: java.util.List invoke()
com.facebook.react.uimanager.SimpleViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.ReactContext: boolean hasActiveCatalystInstance()
okhttp3.internal.connection.RouteDatabase: void failed(okhttp3.Route)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: okio.Timeout timeout()
io.reactivex.Observable: io.reactivex.Observable concat(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.List getEagerInitModuleNames()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration namedTimeoutConfiguration()
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.core.TimingModule)
com.polidea.rxandroidble2.internal.scan.ScanRecordImplCompat: byte[] getManufacturerSpecificData(int)
io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getFactory$cp()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: NativeSettingsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.events.FabricEventEmitter: FabricEventEmitter(com.facebook.react.fabric.FabricUIManager)
io.reactivex.Single: io.reactivex.Single fromPublisher(org.reactivestreams.Publisher)
okhttp3.internal.cache.DiskLruCache: boolean getClosed$okhttp()
com.facebook.react.bridge.ReactContext: void emitDeviceEvent(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: android.animation.ValueAnimator getFlingAnimator()
okio.ByteString: void writeObject(java.io.ObjectOutputStream)
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setAllCaps(boolean)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setColor(double,boolean)
com.facebook.react.views.scroll.ReactScrollView: boolean getScrollEnabled()
com.facebook.react.modules.websocket.WebSocketModule: void notifyWebSocketFailed(int,java.lang.String)
okhttp3.internal.cache.DiskLruCache$cleanupTask$1: DiskLruCache$cleanupTask$1(okhttp3.internal.cache.DiskLruCache,java.lang.String)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: Jdk8WithJettyBootPlatform$AlpnProvider(java.util.List)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryRegisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
io.reactivex.Flowable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)
com.facebook.react.uimanager.ViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.views.view.ReactViewGroup: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.facebook.react.views.image.ReactImageManager: void setAccessible(com.facebook.react.views.image.ReactImageView,boolean)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl_Factory: com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl newInstance(com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueue,java.lang.Object,com.polidea.rxandroidble2.RxBleConnection,com.polidea.rxandroidble2.internal.operations.OperationsProvider)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.Response$Builder readResponseHeaders(boolean)
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KProperty0$Getter getGetter()
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityStopped(android.app.Activity)
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl$1: java.lang.Object get()
io.reactivex.Observable: io.reactivex.Observable fromIterable(java.lang.Iterable)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getScrollEventThrottle()
okhttp3.Route: boolean equals(java.lang.Object)
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Observable setupIndication(android.bluetooth.BluetoothGattCharacteristic)
okhttp3.internal.platform.ConscryptPlatform: boolean access$isSupported$cp()
io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
com.polidea.rxandroidble2.RxBleScanResult: RxBleScanResult(com.polidea.rxandroidble2.RxBleDevice,int,byte[])
com.bleplx.BlePlxModule: void writeDescriptorForService(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.internal.ws.RealWebSocket: boolean processNextFrame()
okhttp3.Cookie: long -deprecated_expiresAt()
okhttp3.Address: javax.net.SocketFactory socketFactory()
okhttp3.internal.connection.RealConnection: boolean supportsUrl(okhttp3.HttpUrl)
com.facebook.fbreact.specs.NativeClipboardSpec: void getString(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
io.reactivex.Flowable: java.lang.Object blockingLast()
io.reactivex.Flowable: io.reactivex.Flowable lift(io.reactivex.FlowableOperator)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(com.facebook.react.views.modal.ReactModalHostView,boolean)
androidx.activity.ComponentActivity: void onMultiWindowModeChanged(boolean,android.content.res.Configuration)
com.polidea.rxandroidble2.RxBleClientImpl: void guardBluetoothAdapterAvailable()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
okhttp3.Headers: java.util.Set names()
okhttp3.internal.ws.RealWebSocket: boolean access$isValid(okhttp3.internal.ws.RealWebSocket,okhttp3.internal.ws.WebSocketExtensions)
com.facebook.react.bridge.Callback: void invoke(java.lang.Object[])
io.reactivex.Single: io.reactivex.Single takeUntil(org.reactivestreams.Publisher)
com.polidea.rxandroidble2.scan.ScanFilter$1: java.lang.Object[] newArray(int)
com.facebook.react.bridge.ReadableNativeMap: ReadableNativeMap(com.facebook.jni.HybridData)
com.polidea.rxandroidble2.internal.connection.ThrowingIllegalOperationHandler_Factory: com.polidea.rxandroidble2.internal.connection.ThrowingIllegalOperationHandler get()
com.facebook.soloader.SoLoader: java.lang.Boolean loadLibraryOnNonAndroid(java.lang.String)
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableMap fromJSONObjectString(java.lang.String)
com.bleplx.adapter.BleModule: void disable(java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
io.reactivex.Flowable: io.reactivex.Single toSortedList(int)
com.facebook.react.bridge.UIManager: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
com.polidea.rxandroidble2.internal.util.ByteAssociation: com.polidea.rxandroidble2.internal.util.ByteAssociation create(java.lang.Object,byte[])
com.facebook.react.uimanager.UIManagerModule: void addUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
com.himelbrand.ble.peripheral.RNBLEModule: RNBLEModule(com.facebook.react.bridge.ReactApplicationContext)
com.polidea.rxandroidble2.internal.util.ObservableUtil$1: ObservableUtil$1()
com.facebook.react.bridge.CxxModuleWrapperBase: boolean canOverrideExistingModule()
okhttp3.Cache$Companion: boolean hasVaryAll(okhttp3.Response)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl: void onConnectionSubscribed()
okhttp3.internal.ws.RealWebSocket$Streams: RealWebSocket$Streams(boolean,okio.BufferedSource,okio.BufferedSink)
com.polidea.rxandroidble2.internal.operations.ScanOperationApi18$1: void onLeScan(android.bluetooth.BluetoothDevice,int,byte[])
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi23_Factory: com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi23 newInstance(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator,com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator,com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter)
io.reactivex.Observable: io.reactivex.Observable window(java.util.concurrent.Callable,int)
com.polidea.rxandroidble2.utils.ConnectionSharingAdapter$1: ConnectionSharingAdapter$1(com.polidea.rxandroidble2.utils.ConnectionSharingAdapter)
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache: java.util.Set keySet()
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: javax.net.ssl.X509TrustManager component1()
io.reactivex.Single: io.reactivex.Flowable merge(io.reactivex.SingleSource,io.reactivex.SingleSource)
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
okhttp3.internal.tls.CertificateChainCleaner$Companion: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)
okhttp3.internal.ws.WebSocketExtensions: boolean equals(java.lang.Object)
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock get()
okhttp3.internal.tls.BasicCertificateChainCleaner$Companion: BasicCertificateChainCleaner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Http2: java.lang.String formatFlags(int,int)
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify valueOf(java.lang.String)
okhttp3.internal.platform.ConscryptPlatform$Companion: boolean atLeastVersion(int,int,int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder dns(okhttp3.Dns)
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: void setConsolePatchSettings(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void resetPerfStats()
com.facebook.soloader.SoLoader: java.lang.String getLibraryPath(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(android.view.View,java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.Task awaitTaskToRun()
okhttp3.OkHttpClient$Builder$addInterceptor$2: OkHttpClient$Builder$addInterceptor$2(kotlin.jvm.functions.Function1)
okhttp3.internal.http2.Http2Reader$Handler: void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString)
io.reactivex.Observable: io.reactivex.Observable concatMapMaybeDelayError(io.reactivex.functions.Function,boolean,int)
com.polidea.rxandroidble2.RxBleAdapterStateObservable_Factory: RxBleAdapterStateObservable_Factory(bleshadow.javax.inject.Provider)
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: CacheInterceptor$cacheWritingResponse$cacheWritingSource$1(okio.BufferedSource,okhttp3.internal.cache.CacheRequest,okio.BufferedSink)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,java.lang.String,okhttp3.MediaType,int,java.lang.Object)
okio.Timeout: okio.Timeout clearDeadline()
com.facebook.react.fabric.ReactNativeConfig: java.lang.String getString(java.lang.String)
com.polidea.rxandroidble2.internal.util.QueueReleasingEmitterWrapper: void onComplete()
okhttp3.internal.http2.Http2Stream: okio.Timeout writeTimeout()
com.facebook.react.defaults.DefaultComponentsRegistry: com.facebook.jni.HybridData initHybrid(com.facebook.react.fabric.ComponentFactory)
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
com.facebook.react.views.scroll.ReactScrollView: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
io.reactivex.Flowable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function)
com.facebook.react.views.scroll.ReactScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.SearchView$Api29Impl: void refreshAutoCompleteResults(android.widget.AutoCompleteTextView)
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvidesOperationTimeoutConfFactory: com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration providesOperationTimeoutConf(io.reactivex.Scheduler,com.polidea.rxandroidble2.Timeout)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getConstants()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPath(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable merge(java.lang.Iterable,int,int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopAnimation(double)
okhttp3.internal.Util$asFactory$1: Util$asFactory$1(okhttp3.EventListener)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
com.facebook.react.uimanager.ComponentNameResolverManager: ComponentNameResolverManager(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
okhttp3.Cache$CacheResponseBody: Cache$CacheResponseBody(okhttp3.internal.cache.DiskLruCache$Snapshot,java.lang.String,java.lang.String)
com.facebook.react.bridge.SoftAssertions: java.lang.Object assertNotNull(java.lang.Object)
okhttp3.JavaNetAuthenticator: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
okhttp3.Response$Builder: long getReceivedResponseAtMillis$okhttp()
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureLatest()
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String)
okhttp3.Response: okhttp3.Headers headers()
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: Http2Connection$sendDegradedPingLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.polidea.rxandroidble2.internal.operations.MtuRequestOperation_Factory: java.lang.Object get()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(android.view.View,float)
com.polidea.rxandroidble2.exceptions.BleScanException: java.lang.String createMessage(int,java.util.Date)
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSink getSink$okhttp()
com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper: void stopLeScan(android.bluetooth.le.ScanCallback)
okhttp3.Request$Builder: void setHeaders$okhttp(okhttp3.Headers$Builder)
com.facebook.react.animated.NativeAnimatedModule: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Void[])
io.reactivex.Flowable: io.reactivex.Flowable debounce(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager_Factory: com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager get()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String getName()
okhttp3.internal.cache.DiskLruCache$Entry: void writeLengths$okhttp(okio.BufferedSink)
com.polidea.rxandroidble2.scan.ScanFilter$Builder: com.polidea.rxandroidble2.scan.ScanFilter$Builder setDeviceName(java.lang.String)
com.facebook.drawee.view.DraweeView: void setImageDrawable(android.graphics.drawable.Drawable)
okhttp3.EventListener: void cacheHit(okhttp3.Call,okhttp3.Response)
io.reactivex.Single: io.reactivex.Single doOnError(io.reactivex.functions.Consumer)
com.facebook.react.turbomodule.core.TurboModuleManager: boolean isLegacyModule(java.lang.String)
okhttp3.CertificatePinner$Pin: int hashCode()
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$3: io.reactivex.Observable apply(io.reactivex.Observable)
com.polidea.rxandroidble2.internal.operations.ScanOperation: java.lang.Object createScanCallback(io.reactivex.ObservableEmitter)
com.facebook.react.uimanager.BaseViewManager: void setPointerMove(android.view.View,boolean)
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: com.facebook.hermes.intl.IPlatformCollator$CaseFirst[] values()
com.polidea.rxandroidble2.internal.connection.ConnectionComponent$Builder: com.polidea.rxandroidble2.internal.connection.ConnectionComponent$Builder suppressOperationChecks(boolean)
com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator_Factory: com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.NativeArray: java.lang.String toString()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void removeListeners(double)
com.polidea.rxandroidble2.internal.operations.ServiceDiscoveryOperation: java.lang.String toString()
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.net.URI)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothInteractionSchedulerFactory: ClientComponent_ClientModule_ProvideBluetoothInteractionSchedulerFactory(bleshadow.javax.inject.Provider)
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.switchview.ReactSwitch)
okhttp3.internal.io.FileSystem$Companion: FileSystem$Companion()
com.facebook.react.CompositeReactPackageTurboModuleManagerDelegate: void addTurboModuleManagerDelegate(com.facebook.react.turbomodule.core.TurboModuleManagerDelegate)
com.facebook.soloader.DirectApkSoSource: java.util.Set getDirectApkLdPaths(java.lang.String,java.lang.String)
okhttp3.internal.ws.RealWebSocket$Close: int getCode()
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType[] values()
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(com.facebook.react.views.modal.ReactModalHostView,boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setAnimationProgress(float)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addNetworkingHandler()
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
okhttp3.internal.connection.RouteException: java.io.IOException getFirstConnectException()
okhttp3.OkHttpClient: java.util.List -deprecated_networkInterceptors()
com.facebook.react.views.image.ReactImageView: void setLoadingIndicatorSource(java.lang.String)
com.polidea.rxandroidble2.internal.util.ByteAssociationUtil$3: boolean test(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckedTextView: void setAllCaps(boolean)
com.facebook.react.bridge.JSBundleLoader$1: JSBundleLoader$1(android.content.Context,java.lang.String,boolean)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
okhttp3.OkHttpClient$Builder: void setFollowRedirects$okhttp(boolean)
com.facebook.soloader.NativeDeps: java.lang.String getLibString(int)
com.polidea.rxandroidble2.internal.logger.LoggerUtil: void logCallback(java.lang.String,android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,boolean)
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(io.reactivex.functions.Function,org.reactivestreams.Publisher[])
com.facebook.react.bridge.ReadableNativeMap: void ensureKeysAreImported()
com.facebook.soloader.NativeDeps$1: void run()
com.facebook.soloader.Elf64_Dyn: Elf64_Dyn()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
io.reactivex.Observable: io.reactivex.Observable concatEager(io.reactivex.ObservableSource)
com.facebook.soloader.ExtractFromZipSoSource$ZipDso: java.lang.String makePseudoHash(java.util.zip.ZipEntry)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: NativeAccessibilityInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
com.polidea.rxandroidble2.internal.scan.ScanRecordImplCompat: byte[] getBytes()
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$2: void onReliableWriteCompleted(android.bluetooth.BluetoothGatt,int)
okhttp3.internal.cache.DiskLruCache: void access$setRedundantOpCount$p(okhttp3.internal.cache.DiskLruCache,int)
io.reactivex.Observable: io.reactivex.Observable delay(io.reactivex.ObservableSource,io.reactivex.functions.Function)
okhttp3.internal.tls.BasicCertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
okhttp3.internal.http2.Hpack$Writer: int evictToRecoverBytes(int)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.Dynamic getDynamic(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToAlignment(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.bridge.JSCJavaScriptExecutor: java.lang.String getName()
com.facebook.soloader.SoLoader: java.lang.reflect.Method getNativeLoadRuntimeMethod()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
com.facebook.react.modules.websocket.WebSocketModule: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.internal.ws.RealWebSocket: void connect(okhttp3.OkHttpClient)
okhttp3.internal.http2.Http2Reader$ContinuationSource: int getStreamId()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDeviceSdkFactory: java.lang.Object get()
io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
okhttp3.internal.ws.WebSocketExtensions: WebSocketExtensions()
com.facebook.react.uimanager.UIManagerModule: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.polidea.rxandroidble2.scan.ScanSettings: boolean shouldCheckLocationProviderState()
com.polidea.rxandroidble2.internal.connection.ThrowingIllegalOperationHandler_Factory: ThrowingIllegalOperationHandler_Factory(bleshadow.javax.inject.Provider)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.WritableNativeArray: void pushNull()
com.polidea.rxandroidble2.internal.connection.MtuBasedPayloadSizeLimit_Factory: com.polidea.rxandroidble2.internal.connection.MtuBasedPayloadSizeLimit get()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.react.bridge.queue.MessageQueueThread: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
com.facebook.soloader.ElfByteChannel: long size()
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay[] values()
com.polidea.rxandroidble2.internal.connection.IllegalOperationMessageCreator: IllegalOperationMessageCreator(com.polidea.rxandroidble2.internal.util.CharacteristicPropertiesParser)
com.facebook.react.views.view.ReactViewGroup: void setBackground(android.graphics.drawable.Drawable)
com.polidea.rxandroidble2.RxBleDevice: io.reactivex.Observable establishConnection(boolean)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalTypeMap()
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.fabric.BindingImpl: void driveCxxAnimations()
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray()
okhttp3.Cache$RealCacheRequest: okio.Sink body()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String,long)
okhttp3.internal.tls.BasicCertificateChainCleaner: BasicCertificateChainCleaner(okhttp3.internal.tls.TrustRootIndex)
okhttp3.internal.Util: void addIfAbsent(java.util.List,java.lang.Object)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okio.ByteString,okhttp3.MediaType)
com.polidea.rxandroidble2.internal.scan.ScanRecordImplNativeWrapper: ScanRecordImplNativeWrapper(android.bluetooth.le.ScanRecord,com.polidea.rxandroidble2.internal.util.ScanRecordParser)
okhttp3.internal.http2.Http2Writer: void rstStream(int,okhttp3.internal.http2.ErrorCode)
com.polidea.rxandroidble2.internal.DeviceModule_ProvideConnectionStateChangeListenerFactory: java.lang.Object get()
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.connection.RealConnection getConnection()
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi21: ScanSetupBuilderImplApi21(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator,com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator,com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter)
okhttp3.internal.ws.WebSocketReader: void readHeader()
okhttp3.Address: boolean equalsNonHost$okhttp(okhttp3.Address)
com.facebook.react.uimanager.BaseViewManager: void setPointerEventsFlag(android.view.View,com.facebook.react.uimanager.events.PointerEventHelper$EVENT,boolean)
com.facebook.react.views.scroll.ReactScrollView: void setScrollEnabled(boolean)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: java.lang.String getName()
io.reactivex.Flowable: io.reactivex.Flowable observeOn(io.reactivex.Scheduler)
com.polidea.rxandroidble2.ClientComponent$Builder: com.polidea.rxandroidble2.ClientComponent build()
com.polidea.rxandroidble2.exceptions.BleGattCallbackTimeoutException: BleGattCallbackTimeoutException(android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.exceptions.BleGattOperationType)
okhttp3.Challenge: java.lang.String -deprecated_realm()
com.polidea.rxandroidble2.RxBleClient: java.util.Set getConnectedPeripherals()
com.bleplx.adapter.BleModule: java.lang.String mapRxBleAdapterStateToLocalBluetoothState(com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState)
io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function3)
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
io.reactivex.Flowable: io.reactivex.Flowable take(long)
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: java.lang.String getConsolePatchSettings()
com.facebook.react.fabric.FabricUIManager: void initialize()
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Observable queue(com.polidea.rxandroidble2.RxBleCustomOperation)
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform findJvmPlatform()
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(android.view.View,java.lang.Integer)
com.polidea.rxandroidble2.RxBleClient: void setLogLevel(int)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] access$getPublicSuffixListBytes$p(okhttp3.internal.publicsuffix.PublicSuffixDatabase)
okhttp3.Headers$Builder: Headers$Builder()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(java.time.Duration)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedViewConstants()
com.facebook.react.uimanager.ViewGroupManager: void addView(android.view.View,android.view.View,int)
com.ghostcommv2.MainApplication$reactNativeHost$1: boolean getUseDeveloperSupport()
okhttp3.internal.http2.Http2Connection$Builder: void setSource$okhttp(okio.BufferedSource)
io.reactivex.Observable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable,io.reactivex.functions.Function)
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi18: void verify(boolean)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5$1: boolean test(java.lang.Object)
com.facebook.react.modules.blob.BlobModule: java.lang.String store(byte[])
okhttp3.HttpUrl$Builder: void setEncodedQueryNamesAndValues$okhttp(java.util.List)
com.facebook.react.views.text.ReactTextView: android.text.Spannable getSpanned()
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleProvider getJSIModuleProvider()
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$2: void onError(java.lang.Throwable)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
com.polidea.rxandroidble2.exceptions.BleGattOperationType: java.lang.String toString()
com.facebook.imagepipeline.memory.NativeMemoryChunkPool: NativeMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
okhttp3.internal.concurrent.TaskQueue: java.lang.String toString()
com.polidea.rxandroidble2.internal.operations.ConnectOperation$2: io.reactivex.SingleSource apply(io.reactivex.Single)
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
okhttp3.WebSocketListener: void onMessage(okhttp3.WebSocket,java.lang.String)
com.facebook.soloader.SysUtil$LollipopSysdeps: java.lang.String[] getSupportedAbis()
com.facebook.soloader.SysUtil$LollipopSysdeps: boolean is64Bit()
okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: void endCreatingModule()
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: RealConnection$newWebSocketStreams$1(okhttp3.internal.connection.Exchange,okio.BufferedSource,okio.BufferedSink,boolean,okio.BufferedSource,okio.BufferedSink)
com.facebook.react.bridge.JavaOnlyMap: void merge(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,org.reactivestreams.Publisher)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
com.facebook.react.bridge.ReactBridge: long getLoadStartTime()
com.facebook.react.views.textinput.ReactEditText: void setBorderStyle(java.lang.String)
com.polidea.rxandroidble2.RxBleClientImpl: io.reactivex.Observable createScanOperationApi18(java.util.UUID[])
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.X509TrustManager)
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
io.reactivex.Flowable: io.reactivex.Maybe singleElement()
okhttp3.internal.ws.WebSocketReader: WebSocketReader(boolean,okio.BufferedSource,okhttp3.internal.ws.WebSocketReader$FrameCallback,boolean,boolean)
okhttp3.internal.concurrent.TaskRunner$runnable$1: void run()
com.polidea.rxandroidble2.internal.RxBleLog: void updateLogOptions(com.polidea.rxandroidble2.LogOptions)
io.reactivex.Observable: io.reactivex.Observable startWith(java.lang.Object)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5$2: CharacteristicLongWriteOperation$5$2(com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$5,java.nio.ByteBuffer)
com.facebook.soloader.ElfFileChannel: void openChannel()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void readTheListUninterruptibly()
com.facebook.react.bridge.PerformanceCounter: void profileNextBatch()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$3: void onComplete()
com.facebook.react.bridge.CatalystInstance: void destroy()
io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function7)
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: void getAdapterState(com.facebook.react.bridge.Promise)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void initialize()
com.facebook.react.views.textinput.ReactTextInputManager: void setFontStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
okhttp3.internal.platform.ConscryptPlatform$Companion: boolean isSupported()
com.facebook.react.bridge.WritableNativeMap: void putBoolean(java.lang.String,boolean)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.react.bridge.NativeModule getLegacyModule(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable window(org.reactivestreams.Publisher,io.reactivex.functions.Function)
io.reactivex.Flowable: io.reactivex.Flowable switchMap(io.reactivex.functions.Function)
io.reactivex.Observable: io.reactivex.Maybe reduce(io.reactivex.functions.BiFunction)
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
com.facebook.react.views.textinput.ReactEditText: void setEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
okhttp3.Response$Builder: java.lang.String getMessage$okhttp()
okhttp3.HttpUrl: java.lang.String encodedQuery()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder protocols(java.util.List)
io.reactivex.Observable: io.reactivex.Observable withLatestFrom(java.lang.Iterable,io.reactivex.functions.Function)
io.reactivex.Observable: io.reactivex.Observable doOnTerminate(io.reactivex.functions.Action)
io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function6)
okhttp3.internal.cache.FaultHidingSink: FaultHidingSink(okio.Sink,kotlin.jvm.functions.Function1)
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager: io.reactivex.Maybe getListOfServicesFromGatt()
com.bleplx.adapter.BleModule: com.bleplx.adapter.Characteristic getCharacteristicOrEmitError(int,java.lang.String,com.bleplx.adapter.OnErrorCallback)
io.reactivex.Flowable: io.reactivex.Flowable concatMapSingle(io.reactivex.functions.Function,int)
com.facebook.react.fabric.CoreComponentsRegistry: CoreComponentsRegistry(com.facebook.react.fabric.ComponentFactory)
io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$11$1: RxBleConnectionImpl$11$1(com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$11)
io.reactivex.Flowable: io.reactivex.Flowable generate(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer,io.reactivex.functions.Consumer)
com.facebook.react.bridge.JSBundleLoader: JSBundleLoader()
com.facebook.react.bridge.ReadableNativeMap: java.lang.String getString(java.lang.String)
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl_Factory: java.lang.Object get()
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: android.content.Context access$400(com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl)
io.reactivex.Single: io.reactivex.Single never()
io.reactivex.Observable: io.reactivex.Observable fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit)
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl_Factory: ConnectionOperationQueueImpl_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.Address: javax.net.SocketFactory -deprecated_socketFactory()
com.facebook.imagepipeline.memory.BufferMemoryChunkPool: BufferMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
okhttp3.Cache$Companion: okhttp3.Headers varyHeaders(okhttp3.Headers,okhttp3.Headers)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$2: RxBleGattCallback$2(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback)
okhttp3.Cookie: java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers)
okhttp3.Response$Builder: void setReceivedResponseAtMillis$okhttp(long)
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl: com.polidea.rxandroidble2.internal.operations.ReadRssiOperation provideRssiReadOperation()
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: void destroy()
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority valueOf(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void onHostDestroy()
androidx.activity.ComponentActivity: void onPictureInPictureModeChanged(boolean,android.content.res.Configuration)
com.facebook.soloader.ExoSoSource$ExoUnpacker: com.facebook.soloader.UnpackingSoSource$InputDsoIterator openDsoIterator()
com.facebook.react.fabric.StateWrapperImpl: void updateStateImpl(com.facebook.react.bridge.NativeMap)
com.polidea.rxandroidble2.RxBleDeviceServices$5: RxBleDeviceServices$5(com.polidea.rxandroidble2.RxBleDeviceServices,java.util.UUID)
com.facebook.react.modules.network.NetworkingModule: void sendRequestInternal(java.lang.String,java.lang.String,int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,int,boolean)
okhttp3.MultipartReader$PartSource: long read(okio.Buffer,long)
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices: void appendDeviceHeader(android.bluetooth.BluetoothDevice,java.lang.StringBuilder)
okhttp3.Request$Builder: okhttp3.Request$Builder delete()
com.polidea.rxandroidble2.internal.DeviceModule_ProvideBluetoothDeviceFactory: java.lang.Object get()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: ReactQueueConfigurationSpec$Builder()
com.facebook.soloader.ExtractFromZipSoSource$ZipDso: ExtractFromZipSoSource$ZipDso(java.lang.String,java.util.zip.ZipEntry,int)
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: java.lang.String getConsolePatchSettings()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setLength(int)
com.facebook.react.modules.appearance.AppearanceModule: void onConfigurationChanged(android.content.Context)
com.polidea.rxandroidble2.RxBleDevice: io.reactivex.Observable establishConnection(boolean,com.polidea.rxandroidble2.Timeout)
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.RealCall getCall$okhttp()
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: okio.Source source(java.io.File)
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache: com.polidea.rxandroidble2.internal.DeviceComponent get(java.lang.Object)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.modules.clipboard.ClipboardModule: ClipboardModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.network.NetworkingModule: void removeRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableNotificationValueFactory: byte[] provideEnableNotificationValue()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollPerfTag(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.facebook.soloader.ElfZipFileChannel: int read(java.nio.ByteBuffer)
okhttp3.internal.http2.Hpack$Reader: okio.ByteString readByteString()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
io.reactivex.Observable: io.reactivex.Observable onErrorResumeNext(io.reactivex.ObservableSource)
io.reactivex.Flowable: io.reactivex.Flowable concatMapDelayError(io.reactivex.functions.Function,int,boolean)
io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,long,boolean)
com.facebook.react.bridge.ReadableArray: java.util.ArrayList toArrayList()
okhttp3.internal.http2.Settings: int getMaxHeaderListSize(int)
com.facebook.react.fabric.BindingImpl: com.facebook.jni.HybridData initHybrid()
com.facebook.fbreact.specs.NativeAlertManagerSpec: NativeAlertManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
io.reactivex.Observable: io.reactivex.Single sequenceEqual(io.reactivex.ObservableSource,io.reactivex.ObservableSource,int)
com.facebook.react.bridge.JavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsConnectableCheckerFactory: java.lang.Object get()
com.facebook.react.modules.websocket.WebSocketModule: void ping(double)
io.reactivex.Single: io.reactivex.Single delaySubscription(io.reactivex.ObservableSource)
okhttp3.internal.http2.Header: Header(okio.ByteString,okio.ByteString)
com.polidea.rxandroidble2.internal.operations.ConnectOperation$2: ConnectOperation$2(com.polidea.rxandroidble2.internal.operations.ConnectOperation)
okhttp3.internal.http2.Http2Reader: java.util.List readHeaderBlock(int,int,int,int)
com.bleplx.BlePlxModule: void writeDescriptor(int,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatToggleButton: void setFilters(android.text.InputFilter[])
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater$okhttp(int,long)
com.facebook.react.fabric.SurfaceHandlerBinding: boolean isRunningNative()
okhttp3.FormBody$Builder: FormBody$Builder(java.nio.charset.Charset)
okio.Timeout: void waitUntilNotified(java.lang.Object)
com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter: java.util.List toNativeFilters(com.polidea.rxandroidble2.scan.ScanFilter[])
com.facebook.react.bridge.CatalystInstance: boolean isDestroyed()
com.facebook.react.bridge.ReadableMap: java.util.HashMap toHashMap()
io.reactivex.Observable: io.reactivex.Observable timer(long,java.util.concurrent.TimeUnit)
com.facebook.react.views.textinput.ReactTextInputManager: void setIncludeFontPadding(com.facebook.react.views.textinput.ReactEditText,boolean)
okhttp3.Response$Builder: void setProtocol$okhttp(okhttp3.Protocol)
okhttp3.internal.ws.WebSocketExtensions: boolean noContextTakeover(boolean)
com.facebook.react.uimanager.RootViewManager: java.lang.String getName()
com.polidea.rxandroidble2.internal.connection.ConnectionModule_MinimumMtuFactory: java.lang.Integer get()
okhttp3.MediaType: java.lang.String type()
com.facebook.soloader.DirectApkSoSource: boolean isValid()
okhttp3.internal.http2.Http2Connection: void start()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.graphics.Rect getOverflowInset()
com.polidea.rxandroidble2.internal.util.ClientStateObservable_Factory: com.polidea.rxandroidble2.internal.util.ClientStateObservable newInstance(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,io.reactivex.Observable,io.reactivex.Observable,com.polidea.rxandroidble2.internal.util.LocationServicesStatus,io.reactivex.Scheduler)
androidx.appcompat.app.ResourcesFlusher$Api16Impl: void clear(android.util.LongSparseArray)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher,org.reactivestreams.Publisher)
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.JSExceptionHandler)
okhttp3.internal.http2.ErrorCode$Companion: ErrorCode$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: void enableAdapter()
okhttp3.Dispatcher: Dispatcher()
okhttp3.internal.platform.android.AndroidSocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: void onHostResume()
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi31_Factory: java.lang.Object get()
com.polidea.rxandroidble2.internal.RxBleLog$Logger: void log(int,java.lang.String,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
androidx.fragment.app.FragmentActivity: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
com.polidea.rxandroidble2.RxBleDeviceServices$4: java.lang.Object apply(java.lang.Object)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: long runOnce()
okhttp3.internal.connection.Exchange$ResponseBodySource: java.io.IOException complete(java.io.IOException)
okhttp3.internal.ws.MessageInflater: void close()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.CatalystInstance: java.lang.String getSourceURL()
com.facebook.react.uimanager.ViewManager: void setupViewRecycling()
okhttp3.internal.http2.Http2Writer: void applyAndAckSettings(okhttp3.internal.http2.Settings)
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
io.reactivex.Single: io.reactivex.Completable toCompletable()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBackgroundColor(int)
io.reactivex.Flowable: io.reactivex.parallel.ParallelFlowable parallel(int,int)
io.reactivex.Single: io.reactivex.Flowable merge(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideRecommendedScanRuntimePermissionNamesFactory: ClientComponent_ClientModule_ProvideRecommendedScanRuntimePermissionNamesFactory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function8)
okhttp3.Cache: void trackConditionalCacheHit$okhttp()
com.facebook.react.bridge.JavaModuleWrapper: java.lang.String getName()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void setAccessibilityFocus(double)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: NativeAsyncStorageModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create$default(okhttp3.ResponseBody$Companion,java.lang.String,okhttp3.MediaType,int,java.lang.Object)
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl: void flushQueue()
io.reactivex.Single: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.BiConsumer)
com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper: boolean startLegacyLeScan(android.bluetooth.BluetoothAdapter$LeScanCallback)
okhttp3.HttpUrl$Builder: java.lang.String getScheme$okhttp()
okhttp3.Handshake: java.lang.String toString()
okhttp3.internal.http.HttpHeaders: void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers)
com.polidea.rxandroidble2.RxBleClientImpl: io.reactivex.ObservableSource lambda$scanBleDevices$2(java.util.UUID[])
com.facebook.react.modules.core.JSTimers: void emitTimeDriftWarning(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable window(long,long,java.util.concurrent.TimeUnit)
androidx.appcompat.app.AppCompatActivity: void supportNavigateUpTo(android.content.Intent)
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
com.facebook.soloader.UnpackingSoSource$DsoManifest: com.facebook.soloader.UnpackingSoSource$DsoManifest read(java.io.DataInput)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: java.lang.Object invoke(java.lang.Object)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentBoldTextState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.polidea.rxandroidble2.internal.util.CheckerLocationProvider_Factory: com.polidea.rxandroidble2.internal.util.CheckerLocationProvider get()
okhttp3.OkHttpClient$Builder: void setProxySelector$okhttp(java.net.ProxySelector)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver getDirectEventNamesResolver()
io.reactivex.Flowable: io.reactivex.Flowable concatDelayError(java.lang.Iterable)
com.facebook.react.bridge.CatalystInstanceImpl: void onNativeException(java.lang.Exception)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getDefaultOrigin(java.lang.String)
com.polidea.rxandroidble2.internal.DeviceModule: com.jakewharton.rxrelay2.BehaviorRelay provideConnectionStateRelay()
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(android.view.View,java.lang.String)
okhttp3.Headers: java.util.Date getDate(java.lang.String)
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager_Factory: com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager newInstance(byte[],byte[],byte[],android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,java.lang.Object)
okhttp3.CertificatePinner$Pin: java.lang.String getPattern()
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableMap asMap()
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
okhttp3.Response: long receivedResponseAtMillis()
okhttp3.OkHttpClient: java.util.List -deprecated_protocols()
okhttp3.CipherSuite: java.lang.String javaName()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
okhttp3.internal.platform.android.DeferredSocketAdapter: okhttp3.internal.platform.android.SocketAdapter getDelegate(javax.net.ssl.SSLSocket)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getScrollEnabled()
okhttp3.HttpUrl$Builder: java.lang.String getEncodedUsername$okhttp()
com.facebook.soloader.UnpackingSoSource: com.facebook.soloader.FileLocker getOrCreateLock(java.io.File,boolean)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$4: ScanSettingsEmulator$4()
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.Request getRequest$okhttp()
io.reactivex.Flowable: io.reactivex.Flowable interval(long,java.util.concurrent.TimeUnit)
okhttp3.internal.platform.ConscryptPlatform$Companion: boolean atLeastVersion$default(okhttp3.internal.platform.ConscryptPlatform$Companion,int,int,int,int,java.lang.Object)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
okhttp3.Response$Builder: okhttp3.Headers$Builder getHeaders$okhttp()
io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function9)
com.polidea.rxandroidble2.scan.ScanRecord: java.lang.String getDeviceName()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.NativeArray measureLines(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float)
okhttp3.internal.http2.Http2Reader$Handler: void rstStream(int,okhttp3.internal.http2.ErrorCode)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback_Factory: com.polidea.rxandroidble2.internal.connection.RxBleGattCallback newInstance(io.reactivex.Scheduler,com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider,java.lang.Object,java.lang.Object)
androidx.core.view.ViewCompat$Api17Impl: int generateViewId()
com.polidea.rxandroidble2.RxBleDevice: android.bluetooth.BluetoothDevice getBluetoothDevice()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addListener(java.lang.String)
okhttp3.Credentials: java.lang.String basic(java.lang.String,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder name(java.lang.String)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void startSamplingProfiler()
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
com.bleplx.BlePlxModule: void sendEvent(com.bleplx.Event,java.lang.Object)
com.polidea.rxandroidble2.internal.RxBleDeviceImpl: io.reactivex.Observable establishConnection(boolean)
com.facebook.react.views.view.ReactViewGroup: void setBorderStyle(java.lang.String)
io.reactivex.Observable: io.reactivex.Observable fromFuture(java.util.concurrent.Future,io.reactivex.Scheduler)
com.facebook.soloader.UnpackingSoSource: byte[] getDepsBlock()
com.polidea.rxandroidble2.internal.logger.LoggerUtil: void logOperationQueued(com.polidea.rxandroidble2.internal.operations.Operation)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
com.facebook.soloader.ApplicationSoSource: java.io.File getSoFileByName(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromFile(java.lang.String,java.lang.String,boolean)
okhttp3.HttpUrl$Builder: void setEncodedUsername$okhttp(java.lang.String)
okhttp3.internal.http2.Http2ExchangeCodec: java.util.List access$getHTTP_2_SKIPPED_REQUEST_HEADERS$cp()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startOperationBatch()
okhttp3.ResponseBody: java.lang.String string()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
okhttp3.internal.ws.WebSocketExtensions: WebSocketExtensions(boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean)
io.reactivex.Observable: io.reactivex.Observable onErrorReturn(io.reactivex.functions.Function)
com.facebook.react.turbomodule.core.interfaces.TurboModule: void invalidate()
okhttp3.Address: okhttp3.CertificatePinner certificatePinner()
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache: DeviceComponentCache(com.polidea.rxandroidble2.internal.cache.DeviceComponentWeakReference$Provider)
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.bridge.CatalystInstanceImpl: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.reactivex.Single: io.reactivex.Single amb(java.lang.Iterable)
io.reactivex.Flowable: io.reactivex.Flowable buffer(int)
okhttp3.internal.ws.WebSocketExtensions$Companion: okhttp3.internal.ws.WebSocketExtensions parse(okhttp3.Headers)
com.facebook.react.bridge.CatalystInstanceImpl: long getJavaScriptContext()
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: void startCreatingModule()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl: com.polidea.rxandroidble2.internal.operations.DescriptorReadOperation provideReadDescriptor(android.bluetooth.BluetoothGattDescriptor)
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
com.facebook.react.bridge.ReactSoftExceptionLogger: void clearListeners()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean runOnQueue(java.lang.Runnable)
okhttp3.Cache: okhttp3.internal.cache.CacheRequest put$okhttp(okhttp3.Response)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReadableNativeMap: int getJNIPassCounter()
okhttp3.Request: java.lang.String method()
com.facebook.common.time.AwakeTimeSinceBootClock: AwakeTimeSinceBootClock()
io.reactivex.Observable: io.reactivex.Observable sorted(java.util.Comparator)
okhttp3.internal.http2.Http2Stream: long getReadBytesAcknowledged()
okhttp3.internal.io.FileSystem: void delete(java.io.File)
com.facebook.react.fabric.FabricUIManager: void scheduleMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem,int,long,long,long,long,long,long,long,int)
okhttp3.OkHttpClient$Builder: void setCertificatePinner$okhttp(okhttp3.CertificatePinner)
com.polidea.rxandroidble2.utils.StandardUUIDsParser: java.lang.String getDescriptorName(java.util.UUID)
okhttp3.internal.http2.Http2Reader$Handler: void ping(boolean,int,int)
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: com.facebook.soloader.UnpackingSoSource$InputDsoIterator openDsoIterator()
com.facebook.soloader.DirectApkSoSource: DirectApkSoSource(java.io.File,java.util.Set)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String getName()
okhttp3.MediaType$Companion: MediaType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.polidea.rxandroidble2.internal.operations.ScanOperation: void protectedRun(io.reactivex.ObservableEmitter,com.polidea.rxandroidble2.internal.serialization.QueueReleaseInterface)
okhttp3.Cache: void initialize()
io.reactivex.Observable: io.reactivex.Observable fromCallable(java.util.concurrent.Callable)
com.polidea.rxandroidble2.internal.util.ScanRecordParser: java.util.List extractUUIDs(byte[])
okhttp3.internal.platform.Platform: Platform()
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: long runOnce()
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.facebook.react.bridge.NativeModule: void invalidate()
com.polidea.rxandroidble2.exceptions.BleDisconnectedException: BleDisconnectedException(java.lang.String,int)
com.polidea.rxandroidble2.internal.connection.MtuBasedPayloadSizeLimit_Factory: com.polidea.rxandroidble2.internal.connection.MtuBasedPayloadSizeLimit_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
io.reactivex.Flowable: io.reactivex.Flowable concatArrayDelayError(org.reactivestreams.Publisher[])
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
androidx.appcompat.app.AppCompatActivity: void onPostResume()
io.reactivex.Observable: io.reactivex.Observable combineLatest(java.lang.Iterable,io.reactivex.functions.Function)
com.polidea.rxandroidble2.scan.ScanResult: com.polidea.rxandroidble2.scan.ScanCallbackType getCallbackType()
com.facebook.soloader.ElfZipFileChannel: ElfZipFileChannel(java.util.zip.ZipFile,java.util.zip.ZipEntry)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String,java.lang.Class)
io.reactivex.Observable: io.reactivex.Observable error(java.lang.Throwable)
com.facebook.react.bridge.DynamicFromMap: boolean isNull()
okhttp3.internal.http1.Http1ExchangeCodec: okio.Source newChunkedSource(okhttp3.HttpUrl)
okhttp3.HttpUrl$Companion: int defaultPort(java.lang.String)
okhttp3.internal.tls.CertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideScanSetupProviderFactory: com.polidea.rxandroidble2.internal.scan.ScanSetupBuilder get()
com.facebook.soloader.ApplicationSoSource: void prepare(int)
okhttp3.Callback: void onResponse(okhttp3.Call,okhttp3.Response)
com.facebook.react.modules.statusbar.StatusBarModule: void setHidden(boolean)
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter: android.bluetooth.le.ScanSettings toNativeSettings(com.polidea.rxandroidble2.scan.ScanSettings)
com.polidea.rxandroidble2.internal.DeviceModule_ProvideConnectionStateChangeListenerFactory: com.polidea.rxandroidble2.internal.connection.ConnectionStateChangeListener provideConnectionStateChangeListener(com.jakewharton.rxrelay2.BehaviorRelay)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation getUIImplementation()
com.facebook.react.bridge.ReactContext: boolean hasNativeModule(java.lang.Class)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connectNative(int,com.facebook.react.bridge.Inspector$RemoteConnection)
com.facebook.react.animated.NativeAnimatedModule: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http2.Hpack$Reader: int readByte()
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType valueOf(java.lang.String)
com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener: void logSoftException(java.lang.String,java.lang.Throwable)
com.bleplx.adapter.BleModule: void getKnownDevices(java.lang.String[],com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper makeDso(java.lang.String,java.lang.String)
com.polidea.rxandroidble2.ClientComponent$ClientModule: com.polidea.rxandroidble2.internal.scan.ScanSetupBuilder provideScanSetupProvider(int,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
io.reactivex.Flowable: io.reactivex.Flowable window(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)
io.reactivex.Observable: io.reactivex.Single toSortedList(java.util.Comparator)
okhttp3.Headers: java.lang.String value(int)
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: java.lang.String getProfilingSettings()
com.facebook.soloader.SoSource: SoSource()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
okhttp3.Dns$Companion$DnsSystem: Dns$Companion$DnsSystem()
io.reactivex.Observable: io.reactivex.Observable buffer(long,long,java.util.concurrent.TimeUnit)
com.bleplx.adapter.BleModule: void writeDescriptor(int,java.lang.String,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
okhttp3.OkHttpClient: okhttp3.CertificatePinner -deprecated_certificatePinner()
com.polidea.rxandroidble2.ClientComponent$ClientModule: byte[] provideDisableNotificationValue()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Single readDescriptor(android.bluetooth.BluetoothGattDescriptor)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
io.reactivex.Observable: io.reactivex.Observable timeout(io.reactivex.ObservableSource,io.reactivex.functions.Function,io.reactivex.ObservableSource)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAspectRatioJNI(long,float)
com.polidea.rxandroidble2.internal.RxBleLog: void i(java.lang.Throwable,java.lang.String,java.lang.Object[])
com.polidea.rxandroidble2.internal.operations.ScanOperationApi21: io.reactivex.ObservableEmitter access$000(com.polidea.rxandroidble2.internal.operations.ScanOperationApi21)
com.facebook.react.bridge.Inspector: java.util.List getPages()
androidx.appcompat.app.AppCompatActivity: boolean supportRequestWindowFeature(int)
com.facebook.yoga.YogaNative: void jni_YGConfigFreeJNI(long)
com.polidea.rxandroidble2.ClientComponent$ClientModule$1: void onFinalize()
okhttp3.internal.http2.Http2Writer: void flush()
okhttp3.internal.cache.CacheStrategy$Companion: boolean isCacheable(okhttp3.Response,okhttp3.Request)
okhttp3.internal.http2.Http2Stream$StreamTimeout: Http2Stream$StreamTimeout(okhttp3.internal.http2.Http2Stream)
com.facebook.react.uimanager.BaseViewManager: void setTouchMove(android.view.View,boolean)
com.facebook.drawee.view.DraweeView: void setImageResource(int)
androidx.fragment.app.FragmentActivity: void onStateNotSaved()
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher: void notifyNativeDescriptorWriteCallback(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)
com.facebook.react.modules.image.ImageLoaderModule: void abortRequest(double)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean)
com.polidea.rxandroidble2.internal.RxBleLog: void setLogger(com.polidea.rxandroidble2.internal.RxBleLog$Logger)
okhttp3.ConnectionSpec: java.util.List -deprecated_cipherSuites()
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,int)
io.reactivex.Single: io.reactivex.Single onErrorReturn(io.reactivex.functions.Function)
okhttp3.internal.http2.Hpack$Writer: void writeByteString(okio.ByteString)
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsConnectableCheckerFactory: ClientComponent_ClientModule_ProvideIsConnectableCheckerFactory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.polidea.rxandroidble2.internal.util.ByteAssociationUtil$2: byte[] apply(com.polidea.rxandroidble2.internal.util.ByteAssociation)
okhttp3.Address: java.net.ProxySelector proxySelector()
io.reactivex.Observable: io.reactivex.Observable interval(long,java.util.concurrent.TimeUnit)
com.facebook.react.bridge.WritableNativeArray: com.facebook.jni.HybridData initHybrid()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec build()
com.facebook.react.views.scroll.ReactScrollView: void setScrollEventThrottle(int)
com.facebook.react.views.view.ReactViewManager: void setNativeBackground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.connection.RealCall: void exitNetworkInterceptorExchange$okhttp(boolean)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType valueOf(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void onHostResume()
io.reactivex.Observable: io.reactivex.Maybe singleElement()
okhttp3.internal.connection.RealConnection: java.net.Socket socket()
com.facebook.react.views.image.ReactImageManager: void setLoadHandlersRegistered(com.facebook.react.views.image.ReactImageView,boolean)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance()
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable switchMapSingle(io.reactivex.functions.Function)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout getWriteTimeout$okhttp()
okhttp3.OkHttpClient: java.util.List networkInterceptors()
io.reactivex.Observable: io.reactivex.Observable mergeDelayError(io.reactivex.ObservableSource,io.reactivex.ObservableSource)
okhttp3.internal.http2.Http2Connection: void writeSynReset$okhttp(int,okhttp3.internal.http2.ErrorCode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
io.reactivex.Flowable: io.reactivex.Single toMultimap(io.reactivex.functions.Function)
okhttp3.internal.cache.DiskLruCache$Entry: void setLengths$okhttp(java.util.List)
com.facebook.react.runtime.ReactInstance: com.facebook.react.runtime.JSTimerExecutor createJSTimerExecutor()
com.polidea.rxandroidble2.scan.ScanFilter: ScanFilter(java.lang.String,java.lang.String,android.os.ParcelUuid,android.os.ParcelUuid,android.os.ParcelUuid,android.os.ParcelUuid,android.os.ParcelUuid,byte[],byte[],int,byte[],byte[])
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: boolean unstable_shouldRouteTurboModulesThroughLegacyModuleInterop()
okhttp3.MultipartBody$Part$Companion: okhttp3.MultipartBody$Part create(okhttp3.RequestBody)
okhttp3.internal.http1.Http1ExchangeCodec: void access$setTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec,okhttp3.Headers)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue access$getSettingsListenerQueue$p(okhttp3.internal.http2.Http2Connection)
com.facebook.react.ReactRootView: com.facebook.react.bridge.ReactContext getCurrentReactContext()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPositionInternal(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.facebook.react.bridge.UIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.fbreact.specs.NativeTimingSpec: void createTimer(double,double,double,boolean)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: okio.Sink sink(java.io.File)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetOverflowJNI(long)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants)
okhttp3.RequestBody: long contentLength()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
okhttp3.internal.http2.Http2Connection: long access$getIntervalPingsSent$p(okhttp3.internal.http2.Http2Connection)
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit[] values()
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
com.facebook.react.bridge.JavaMethodWrapper: void processArguments()
com.facebook.soloader.ApplicationSoSource: java.io.File getNativeLibDirFromContext(android.content.Context)
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache: void evictEmptyReferences()
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,com.facebook.react.views.image.ReactCallerContextFactory)
com.facebook.react.modules.blob.BlobModule: void store(byte[],java.lang.String)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder value(java.lang.String)
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices: void appendServiceHeader(java.lang.StringBuilder,android.bluetooth.BluetoothGattService)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: boolean exists(java.io.File)
com.polidea.rxandroidble2.internal.scan.ScanRecordImplNativeWrapper: java.util.List getServiceUuids()
okhttp3.internal.concurrent.TaskQueue: void schedule(java.lang.String,long,kotlin.jvm.functions.Function0)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi31_Factory: LocationServicesStatusApi31_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okio.AsyncTimeout: okio.AsyncTimeout access$getHead$cp()
okhttp3.Response: long -deprecated_sentRequestAtMillis()
com.facebook.react.runtime.ReactInstance: void loadJSBundleFromAssets(android.content.res.AssetManager,java.lang.String)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6: io.reactivex.functions.Consumer repositionByteBufferForRetry()
okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void enableLogging(com.facebook.react.perflogger.NativeModulePerfLogger)
okhttp3.internal.concurrent.TaskQueue: java.util.List getFutureTasks$okhttp()
okhttp3.Request: Request(okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.RequestBody,java.util.Map)
com.facebook.soloader.SysUtil$LollipopSysdeps: void fallocateIfSupported(java.io.FileDescriptor,long)
com.facebook.react.modules.vibration.VibrationModule: void cancel()
com.bleplx.BlePlxModule: void setLogLevel(java.lang.String,com.facebook.react.bridge.Promise)
com.polidea.rxandroidble2.internal.util.ClientStateObservable: io.reactivex.Single checkPermissionUntilGranted(com.polidea.rxandroidble2.internal.util.LocationServicesStatus,io.reactivex.Scheduler)
io.reactivex.Single: io.reactivex.Flowable concatEager(org.reactivestreams.Publisher)
okhttp3.ConnectionSpec: boolean isTls()
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: boolean isDoneCreatingModule()
com.facebook.react.modules.camera.ImageStoreManager: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.camera.ImageStoreManager)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(android.view.View,java.lang.Integer)
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable$2: boolean test(java.lang.Object)
okhttp3.internal.http2.Http2Writer: void ping(boolean,int,int)
androidx.appcompat.widget.SearchView: int getImeOptions()
androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.facebook.react.animated.EventAnimationDriver: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.internal.ws.WebSocketExtensions: boolean component3()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeColors(int[])
okhttp3.internal.http2.Http2Connection: void shutdown(okhttp3.internal.http2.ErrorCode)
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher_Factory: NativeCallbackDispatcher_Factory()
okhttp3.internal.http2.Http2Connection: boolean getClient$okhttp()
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()
com.reactnativecommunity.asyncstorage.AsyncStorageModule$6: void doInBackgroundGuarded(java.lang.Object[])
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setJSQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices: void appendServiceDescription(java.lang.StringBuilder,android.bluetooth.BluetoothGattService)
okhttp3.internal.concurrent.TaskQueue: okhttp3.internal.concurrent.Task getActiveTask$okhttp()
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider)
io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(java.lang.Iterable)
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray from(java.util.List)
com.facebook.react.ReactActivity: boolean onKeyLongPress(int,android.view.KeyEvent)
com.facebook.react.modules.network.NetworkingModule: okhttp3.RequestBody wrapRequestBodyWithProgressEmitter(okhttp3.RequestBody,int)
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
com.polidea.rxandroidble2.internal.connection.NoRetryStrategy: NoRetryStrategy()
io.reactivex.Single: io.reactivex.Flowable merge(java.lang.Iterable)
okhttp3.Cache: void remove$okhttp(okhttp3.Request)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign valueOf(java.lang.String)
com.facebook.react.modules.sound.SoundManagerModule: void playTouchSound()
okhttp3.internal.connection.RealCall: java.lang.String redactedUrl$okhttp()
okhttp3.Cache$RealCacheRequest: boolean getDone()
com.facebook.react.uimanager.ViewManager: void setPadding(android.view.View,int,int,int,int)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
io.reactivex.Observable: io.reactivex.Observable window(long,long)
com.polidea.rxandroidble2.internal.connection.ConnectionModule_GattWriteMtuOverheadFactory: java.lang.Integer get()
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(android.view.View,boolean)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.facebook.react.bridge.ReactContext$RCTDeviceEventEmitter: void emit(java.lang.String,java.lang.Object)
com.facebook.soloader.UnpackingSoSource: java.io.File getSoStorePath(android.content.Context,java.lang.String)
okhttp3.internal.tls.TrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher_Factory: java.lang.Object get()
okhttp3.internal.http2.Http2Connection: long getReadBytesTotal()
com.polidea.rxandroidble2.internal.DeviceModule: com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration providesDisconnectTimeoutConf(io.reactivex.Scheduler)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle[] values()
okhttp3.RequestBody: okhttp3.RequestBody create(byte[],okhttp3.MediaType,int)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$4: java.lang.Object apply(java.lang.Object)
okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.facebook.react.fabric.FabricUIManager: void sendAccessibilityEventFromJS(int,int,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpegWithExifOrientation(java.io.InputStream,java.io.OutputStream,int,int,int)
com.facebook.react.views.textinput.ReactEditText: void setLetterSpacingPt(float)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onBridgeDestroyed()
okhttp3.internal.http2.Http2Stream: void receiveHeaders(okhttp3.Headers,boolean)
com.polidea.rxandroidble2.internal.cache.CacheEntry: java.lang.Object getValue()
okhttp3.internal.ws.WebSocketReader: okio.BufferedSource getSource()
okhttp3.internal.cache2.Relay$Companion: okhttp3.internal.cache2.Relay read(java.io.File)
okhttp3.internal.http2.Http2Stream: void setReadBytesTotal$okhttp(long)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder minFresh(int,java.util.concurrent.TimeUnit)
okhttp3.internal.platform.Platform: void afterHandshake(javax.net.ssl.SSLSocket)
com.facebook.react.bridge.WritableArray: void pushArray(com.facebook.react.bridge.ReadableArray)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.ResponseBody$BomAwareReader: void close()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$2$1: java.lang.Object apply(java.lang.Object)
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: long runOnce()
com.facebook.react.bridge.JSInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
io.reactivex.internal.util.ErrorMode: io.reactivex.internal.util.ErrorMode valueOf(java.lang.String)
okhttp3.ConnectionSpec$Companion: ConnectionSpec$Companion()
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
okhttp3.internal.connection.RealConnection$connectTls$1: java.util.List invoke()
okhttp3.internal.http2.Http2Writer$Companion: Http2Writer$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvidesOperationTimeoutConfFactory: java.lang.Object get()
okhttp3.Call: boolean isExecuted()
okhttp3.internal.connection.RealConnection: void connectSocket(int,int,okhttp3.Call,okhttp3.EventListener)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.facebook.react.uimanager.ViewGroupManager: android.view.View getChildAt(android.view.View,int)
okhttp3.internal.cache.DiskLruCache: boolean isClosed()
com.facebook.react.bridge.JavaScriptExecutorFactory: void startSamplingProfiler()
okhttp3.MultipartBody$Builder: MultipartBody$Builder()
com.facebook.soloader.nativeloader.NativeLoader: java.lang.String getLibraryPath(java.lang.String)
com.polidea.rxandroidble2.internal.QueueOperation: void protectedRun(io.reactivex.ObservableEmitter,com.polidea.rxandroidble2.internal.serialization.QueueReleaseInterface)
okhttp3.internal.http2.Http2Reader: void readPushPromise(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
androidx.core.widget.TextViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
com.polidea.rxandroidble2.internal.DeviceModule$1: DeviceModule$1(com.jakewharton.rxrelay2.BehaviorRelay)
androidx.appcompat.app.AppCompatActivity: void attachBaseContext(android.content.Context)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
com.facebook.soloader.SoLoader: void setInTestMode()
okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)
com.facebook.react.ReactNativeHost: com.facebook.react.ReactInstanceManager getReactInstanceManager()
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,boolean,int,int)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$8: RxBleConnectionImpl$8(com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$3: void doInBackgroundGuarded(java.lang.Object[])
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1$2: io.reactivex.Observable apply(io.reactivex.Observable)
io.reactivex.Single: io.reactivex.Single cache()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.modules.network.NetworkingModule: void cancelAllRequests()
com.facebook.react.fabric.BindingImpl: void reportMount(int)
okhttp3.internal.connection.RealConnectionPool$cleanupTask$1: long runOnce()
okhttp3.HttpUrl: java.lang.String encodedPath()
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator: io.reactivex.ObservableTransformer splitByAddressAndForEach(io.reactivex.ObservableTransformer)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addListener(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable skip(long)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.bridge.CatalystInstanceImpl: void handleMemoryPressure(int)
com.bleplx.adapter.BleModule: com.polidea.rxandroidble2.RxBleConnection getConnectionOrEmitError(java.lang.String,com.bleplx.adapter.OnErrorCallback)
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
com.facebook.react.bridge.DefaultJSExceptionHandler: void handleException(java.lang.Exception)
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.Headers getTrailers()
io.reactivex.Observable: io.reactivex.Observable buffer(int,int,java.util.concurrent.Callable)
com.facebook.react.animated.NativeAnimatedModule: void stopListeningToAnimatedNodeValue(double)
com.bleplx.adapter.BleModule: void lambda$safeConnectToDevice$22(com.bleplx.adapter.utils.SafeExecutor,com.polidea.rxandroidble2.RxBleDevice,com.bleplx.adapter.OnEventCallback)
io.reactivex.Observable: io.reactivex.Observable throttleLatest(long,java.util.concurrent.TimeUnit,boolean)
io.reactivex.Flowable: java.lang.Iterable blockingIterable()
okhttp3.HttpUrl$Companion: java.lang.String canonicalize$okhttp(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Observable setupIndication(java.util.UUID)
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi21: com.polidea.rxandroidble2.internal.scan.ScanSetup build(com.polidea.rxandroidble2.scan.ScanSettings,com.polidea.rxandroidble2.scan.ScanFilter[])
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1$1: ScanSettingsEmulator$1$1(com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$1)
okhttp3.Response$Builder: int getCode$okhttp()
io.reactivex.Flowable: io.reactivex.Maybe firstElement()
com.facebook.soloader.ApkSoSource: byte[] getDepsBlock()
com.polidea.rxandroidble2.internal.connection.ConnectionComponent$NamedInts: ConnectionComponent$NamedInts()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
com.facebook.react.bridge.WritableMap: void merge(com.facebook.react.bridge.ReadableMap)
com.polidea.rxandroidble2.internal.cache.CacheEntry: com.polidea.rxandroidble2.internal.DeviceComponent getValue()
io.reactivex.Observable: io.reactivex.Observable interval(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.appcompat.widget.Toolbar: void setTitle(int)
okhttp3.internal.Util: int and(byte,int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDirectionJNI(long,int)
com.facebook.react.bridge.CatalystInstanceImpl: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
io.reactivex.Observable: io.reactivex.Observable sample(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.facebook.soloader.UnpackingSoSource: void prepare(int)
io.reactivex.internal.util.ErrorMode: io.reactivex.internal.util.ErrorMode[] values()
com.bleplx.adapter.BleModule: void destroyClient()
com.facebook.react.animated.NativeAnimatedModule: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.soloader.NativeDeps: boolean access$102(boolean)
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager: io.reactivex.Single getTimeoutConfiguration()
com.bleplx.adapter.RefreshGattMoment: com.bleplx.adapter.RefreshGattMoment valueOf(java.lang.String)
com.polidea.rxandroidble2.exceptions.BleDisconnectedException: BleDisconnectedException(java.lang.String)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: NativeDialogManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.polidea.rxandroidble2.scan.ScanResult: com.polidea.rxandroidble2.scan.IsConnectable isConnectable()
com.facebook.react.modules.core.TimingModule: void onHostResume()
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager: java.lang.String getName()
com.polidea.rxandroidble2.internal.util.CharacteristicChangedEvent: CharacteristicChangedEvent(java.util.UUID,java.lang.Integer,byte[])
okhttp3.EventListener: void cacheMiss(okhttp3.Call)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.lang.String getName()
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$3: java.lang.Object apply(java.lang.Object)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6$2: void accept(com.polidea.rxandroidble2.RxBleConnection$WriteOperationRetryStrategy$LongWriteFailure)
okhttp3.internal.ws.WebSocketWriter: void writeControlFrame(int,okio.ByteString)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleDataCreateStart(java.lang.String,int)
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: Http1ExchangeCodec$UnknownLengthSource(okhttp3.internal.http1.Http1ExchangeCodec)
io.reactivex.Observable: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function,boolean)
com.polidea.rxandroidble2.ClientComponent$ClientModule: com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifier provideScanPreconditionVerifier(int,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
io.reactivex.Single: io.reactivex.Single lift(io.reactivex.SingleOperator)
com.facebook.react.views.view.ReactViewGroup: void setOpacityIfPossible(float)
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style valueOf(java.lang.String)
io.reactivex.Observable: io.reactivex.Observable range(int,int)
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices: LoggerUtilBluetoothServices(com.polidea.rxandroidble2.internal.util.CharacteristicPropertiesParser)
okhttp3.Protocol$Companion: Protocol$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.modules.network.NetworkingModule: void addUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
com.facebook.soloader.NativeDeps: java.lang.String[] getDependencies(java.lang.String,java.io.File)
com.facebook.react.modules.network.NetworkingModule: void setCustomClientBuilder(com.facebook.react.modules.network.CustomClientBuilder)
com.oblador.vectoricons.VectorIconsModule: java.lang.String getImageForFontSync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)
com.facebook.react.modules.debug.DevSettingsModule: void onFastRefresh()
com.bleplx.adapter.BleModule: void monitorCharacteristic(int,java.lang.String,java.lang.String,com.bleplx.adapter.OnEventCallback,com.bleplx.adapter.OnErrorCallback)
com.polidea.rxandroidble2.internal.connection.ConnectionComponent$Builder: com.polidea.rxandroidble2.internal.connection.ConnectionComponent build()
io.reactivex.Flowable: io.reactivex.Flowable distinct()
com.facebook.react.bridge.ReadableNativeMap: int getInt(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorViewAlpha(int)
androidx.activity.ComponentActivity: void removeOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
io.reactivex.Flowable: io.reactivex.Flowable mergeArrayDelayError(org.reactivestreams.Publisher[])
androidx.core.os.CancellationSignal$Api16Impl: android.os.CancellationSignal createCancellationSignal()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(android.view.View,boolean)
okhttp3.internal.connection.RealConnection: void onStream(okhttp3.internal.http2.Http2Stream)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$2: void onComplete()
com.facebook.soloader.SysUtil: boolean isSupportedDirectLoad(android.content.Context,int)
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult: long getTimestampNanos()
com.facebook.jni.DestructorThread$DestructorList: void access$400(com.facebook.jni.DestructorThread$Destructor)
okhttp3.internal.ws.RealWebSocket: int sentPingCount()
com.facebook.react.bridge.ReadableMap: java.util.Iterator getEntryIterator()
io.reactivex.Flowable: io.reactivex.Flowable delaySubscription(org.reactivestreams.Publisher)
com.polidea.rxandroidble2.ClientComponent$ClientModule: io.reactivex.Scheduler provideComputationScheduler()
okhttp3.HttpUrl$Builder$Companion: int slashCount(java.lang.String,int,int)
okhttp3.internal.connection.RealCall$AsyncCall: java.util.concurrent.atomic.AtomicInteger getCallsPerHost()
androidx.activity.ComponentActivity: void ensureViewModelStore()
okhttp3.internal.http1.HeadersReader: okhttp3.Headers readHeaders()
com.facebook.jni.MapIteratorHelper: MapIteratorHelper(java.util.Map)
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.util.Map getTypedExportedConstants()
com.facebook.fbreact.specs.NativeRedBoxSpec: void dismiss()
okhttp3.OkHttpClient: int -deprecated_readTimeoutMillis()
okhttp3.internal.ws.WebSocketProtocol: void validateCloseCode(int)
okhttp3.Headers: java.util.List values(java.lang.String)
io.reactivex.Observable: io.reactivex.Observable cacheWithInitialCapacity(int)
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule getWebSocketModule(java.lang.String)
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider access$800(com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
io.reactivex.Observable: io.reactivex.Single toMap(io.reactivex.functions.Function,io.reactivex.functions.Function)
com.polidea.rxandroidble2.internal.scan.ExternalScanSettingsExtension: boolean shouldCheckLocationProviderState()
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi24_Factory: ScanPreconditionsVerifierApi24_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.bridge.CatalystInstanceImpl: void initialize()
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDisableNotificationValueFactory: byte[] get()
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: NativeJSCSamplingProfilerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.polidea.rxandroidble2.internal.util.CheckerConnectPermission_Factory: CheckerConnectPermission_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.yoga.YogaNative: void jni_YGConfigSetUseWebDefaultsJNI(long,boolean)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.ReactContext)
okhttp3.internal.http2.Huffman: void addCode(int,int,int)
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float,float[])
com.facebook.fbreact.specs.NativeDevMenuSpec: void show()
kotlin.text.Regex$Serialized: java.lang.Object readResolve()
com.facebook.react.uimanager.ViewManager: void onDropViewInstance(android.view.View)
okhttp3.JavaNetCookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getSourceURL()
com.facebook.react.modules.appstate.AppStateModule: com.facebook.react.bridge.WritableMap createAppStateEventMap()
com.facebook.react.bridge.DynamicFromArray: boolean asBoolean()
io.reactivex.Flowable: io.reactivex.Flowable share()
com.facebook.react.bridge.WritableArray: void pushInt(int)
com.facebook.yoga.YogaNative: void jni_YGNodeSetStyleInputsJNI(long,float[],int)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setPathSegment(int,java.lang.String)
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$2: void accept(java.lang.Object)
okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: java.lang.String getName()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPaddingJNI(long,int)
com.polidea.rxandroidble2.internal.operations.OperationsProvider: com.polidea.rxandroidble2.internal.operations.ReadRssiOperation provideRssiReadOperation()
com.facebook.react.bridge.JavaOnlyMap: boolean hasKey(java.lang.String)
com.facebook.react.views.image.ReactImageManager: java.lang.Object getCallerContext()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder minWebSocketMessageToCompress(long)
com.polidea.rxandroidble2.internal.RxBleLog: void throwShade(int,java.lang.Throwable,java.lang.String,java.lang.Object[])
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices: java.lang.String createCharacteristicName(android.bluetooth.BluetoothGattCharacteristic)
com.facebook.react.fabric.interop.InteropEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager_Factory: com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.fabric.FabricUIManager: android.view.View resolveView(int)
com.facebook.react.bridge.ReadableNativeArray: java.lang.String getString(int)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
okhttp3.CertificatePinner$Pin: boolean matchesCertificate(java.security.cert.X509Certificate)
com.facebook.react.modules.websocket.WebSocketModule: void setCustomClientBuilder(com.facebook.react.modules.network.CustomClientBuilder)
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
okhttp3.internal.ws.RealWebSocket$WriterTask: RealWebSocket$WriterTask(okhttp3.internal.ws.RealWebSocket)
okhttp3.internal.ws.RealWebSocket$Message: RealWebSocket$Message(int,okio.ByteString)
com.facebook.react.bridge.ReactCxxErrorHandler: void setHandleErrorFunc(java.lang.Object,java.lang.reflect.Method)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
io.reactivex.Observable: io.reactivex.Observable switchMap(io.reactivex.functions.Function,int)
io.reactivex.Flowable: io.reactivex.Flowable join(org.reactivestreams.Publisher,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle valueOf(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable generate(java.util.concurrent.Callable,io.reactivex.functions.BiFunction,io.reactivex.functions.Consumer)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingPercentJNI(long,int,float)
okhttp3.Request: okhttp3.CacheControl cacheControl()
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl$1: LongWriteOperationBuilderImpl$1(com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl,java.util.UUID)
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.polidea.rxandroidble2.scan.BackgroundScanner: void scanBleDeviceInBackground(android.app.PendingIntent,com.polidea.rxandroidble2.scan.ScanSettings,com.polidea.rxandroidble2.scan.ScanFilter[])
com.bleplx.BlePlxModule: void writeCharacteristicForDevice(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.internal.connection.Exchange: okhttp3.EventListener getEventListener$okhttp()
okhttp3.Handshake: java.util.List -deprecated_peerCertificates()
io.reactivex.Flowable: io.reactivex.Single firstOrError()
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl_Factory: com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl get()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.lang.String getName()
com.polidea.rxandroidble2.internal.scan.IsConnectableChecker: com.polidea.rxandroidble2.scan.IsConnectable check(android.bluetooth.le.ScanResult)
io.reactivex.Observable: io.reactivex.Single reduceWith(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)
com.polidea.rxandroidble2.internal.util.CheckerScanPermission_Factory: com.polidea.rxandroidble2.internal.util.CheckerScanPermission newInstance(com.polidea.rxandroidble2.internal.util.CheckerPermission,java.lang.String[][])
com.polidea.rxandroidble2.exceptions.BleDescriptorNotFoundException: BleDescriptorNotFoundException(java.util.UUID)
com.bleplx.adapter.BleModule: void safeReadDescriptorForDevice(com.bleplx.adapter.Descriptor,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long,boolean)
com.facebook.react.modules.debug.DevSettingsModule: void setHotLoadingEnabled(boolean)
io.reactivex.Single: io.reactivex.Single using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)
com.polidea.rxandroidble2.internal.cache.DeviceComponentWeakReference: int hashCode()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String toString()
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,boolean,boolean)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
okhttp3.RequestBody$Companion$toRequestBody$2: okhttp3.MediaType contentType()
com.bleplx.adapter.BleModule: void getConnectedDevices(java.lang.String[],com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
io.reactivex.Flowable: io.reactivex.Flowable concatDelayError(org.reactivestreams.Publisher)
com.facebook.react.views.text.ReactVirtualTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.bridge.WindowFocusChangeListener: void onWindowFocusChange(boolean)
com.facebook.react.modules.toast.ToastModule: void showWithGravity(java.lang.String,double,double)
com.polidea.rxandroidble2.internal.util.BleConnectionCompat: android.bluetooth.BluetoothGatt connectGattCompat(android.bluetooth.BluetoothGattCallback,android.bluetooth.BluetoothDevice,boolean)
com.facebook.react.views.text.ReactTextView: void setFontSize(float)
io.reactivex.Observable: io.reactivex.Observable merge(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)
com.polidea.rxandroidble2.internal.operations.ConnectOperation: io.reactivex.Single prepareConnectionTimeoutError()
io.reactivex.Flowable: io.reactivex.Flowable startWithArray(java.lang.Object[])
okhttp3.internal.connection.ExchangeFinder: okhttp3.Route retryRoute()
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.polidea.rxandroidble2.internal.RxBleDeviceProvider_Factory: RxBleDeviceProvider_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
androidx.core.app.NavUtils$Api16Impl: android.content.Intent getParentActivityIntent(android.app.Activity)
com.facebook.soloader.SoLoader: boolean loadLibraryBySoNameImpl(java.lang.String,java.lang.String,java.lang.String,int,android.os.StrictMode$ThreadPolicy)
okhttp3.Response$Builder: okhttp3.Request getRequest$okhttp()
com.facebook.soloader.DirectorySoSource: void addToLdLibraryPath(java.util.Collection)
com.facebook.react.bridge.UiThreadUtil: UiThreadUtil()
io.reactivex.Flowable: io.reactivex.Flowable flatMapIterable(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
androidx.core.app.ComponentActivity: void putExtraData(androidx.core.app.ComponentActivity$ExtraData)
okhttp3.Handshake: okhttp3.TlsVersion tlsVersion()
okhttp3.MediaType: MediaType(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Headers$Builder: java.lang.String get(java.lang.String)
com.bleplx.adapter.BleModule: void lambda$safeMonitorCharacteristicForDevice$43(java.lang.String)
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Completable writeDescriptor(android.bluetooth.BluetoothGattDescriptor,byte[])
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityActions(android.view.View,com.facebook.react.bridge.ReadableArray)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothCallbacksSchedulerFactory$InstanceHolder: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothCallbacksSchedulerFactory access$000()
com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl_Factory: com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl get()
okhttp3.internal.http2.PushObserver$Companion: PushObserver$Companion()
com.polidea.rxandroidble2.scan.ScanFilter: java.lang.String toString()
com.facebook.soloader.SoLoader: int makePrepareFlags()
io.reactivex.Observable: void blockingSubscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)
okhttp3.internal.cache2.Relay: boolean getComplete()
okhttp3.internal.http2.Http2Connection$Builder: void setClient$okhttp(boolean)
com.facebook.react.bridge.ReadableMap: double getDouble(java.lang.String)
com.polidea.rxandroidble2.internal.operations.ReadRssiOperation_Factory: com.polidea.rxandroidble2.internal.operations.ReadRssiOperation get()
com.facebook.react.views.textinput.ReactEditText: void setFontFamily(java.lang.String)
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices: void appendDescriptorsHeader(java.lang.StringBuilder)
com.facebook.imagepipeline.nativecode.Bitmaps: void copyBitmap(android.graphics.Bitmap,android.graphics.Bitmap)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
com.facebook.yoga.YogaNative: void jni_YGNodeSwapChildJNI(long,long,int)
com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider: void updateBluetoothGatt(android.bluetooth.BluetoothGatt)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
okhttp3.Request$Builder: java.util.Map getTags$okhttp()
okhttp3.internal.http2.Http2Reader$Handler: void alternateService(int,java.lang.String,okio.ByteString,java.lang.String,int,long)
com.bleplx.adapter.BleModule: void lambda$requestMTUForDevice$6(com.bleplx.adapter.utils.SafeExecutor,java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void getValue(double,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerEnter(boolean)
com.facebook.react.uimanager.ViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
okhttp3.Headers$Companion: Headers$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.EmptyList: java.lang.Object readResolve()
okhttp3.internal.platform.android.DeferredSocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.internal.connection.RealConnection: boolean isMultiplexed$okhttp()
io.reactivex.Observable: io.reactivex.Observable skipLast(long,java.util.concurrent.TimeUnit)
okhttp3.internal.Util: boolean discard(okio.Source,int,java.util.concurrent.TimeUnit)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Completable writeDescriptor(java.util.UUID,java.util.UUID,java.util.UUID,byte[])
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1(java.lang.String,java.lang.String,long,okhttp3.internal.ws.RealWebSocket,java.lang.String,okhttp3.internal.ws.RealWebSocket$Streams,okhttp3.internal.ws.WebSocketExtensions)
com.facebook.react.animated.NativeAnimatedModule: void invalidate()
okhttp3.internal.concurrent.TaskRunner$Backend: void beforeTask(okhttp3.internal.concurrent.TaskRunner)
okhttp3.internal.cache2.Relay$RelaySource: Relay$RelaySource(okhttp3.internal.cache2.Relay)
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi26_Factory: com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi26 newInstance()
com.bleplx.adapter.BleModule: io.reactivex.ObservableSource lambda$safeMonitorCharacteristicForDevice$41(io.reactivex.Observable)
com.facebook.soloader.SysUtil: boolean isDisabledExtractNativeLibs(android.content.Context)
com.polidea.rxandroidble2.internal.connection.DisconnectAction_Factory: DisconnectAction_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod valueOf(java.lang.String)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideContentResolverFactory: java.lang.Object get()
com.polidea.rxandroidble2.internal.util.CheckerScanPermission_Factory: com.polidea.rxandroidble2.internal.util.CheckerScanPermission get()
okhttp3.Cache$RealCacheRequest: void abort()
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory$1$1: void onReceive(android.content.Context,android.content.Intent)
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents[] values()
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge valueOf(java.lang.String)
okhttp3.Response$Builder: void setBody$okhttp(okhttp3.ResponseBody)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getCookie(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void dumpSampledTraceToFile(java.lang.String)
com.polidea.rxandroidble2.internal.connection.ConnectionModule: int gattWriteMtuOverhead()
okhttp3.HttpUrl: int -deprecated_port()
io.reactivex.Flowable: io.reactivex.Flowable takeUntil(io.reactivex.functions.Predicate)
io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher,io.reactivex.functions.BiFunction)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Observable setupNotification(android.bluetooth.BluetoothGattCharacteristic)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.soloader.Api18TraceUtils: void beginTraceSection(java.lang.String,java.lang.String,java.lang.String)
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState[] values()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.facebook.react.fabric.FabricUIManager: void onCatalystInstanceDestroy()
io.reactivex.Flowable: io.reactivex.Flowable delay(long,java.util.concurrent.TimeUnit,boolean)
com.polidea.rxandroidble2.internal.connection.ConnectionModule_MinimumMtuFactory$InstanceHolder: ConnectionModule_MinimumMtuFactory$InstanceHolder()
io.reactivex.Single: java.util.concurrent.Future toFuture()
io.reactivex.Observable: io.reactivex.Observable window(long)
com.facebook.soloader.ApkSoSource: ApkSoSource(android.content.Context,java.lang.String,int)
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState getLifecycleState()
com.facebook.soloader.UnpackingSoSource: void access$000(java.io.File,byte)
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi23_Factory: com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi23_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.internal.cache.DiskLruCache$cleanupTask$1: long runOnce()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideFinalizationCloseableFactory: java.lang.Object get()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: Http2Connection$ReaderRunnable$ping$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection$ReaderRunnable,int,int)
io.reactivex.Flowable: void safeSubscribe(org.reactivestreams.Subscriber)
androidx.activity.ComponentActivity: void invalidateMenu()
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)
com.polidea.rxandroidble2.internal.connection.PayloadSizeLimitProvider: int getPayloadSizeLimit()
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: NativeStatusBarManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.core.TimingModule: void onHostDestroy()
com.bleplx.adapter.BleModule: void lambda$safeDiscoverAllServicesAndCharacteristicsForDevice$32(com.bleplx.adapter.Device,com.bleplx.adapter.utils.SafeExecutor,java.lang.String,com.polidea.rxandroidble2.RxBleDeviceServices)
okhttp3.internal.connection.RealConnection$Companion: RealConnection$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.reactivex.Single: io.reactivex.Single doOnTerminate(io.reactivex.functions.Action)
com.facebook.soloader.MinElf: java.lang.String[] extract_DT_NEEDED_with_retries(com.facebook.soloader.ElfFileChannel)
com.polidea.rxandroidble2.internal.SingleResponseOperation: void protectedRun(io.reactivex.ObservableEmitter,com.polidea.rxandroidble2.internal.serialization.QueueReleaseInterface)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)
com.facebook.yoga.YogaErrata: com.facebook.yoga.YogaErrata valueOf(java.lang.String)
androidx.activity.ComponentActivity: void addOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
okhttp3.internal.http.RealInterceptorChain: int connectTimeoutMillis()
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.facebook.react.fabric.FabricUIManager: void setBinding(com.facebook.react.fabric.Binding)
io.reactivex.Observable: io.reactivex.Observable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,io.reactivex.ObservableSource)
okhttp3.Headers: okhttp3.Headers$Builder newBuilder()
com.polidea.rxandroidble2.internal.operations.DescriptorWriteOperation: DescriptorWriteOperation(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration,int,android.bluetooth.BluetoothGattDescriptor,byte[])
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationServicesStatusFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationServicesStatusFactory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.ReactRootView: void setRootViewTag(int)
okhttp3.ConnectionSpec$Builder: ConnectionSpec$Builder(boolean)
io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDisableNotificationValueFactory: java.lang.Object get()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.bleplx.adapter.BleModule: void lambda$safeWriteDescriptorForDevice$14(com.bleplx.adapter.utils.SafeExecutor,java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.DynamicFromMap$1: androidx.core.util.Pools$SimplePool initialValue()
io.reactivex.Observable: io.reactivex.Observable merge(io.reactivex.ObservableSource)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$1: void doInBackgroundGuarded(java.lang.Object[])
okhttp3.internal.cache.CacheInterceptor$Companion: okhttp3.Response access$stripBody(okhttp3.internal.cache.CacheInterceptor$Companion,okhttp3.Response)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connect(int,com.facebook.react.bridge.Inspector$RemoteConnection)
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: boolean ensureDatabase()
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$3$1: ScanSettingsEmulator$3$1(com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$3)
okhttp3.HttpUrl$Builder: int getPort$okhttp()
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi26_Factory$InstanceHolder: com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi26_Factory access$000()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()
okhttp3.internal.connection.RealCall: java.net.Socket releaseConnectionNoEvents$okhttp()
okhttp3.Response: okhttp3.Request request()
com.facebook.react.uimanager.BaseViewManager: void setBorderTopRightRadius(android.view.View,float)
com.facebook.hermes.intl.DateTimeFormat: java.util.List formatToParts(double)
com.facebook.react.bridge.JavaMethodWrapper: char commonTypeToChar(java.lang.Class)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setShowsHorizontalScrollIndicator(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
okhttp3.FormBody: int size()
io.reactivex.Observable: io.reactivex.Observable concatMapMaybeDelayError(io.reactivex.functions.Function,boolean)
okhttp3.internal.ws.RealWebSocket: void tearDown()
io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(io.reactivex.functions.Function,int,org.reactivestreams.Publisher[])
com.polidea.rxandroidble2.scan.ScanSettings$1: com.polidea.rxandroidble2.scan.ScanSettings[] newArray(int)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$3: ScanSettingsEmulator$3(io.reactivex.ObservableTransformer)
com.polidea.rxandroidble2.internal.util.BluetoothManagerWrapper_Factory: com.polidea.rxandroidble2.internal.util.BluetoothManagerWrapper newInstance(android.bluetooth.BluetoothManager)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.polidea.rxandroidble2.internal.util.ClientStateObservable$3$1: com.polidea.rxandroidble2.RxBleClient$State apply(java.lang.Boolean)
com.facebook.soloader.NativeDeps: boolean libIsAtOffset(java.lang.String,int)
com.facebook.soloader.ApplicationSoSource: android.content.Context getUpdatedContext()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
androidx.core.view.ViewCompat$Api17Impl: boolean isPaddingRelative(android.view.View)
okio.AsyncTimeout: long access$getTimeoutAt$p(okio.AsyncTimeout)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory$1$2: LocationServicesOkObservableApi23Factory$1$2(com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory$1,android.content.BroadcastReceiver)
io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybeDelayError(io.reactivex.functions.Function,boolean,int)
com.polidea.rxandroidble2.internal.util.CheckerConnectPermission_Factory: java.lang.Object get()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,byte[],okhttp3.MediaType,int,int,int,java.lang.Object)
io.reactivex.Single: io.reactivex.Flowable mergeDelayError(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)
com.facebook.soloader.SoLoader: java.util.HashSet access$300()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setColor(java.lang.Integer)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher)
okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)
com.polidea.rxandroidble2.internal.operations.LegacyScanOperation: LegacyScanOperation(java.util.UUID[],com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,com.polidea.rxandroidble2.internal.util.ScanRecordParser)
com.polidea.rxandroidble2.internal.connection.MtuWatcher: int getMtu()
io.reactivex.Flowable: io.reactivex.Single reduce(java.lang.Object,io.reactivex.functions.BiFunction)
okhttp3.internal.connection.RealCall: void cancel()
androidx.appcompat.widget.SwitchCompat: void setEmojiCompatEnabled(boolean)
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule getModule()
io.reactivex.Flowable: io.reactivex.Single toMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
okhttp3.Response: java.lang.String header$default(okhttp3.Response,java.lang.String,java.lang.String,int,java.lang.Object)
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isRecoverable(java.io.IOException,boolean)
io.reactivex.Observable: io.reactivex.Observable sample(long,java.util.concurrent.TimeUnit)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
com.polidea.rxandroidble2.internal.operations.ConnectOperation$3: android.bluetooth.BluetoothGatt call()
io.reactivex.Observable: void subscribe(io.reactivex.Observer)
com.polidea.rxandroidble2.internal.operations.ScanOperationApi18: ScanOperationApi18(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator,com.polidea.rxandroidble2.internal.scan.EmulatedScanFilterMatcher)
io.reactivex.Single: io.reactivex.Single retry(long,io.reactivex.functions.Predicate)
io.reactivex.Observable: io.reactivex.Observable combineLatestDelayError(io.reactivex.ObservableSource[],io.reactivex.functions.Function,int)
com.facebook.react.ReactNativeHost: java.lang.String getJSBundleFile()
com.bleplx.Event: com.bleplx.Event valueOf(java.lang.String)
okhttp3.CacheControl$Companion: CacheControl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.ConnectionPool: ConnectionPool()
com.facebook.react.bridge.JavaModuleWrapper: JavaModuleWrapper(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ModuleHolder)
com.facebook.soloader.UnpackingSoSource$InputDsoIterator: boolean hasNext()
io.reactivex.Flowable: io.reactivex.Flowable map(io.reactivex.functions.Function)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void restoreDefaultValues(double)
com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation: java.lang.String toString()
com.facebook.react.bridge.ReactMarker$MarkerListener: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideScanSetupProviderFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideScanSetupProviderFactory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi18_Factory: com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi18 newInstance(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,com.polidea.rxandroidble2.internal.util.LocationServicesStatus)
com.facebook.react.turbomodule.core.interfaces.TurboModule: void initialize()
com.polidea.rxandroidble2.RxBleDeviceServices$5: android.bluetooth.BluetoothGattDescriptor apply(android.bluetooth.BluetoothGattCharacteristic)
com.polidea.rxandroidble2.internal.operations.ScanOperationApi18: boolean startScan(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,java.lang.Object)
com.facebook.react.turbomodule.core.TurboModuleInteropUtils: java.lang.String convertParamClassToJniType(java.lang.String,java.lang.String,java.lang.Class)
com.facebook.react.bridge.NativeArray: NativeArray(com.facebook.jni.HybridData)
okhttp3.WebSocketListener: void onClosing(okhttp3.WebSocket,int,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
okhttp3.internal.http1.Http1ExchangeCodec: long reportedContentLength(okhttp3.Response)
okhttp3.internal.http2.Hpack$Reader: int evictToRecoverBytes(int)
com.polidea.rxandroidble2.internal.DeviceModule_ProvideConnectionStateRelayFactory: com.jakewharton.rxrelay2.BehaviorRelay provideConnectionStateRelay()
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA[] values()
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getTypedExportedConstants()
com.polidea.rxandroidble2.internal.util.CharacteristicNotificationId: java.lang.String toString()
com.polidea.rxandroidble2.RxBleAdapterStateObservable: RxBleAdapterStateObservable(android.content.Context)
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int)
com.polidea.rxandroidble2.internal.connection.MtuWatcher: void accept(java.lang.Object)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
io.reactivex.Observable: io.reactivex.Observable zipWith(java.lang.Iterable,io.reactivex.functions.BiFunction)
com.facebook.hermes.intl.OptionHelpers$OptionType: com.facebook.hermes.intl.OptionHelpers$OptionType[] values()
io.reactivex.Flowable: io.reactivex.Flowable onErrorResumeNext(org.reactivestreams.Publisher)
com.facebook.react.modules.core.TimingModule: void setSendIdleEvents(boolean)
com.polidea.rxandroidble2.scan.ScanSettings$Builder: boolean isValidCallbackType(int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.uimanager.UIManagerModule: java.util.Map getPerformanceCounters()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void getRecommendedTimeoutMillis(double,com.facebook.react.bridge.Callback)
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23: boolean isLocationProviderOk()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetWidthJNI(long)
com.facebook.react.ReactRootView: com.facebook.react.ReactInstanceManager getReactInstanceManager()
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
com.polidea.rxandroidble2.internal.DeviceModule: com.polidea.rxandroidble2.internal.connection.Connector bindConnector(com.polidea.rxandroidble2.internal.connection.ConnectorImpl)
io.reactivex.Single: io.reactivex.Flowable repeatWhen(io.reactivex.functions.Function)
okhttp3.internal.http2.Http2Writer: void frameHeader(int,int,int,int)
okhttp3.Response: okhttp3.Handshake -deprecated_handshake()
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation valueOf(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer getColor(java.lang.Object,android.content.Context)
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.String getOverflow()
okhttp3.Call: okhttp3.Request request()
kotlin.coroutines.CombinedContext$Serialized: java.lang.Object readResolve()
okhttp3.internal.http2.Http2Stream$FramingSource: void setTrailers(okhttp3.Headers)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void setValues(com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http.HttpHeaders: void readChallengeHeader(okio.Buffer,java.util.List)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.Throwable)
okhttp3.HttpUrl: int querySize()
io.reactivex.Flowable: void subscribe(org.reactivestreams.Subscriber)
com.facebook.yoga.YogaNative: void jni_YGNodeResetJNI(long)
com.facebook.react.modules.core.TimingModule: void createTimer(double,double,double,boolean)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
okhttp3.Cookie: java.lang.String -deprecated_path()
okhttp3.internal.http2.Hpack$Reader: void readIndexedHeader(int)
com.facebook.jni.HybridData: void resetNative()
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueue: void terminate(com.polidea.rxandroidble2.exceptions.BleException)
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$3: void onNext(java.lang.Object)
com.facebook.react.uimanager.BaseViewManager: void setTranslateY(android.view.View,float)
okhttp3.internal.concurrent.Task: boolean getCancelable()
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$State)
io.reactivex.Flowable: io.reactivex.Flowable window(org.reactivestreams.Publisher,int)
io.reactivex.Flowable: io.reactivex.Flowable flatMapIterable(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,int)
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function3)
okio.Timeout: void throwIfReached()
okhttp3.Call: okhttp3.Response execute()
io.reactivex.Observable: io.reactivex.Observable interval(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.polidea.rxandroidble2.internal.cache.CacheEntry: java.lang.Object setValue(java.lang.Object)
com.facebook.fbreact.specs.NativeBugReportingSpec: NativeBugReportingSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray deepClone(com.facebook.react.bridge.ReadableArray)
okhttp3.internal.connection.RealCall: okhttp3.Request getOriginalRequest()
com.polidea.rxandroidble2.internal.QueueOperation$1: void subscribe(io.reactivex.ObservableEmitter)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings getOkHttpSettings()
com.facebook.react.views.image.ReactImageView: void setControllerListener(com.facebook.drawee.controller.ControllerListener)
io.reactivex.Observable: io.reactivex.Single toList(java.util.concurrent.Callable)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
io.reactivex.Observable: io.reactivex.Observable concatMapSingleDelayError(io.reactivex.functions.Function,boolean)
androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection$ReaderRunnable,kotlin.jvm.internal.Ref$ObjectRef,boolean,okhttp3.internal.http2.Settings,kotlin.jvm.internal.Ref$LongRef,kotlin.jvm.internal.Ref$ObjectRef)
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(com.facebook.react.views.text.ReactTextView,java.lang.Object)
com.polidea.rxandroidble2.internal.connection.ConnectionComponent: java.util.Set connectionSubscriptionWatchers()
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setPlaceholder(java.lang.String)
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter_Factory: com.polidea.rxandroidble2.internal.connection.DisconnectionRouter newInstance(java.lang.String,com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,io.reactivex.Observable)
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: boolean getClosed()
com.facebook.react.modules.blob.FileReaderModule: com.facebook.react.modules.blob.BlobModule getBlobModule(java.lang.String)
okhttp3.HttpUrl: char[] access$getHEX_DIGITS$cp()
io.reactivex.Flowable: io.reactivex.Flowable buffer(org.reactivestreams.Publisher,java.util.concurrent.Callable)
com.ghostcommv2.R$integer: R$integer()
io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiFunction,boolean,int)
com.facebook.soloader.SoLoader: java.util.concurrent.locks.ReentrantReadWriteLock access$000()
io.reactivex.Flowable: io.reactivex.Flowable interval(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.CatalystInstance: java.util.Collection getNativeModules()
okhttp3.Connection: okhttp3.Protocol protocol()
io.reactivex.Observable: io.reactivex.Observable sorted()
com.polidea.rxandroidble2.scan.ScanFilter$Builder: com.polidea.rxandroidble2.scan.ScanFilter$Builder setServiceSolicitationUuid(android.os.ParcelUuid,android.os.ParcelUuid)
com.polidea.rxandroidble2.internal.operations.OperationsProvider: com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation provideLongWriteOperation(android.bluetooth.BluetoothGattCharacteristic,com.polidea.rxandroidble2.RxBleConnection$WriteOperationAckStrategy,com.polidea.rxandroidble2.RxBleConnection$WriteOperationRetryStrategy,com.polidea.rxandroidble2.internal.connection.PayloadSizeLimitProvider,byte[])
okhttp3.CertificatePinner$check$1: java.lang.Object invoke()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeArray getArray(int)
com.bleplx.BlePlxModule: void startDeviceScan(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
okhttp3.internal.http2.Http2ExchangeCodec$Companion: Http2ExchangeCodec$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.jni.HybridData$Destructor: long access$000(com.facebook.jni.HybridData$Destructor)
okhttp3.internal.cache.CacheStrategy$Factory: CacheStrategy$Factory(long,okhttp3.Request,okhttp3.Response)
com.facebook.react.modules.appstate.AppStateModule: void onHostResume()
com.facebook.soloader.UnpackingSoSource$Unpacker: UnpackingSoSource$Unpacker()
com.polidea.rxandroidble2.scan.ScanResult: com.polidea.rxandroidble2.RxBleDevice getBleDevice()
okio.AsyncTimeout: void enter()
io.reactivex.Single: io.reactivex.Flowable repeat(long)
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay valueOf(java.lang.String)
okhttp3.CipherSuite$Companion: okhttp3.CipherSuite access$init(okhttp3.CipherSuite$Companion,java.lang.String,int)
com.polidea.rxandroidble2.internal.operations.MtuRequestOperation_Factory: com.polidea.rxandroidble2.internal.operations.MtuRequestOperation_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorScheme(int[])
com.facebook.soloader.ApplicationSoSource: java.lang.String getLibraryPath(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(java.lang.Object)
okhttp3.Credentials: java.lang.String basic(java.lang.String,java.lang.String,java.nio.charset.Charset)
okhttp3.internal.tls.BasicCertificateChainCleaner: boolean verifySignature(java.security.cert.X509Certificate,java.security.cert.X509Certificate)
io.reactivex.observers.DisposableObserver: void dispose()
com.facebook.react.bridge.ReactContext: void initializeMessageQueueThreads(com.facebook.react.bridge.queue.ReactQueueConfiguration)
io.reactivex.Observable: io.reactivex.Observable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int,java.util.concurrent.Callable,boolean)
io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)
okhttp3.Route: java.net.Proxy -deprecated_proxy()
okhttp3.OkHttpClient: int callTimeoutMillis()
com.polidea.rxandroidble2.internal.operations.ConnectOperation$1: ConnectOperation$1(com.polidea.rxandroidble2.internal.operations.ConnectOperation,com.polidea.rxandroidble2.internal.serialization.QueueReleaseInterface)
com.polidea.rxandroidble2.internal.util.ScanRecordParser: com.polidea.rxandroidble2.scan.ScanRecord parseFromBytes(byte[])
com.facebook.react.bridge.CatalystInstanceImpl$2: void run()
com.facebook.react.fabric.events.EventBeatManager: void tick()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
com.facebook.react.bridge.LifecycleEventListener: void onHostDestroy()
okhttp3.internal.ws.RealWebSocket: void access$setName$p(okhttp3.internal.ws.RealWebSocket,java.lang.String)
io.reactivex.Observable: io.reactivex.Observable concatArrayEagerDelayError(io.reactivex.ObservableSource[])
com.polidea.rxandroidble2.internal.operations.ScanOperationApi21: void stopScan(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,android.bluetooth.le.ScanCallback)
com.bleplx.BlePlxModule: void readCharacteristic(int,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.modules.image.ImageLoaderModule: void registerRequest(int,com.facebook.datasource.DataSource)
com.polidea.rxandroidble2.scan.ScanSettings$1: java.lang.Object createFromParcel(android.os.Parcel)
com.facebook.react.bridge.JavaOnlyArray: boolean getBoolean(int)
io.reactivex.Observable: io.reactivex.Single toList()
okhttp3.ResponseBody: okhttp3.ResponseBody create(byte[],okhttp3.MediaType)
okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.WebSocketListener: void onClosed(okhttp3.WebSocket,int,java.lang.String)
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$6: ServiceDiscoveryManager$6(com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createRemoteDebuggerBundleLoader(java.lang.String,java.lang.String)
com.facebook.react.ReactActivity: void onDestroy()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
okio.AsyncTimeout: void access$setTimeoutAt$p(okio.AsyncTimeout,long)
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.polidea.rxandroidble2.internal.connection.ConnectorImpl_Factory: java.lang.Object get()
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.time.Instant)
com.facebook.react.views.view.ReactViewGroup: void setTranslucentBackgroundDrawable(android.graphics.drawable.Drawable)
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Observable setupIndication(android.bluetooth.BluetoothGattCharacteristic,com.polidea.rxandroidble2.NotificationSetupMode)
io.reactivex.Flowable: io.reactivex.Flowable mergeArrayDelayError(int,int,org.reactivestreams.Publisher[])
com.polidea.rxandroidble2.internal.util.DisposableUtil$3: void onSuccess(java.lang.Object)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: NativePlatformConstantsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.soloader.SoLoader$1: void loadBytes(java.lang.String,com.facebook.soloader.ElfByteChannel,int)
com.facebook.drawee.view.DraweeView: void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy)
com.facebook.react.bridge.Dynamic: int asInt()
okhttp3.OkHttpClient: int -deprecated_connectTimeoutMillis()
okhttp3.internal.platform.OpenJSSEPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.internal.cache2.Relay: void setUpstream(okio.Source)
com.polidea.rxandroidble2.internal.RxBleDeviceImpl: void lambda$establishConnection$0()
io.reactivex.internal.operators.single.SingleInternalHelper$NoSuchElementCallable: io.reactivex.internal.operators.single.SingleInternalHelper$NoSuchElementCallable[] values()
com.facebook.react.bridge.WritableNativeMap: com.facebook.jni.HybridData initHybrid()
okhttp3.internal.http2.Http2Connection: void updateConnectionFlowControl$okhttp(long)
okhttp3.internal.platform.android.AndroidLogHandler: AndroidLogHandler()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideIsNearbyPermissionNeverForLocationFactory: ClientComponent_ClientModule_ProvideIsNearbyPermissionNeverForLocationFactory(bleshadow.javax.inject.Provider)
io.reactivex.internal.disposables.DisposableHelper: io.reactivex.internal.disposables.DisposableHelper[] values()
com.polidea.rxandroidble2.internal.connection.NoRetryStrategy$1: NoRetryStrategy$1(com.polidea.rxandroidble2.internal.connection.NoRetryStrategy)
okhttp3.CacheControl$Builder: okhttp3.CacheControl build()
com.bleplx.adapter.BleModule: void monitorCharacteristicForService(int,java.lang.String,java.lang.String,java.lang.String,com.bleplx.adapter.OnEventCallback,com.bleplx.adapter.OnErrorCallback)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void toCircleFast(android.graphics.Bitmap,boolean)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap from(java.util.Map)
okhttp3.Cookie: java.lang.String path()
com.facebook.react.ReactActivity: void onCreate(android.os.Bundle)
com.polidea.rxandroidble2.internal.connection.ConnectionModule: com.polidea.rxandroidble2.internal.connection.MtuProvider bindCurrentMtuProvider(com.polidea.rxandroidble2.internal.connection.MtuWatcher)
androidx.appcompat.view.ContextThemeWrapper$Api17Impl: android.content.Context createConfigurationContext(androidx.appcompat.view.ContextThemeWrapper,android.content.res.Configuration)
com.facebook.react.bridge.JavaMethodWrapper$6: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$2: CharacteristicLongWriteOperation$2(com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation,com.polidea.rxandroidble2.internal.util.QueueReleasingEmitterWrapper)
io.reactivex.Observable: io.reactivex.Observable combineLatestDelayError(java.lang.Iterable,io.reactivex.functions.Function)
androidx.core.widget.TextViewCompat$Api17Impl: void setTextDirection(android.view.View,int)
com.facebook.react.views.view.ReactViewGroup: java.lang.String getOverflow()
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: long read(okio.Buffer,long)
okhttp3.internal.connection.RealConnection: void incrementSuccessCount$okhttp()
com.reactnativecommunity.asyncstorage.AsyncStorageErrorUtil: AsyncStorageErrorUtil()
okhttp3.Connection: okhttp3.Handshake handshake()
com.facebook.react.bridge.JavaMethodWrapper$8: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)
com.polidea.rxandroidble2.DaggerClientComponent: DaggerClientComponent()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion: okhttp3.internal.platform.Platform buildIfSupported()
com.facebook.react.modules.statusbar.StatusBarModule: void setColor(double,boolean)
io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function4)
com.polidea.rxandroidble2.RxBleClientImpl: com.polidea.rxandroidble2.RxBleDevice getBleDevice(java.lang.String)
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Void doInBackground(java.lang.Object[])
com.polidea.rxandroidble2.RxBleClientImpl_Factory: com.polidea.rxandroidble2.RxBleClientImpl_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.bleplx.adapter.BleModule: void readCharacteristic(int,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
okhttp3.internal.ws.MessageDeflater: boolean endsWith(okio.Buffer,okio.ByteString)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
okhttp3.internal.connection.Exchange: void flushRequest()
com.facebook.soloader.UnpackingSoSource$Unpacker: com.facebook.soloader.UnpackingSoSource$InputDsoIterator openDsoIterator()
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.http2.Http2Connection: void failConnection(java.io.IOException)
com.facebook.react.views.image.ReactImageManager: void setHeaders(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http2.Http2Stream: okio.Source getSource()
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState getReactScrollViewScrollState()
io.reactivex.Observable: io.reactivex.Observable generate(java.util.concurrent.Callable,io.reactivex.functions.BiFunction,io.reactivex.functions.Consumer)
okhttp3.Cookie: java.util.regex.Pattern access$getTIME_PATTERN$cp()
okhttp3.HttpUrl$Companion: java.util.List toQueryNamesAndValues$okhttp(java.lang.String)
com.facebook.react.bridge.ReactSoftExceptionLogger: ReactSoftExceptionLogger()
com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl: OperationsProviderImpl(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices,com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration,io.reactivex.Scheduler,io.reactivex.Scheduler,bleshadow.javax.inject.Provider)
androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.facebook.react.bridge.ReactMarker: void removeListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: java.lang.String getName()
okhttp3.ConnectionSpec: java.lang.String[] access$getCipherSuitesAsString$p(okhttp3.ConnectionSpec)
io.reactivex.Flowable: io.reactivex.Flowable doOnComplete(io.reactivex.functions.Action)
io.reactivex.Observable: io.reactivex.Observable onErrorReturnItem(java.lang.Object)
okhttp3.internal.ws.RealWebSocket: boolean close(int,java.lang.String,long)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
okhttp3.Headers: java.lang.String toString()
okio.AsyncTimeout: void access$setNext$p(okio.AsyncTimeout,okio.AsyncTimeout)
com.facebook.soloader.nativeloader.NativeLoader: int getSoSourcesVersion()
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.ReactScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.OkHttpClient$Builder$addInterceptor$2: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.image.ReactImageManager: void setBlurRadius(com.facebook.react.views.image.ReactImageView,float)
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: BLEAdvertiserModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setTextLocale(android.widget.TextView,java.util.Locale)
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay valueOf(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void didMountItems(com.facebook.react.bridge.UIManager)
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
com.bleplx.adapter.BleModule: void lambda$safeConnectToDevice$21(com.bleplx.adapter.OnEventCallback,io.reactivex.disposables.Disposable)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideComputationSchedulerFactory: java.lang.Object get()
com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation_Factory: java.lang.Object get()
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory_Factory: java.lang.Object get()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationServicesOkObservableFactory: ClientComponent_ClientModule_ProvideLocationServicesOkObservableFactory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
kotlin.jvm.internal.MutablePropertyReference0: java.lang.Object invoke()
com.polidea.rxandroidble2.internal.operations.ScanOperationApi21: boolean startScan(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,android.bluetooth.le.ScanCallback)
okhttp3.internal.cache.DiskLruCache$Editor: boolean[] getWritten$okhttp()
io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
com.facebook.react.modules.toast.ToastModule: java.util.Map getTypedExportedConstants()
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
com.polidea.rxandroidble2.internal.operations.ScanOperation: ScanOperation(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper)
com.facebook.react.bridge.NativeModuleRegistry: NativeModuleRegistry(com.facebook.react.bridge.ReactApplicationContext,java.util.Map)
com.facebook.drawee.view.DraweeView: void setController(com.facebook.drawee.interfaces.DraweeController)
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi18_Factory: com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi18_Factory create()
okhttp3.internal.http1.Http1ExchangeCodec: void cancel()
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationServicesOkObservableFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationServicesOkObservableFactory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.modules.toast.ToastModule: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function4)
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Single readDescriptor(android.bluetooth.BluetoothGattDescriptor)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationServicesOkObservableFactory: io.reactivex.Observable get()
com.facebook.react.turbomodule.core.TurboModuleInteropUtils: java.lang.String convertClassToJniType(java.lang.Class)
com.polidea.rxandroidble2.internal.util.ByteAssociationUtil$1: boolean test(com.polidea.rxandroidble2.internal.util.ByteAssociation)
com.polidea.rxandroidble2.internal.util.CharacteristicChangedEvent: int hashCode()
com.facebook.react.modules.core.TimingModule: boolean hasActiveTimersInRange(long)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$8: java.lang.Object apply(java.lang.Object)
com.polidea.rxandroidble2.scan.ScanRecord: int getTxPowerLevel()
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: void setHiddenNativeCallback(com.polidea.rxandroidble2.HiddenBluetoothGattCallback)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType[] values()
okhttp3.internal.platform.Android10Platform$Companion: okhttp3.internal.platform.Platform buildIfSupported()
com.facebook.react.bridge.ReactSoftExceptionLogger: void removeListener(com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener)
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideCharacteristicPropertiesParserFactory: java.lang.Object get()
okhttp3.TlsVersion$Companion: TlsVersion$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
okhttp3.internal.http2.Http2Stream: okhttp3.Headers takeHeaders()
com.facebook.react.bridge.JavaOnlyMap: java.util.Iterator getEntryIterator()
com.facebook.react.bridge.JavaScriptContextHolder: JavaScriptContextHolder(long)
com.facebook.react.uimanager.BaseViewManager: void setResponderRelease(android.view.View,boolean)
io.reactivex.Flowable: io.reactivex.Flowable window(org.reactivestreams.Publisher,io.reactivex.functions.Function,int)
io.reactivex.Flowable: io.reactivex.Flowable dematerialize(io.reactivex.functions.Function)
com.polidea.rxandroidble2.internal.operations.ServiceDiscoveryOperation: com.polidea.rxandroidble2.RxBleDeviceServices lambda$timeoutFallbackProcedure$1(android.bluetooth.BluetoothGatt)
okhttp3.OkHttpClient: int writeTimeoutMillis()
okhttp3.Address: okhttp3.CertificatePinner -deprecated_certificatePinner()
com.polidea.rxandroidble2.internal.connection.ConnectionModule_GattWriteMtuOverheadFactory: java.lang.Object get()
androidx.core.view.ViewCompat$Api17Impl: int getPaddingStart(android.view.View)
com.facebook.fbreact.specs.NativeVibrationSpec: NativeVibrationSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginJNI(long,int,float)
com.facebook.soloader.SoSource: java.lang.String[] getSoSourceAbis()
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1: int compare(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatEditText$SuperCaller getSuperCaller()
com.polidea.rxandroidble2.scan.ScanRecord: android.util.SparseArray getManufacturerSpecificData()
okhttp3.internal.http2.Http2Stream: boolean isOpen()
io.reactivex.Observable: io.reactivex.Observable zipArray(io.reactivex.functions.Function,boolean,int,io.reactivex.ObservableSource[])
com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl_Factory: com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl newInstance(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter,com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator,com.polidea.rxandroidble2.internal.scan.InternalToExternalScanResultConverter)
com.facebook.react.bridge.ReactContext: android.app.Activity getCurrentActivity()
okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)
okhttp3.internal.http2.Http2Stream: void enqueueTrailers(okhttp3.Headers)
okhttp3.internal.http2.Http2Connection$Builder: void setConnectionName$okhttp(java.lang.String)
okhttp3.Cookie: Cookie(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices: java.lang.String createDescriptorName(android.bluetooth.BluetoothGattDescriptor)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFastFilter(android.graphics.Bitmap,boolean)
io.reactivex.Flowable: io.reactivex.Flowable concatDelayError(org.reactivestreams.Publisher,int,boolean)
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskRunner$Backend getBackend()
io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function3)
com.facebook.react.bridge.JavaMethodWrapper$5: JavaMethodWrapper$5()
com.polidea.rxandroidble2.internal.operations.ServiceDiscoveryOperation: ServiceDiscoveryOperation(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices,com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration)
okhttp3.internal.http2.Http2Connection$Builder: void setSink$okhttp(okio.BufferedSink)
okhttp3.OkHttpClient$Builder: void setFollowSslRedirects$okhttp(boolean)
com.polidea.rxandroidble2.internal.util.DisposableUtil$2: DisposableUtil$2(io.reactivex.ObservableEmitter)
com.polidea.rxandroidble2.exceptions.BleCannotSetCharacteristicNotificationException: BleCannotSetCharacteristicNotificationException(android.bluetooth.BluetoothGattCharacteristic,int,java.lang.Throwable)
io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long,boolean)
okhttp3.internal.concurrent.TaskRunner: void beforeRun(okhttp3.internal.concurrent.Task)
okhttp3.internal.cache2.Relay: long getUpstreamPos()
com.facebook.react.turbomodule.core.TurboModuleInteropUtils: java.lang.String createJSIReturnKind(java.lang.String,java.lang.String,java.lang.Class[],java.lang.Class)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableIndicationValueFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableIndicationValueFactory create()
io.reactivex.Observable: io.reactivex.Observable concatMapSingle(io.reactivex.functions.Function,int)
io.reactivex.Flowable: io.reactivex.Flowable error(java.util.concurrent.Callable)
com.facebook.react.uimanager.BaseViewManager: void setResponderTerminate(android.view.View,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnScroll(com.facebook.react.views.textinput.ReactEditText,boolean)
okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl: void scanBleDeviceInBackground(android.app.PendingIntent,com.polidea.rxandroidble2.scan.ScanSettings,com.polidea.rxandroidble2.scan.ScanFilter[])
com.facebook.soloader.NativeDepsUnpacker: byte[] getApkIdentifier(android.content.Context)
io.reactivex.Observable: io.reactivex.Observable zipIterable(java.lang.Iterable,io.reactivex.functions.Function,boolean,int)
okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()
com.polidea.rxandroidble2.LogOptions$Builder: com.polidea.rxandroidble2.LogOptions$Builder setShouldLogScannedPeripherals(java.lang.Boolean)
com.facebook.react.bridge.ReadableMap: boolean hasKey(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.ReactNativeHost: boolean getShouldRequireActivity()
com.facebook.react.ReactNativeHost: boolean hasInstance()
com.facebook.soloader.SysUtil$MarshmallowSysdeps: boolean is64Bit()
io.reactivex.Flowable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function,boolean)
okhttp3.internal.platform.Jdk9Platform$Companion: Jdk9Platform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.polidea.rxandroidble2.internal.util.ScanRecordParser_Factory: java.lang.Object get()
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall)
com.polidea.rxandroidble2.ClientComponent$ClientModule: io.reactivex.Scheduler provideBluetoothInteractionScheduler(java.util.concurrent.ExecutorService)
okhttp3.MultipartReader: long access$currentPartBytesRemaining(okhttp3.MultipartReader,long)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType getType(int)
io.reactivex.Observable: io.reactivex.Observable buffer(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,java.util.concurrent.Callable)
okhttp3.EventListener: void connectFailed(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol,java.io.IOException)
io.reactivex.Observable: io.reactivex.Observable debounce(io.reactivex.functions.Function)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType[] values()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateConstructEnd(java.lang.String,int)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String toString()
io.reactivex.Flowable: io.reactivex.Flowable delay(org.reactivestreams.Publisher,io.reactivex.functions.Function)
okhttp3.internal.cache.DiskLruCache: boolean access$journalRebuildRequired(okhttp3.internal.cache.DiskLruCache)
okhttp3.internal.http2.Http2Stream$Companion: Http2Stream$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.polidea.rxandroidble2.exceptions.BleScanException: java.util.Date getRetryDateSuggestion()
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: java.lang.String getName()
com.facebook.soloader.SoLoader: java.io.File unpackLibraryBySoName(java.lang.String)
com.facebook.react.views.view.ReactViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.UIManagerModule: int resolveRootTagFromReactTag(int)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
io.reactivex.Flowable: io.reactivex.Single toList()
okhttp3.internal.http2.Http2Reader$ContinuationSource: okio.Timeout timeout()
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: boolean onData(int,okio.BufferedSource,int,boolean)
okhttp3.internal.connection.RealCall: boolean getForWebSocket()
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl: void rebase(android.content.res.Resources$Theme)
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl access$2200(com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl)
com.facebook.react.uimanager.ViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.himelbrand.ble.peripheral.RNBLEModule: void setName(java.lang.String)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.HttpUrl: java.lang.String host()
io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function4)
io.reactivex.Flowable: io.reactivex.Flowable sample(long,java.util.concurrent.TimeUnit,boolean)
com.facebook.react.bridge.JavaModuleWrapper: void invoke(int,com.facebook.react.bridge.ReadableNativeArray)
okhttp3.internal.http2.Http2Stream$FramingSource: Http2Stream$FramingSource(okhttp3.internal.http2.Http2Stream,long,boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(com.facebook.react.views.drawer.ReactDrawerLayout,float)
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholderTextColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.bridge.JavaOnlyArray: void pushString(java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: java.lang.String getString(int)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
com.polidea.rxandroidble2.RxBleClientImpl: com.polidea.rxandroidble2.RxBleClient$State getState()
com.polidea.rxandroidble2.scan.ScanFilter: boolean isAllFieldsEmpty()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$3$2: ScanSettingsEmulator$3$2(com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$3)
okhttp3.MultipartBody$Part: okhttp3.RequestBody body()
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void setLayoutDirection(android.content.res.Configuration,java.util.Locale)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,int)
okhttp3.ConnectionSpec: java.util.List cipherSuites()
com.facebook.react.bridge.CxxModuleWrapperBase: void invalidate()
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,int)
com.polidea.rxandroidble2.scan.ScanSettings: long getReportDelayMillis()
okhttp3.internal.concurrent.TaskRunner: void cancelAll()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6$1: io.reactivex.Observable apply(java.lang.Throwable)
io.reactivex.Flowable: io.reactivex.Flowable concatMapEager(io.reactivex.functions.Function,int,int)
okhttp3.OkHttpClient$Builder: int getPingInterval$okhttp()
okhttp3.internal.Util: int indexOfControlOrNonAscii(java.lang.String)
okhttp3.MultipartBody: long writeOrCountBytes(okio.BufferedSink,boolean)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyFromByteArray(long,byte[],int,int)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$2: void onDescriptorWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)
io.reactivex.Observable: io.reactivex.Observable intervalRange(long,long,long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.internal.http.RealResponseBody: RealResponseBody(java.lang.String,long,okio.BufferedSource)
androidx.appcompat.widget.AppCompatEditText: void setKeyListener(android.text.method.KeyListener)
okhttp3.internal.connection.RealConnection: boolean certificateSupportHost(okhttp3.HttpUrl,okhttp3.Handshake)
okhttp3.internal.ws.RealWebSocket$Companion: RealWebSocket$Companion()
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
io.reactivex.Observable: io.reactivex.Observable rangeLong(long,long)
com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper: boolean isBluetoothEnabled()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
androidx.appcompat.app.AppCompatActivity: android.content.Intent getSupportParentActivityIntent()
okhttp3.HttpUrl: java.net.URL url()
com.polidea.rxandroidble2.exceptions.BleAdapterDisabledException: BleAdapterDisabledException()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry: FIFORunnableEntry(com.polidea.rxandroidble2.internal.operations.Operation,io.reactivex.ObservableEmitter)
com.facebook.soloader.NativeLibrary: NativeLibrary(java.util.List)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Single readCharacteristic(java.util.UUID)
com.facebook.soloader.nativeloader.SystemDelegate: boolean loadLibrary(java.lang.String,int)
com.facebook.react.bridge.JavaMethodWrapper$7: com.facebook.react.bridge.Dynamic extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
okhttp3.CacheControl: boolean -deprecated_noTransform()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: java.lang.String getName()
com.facebook.react.modules.fresco.FrescoModule: void invalidate()
okhttp3.HttpUrl: java.util.Set -deprecated_queryParameterNames()
com.facebook.react.views.text.ReactTextView: void setText(com.facebook.react.views.text.ReactTextUpdate)
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices: void appendCharacteristicProperties(java.lang.StringBuilder,android.bluetooth.BluetoothGattCharacteristic)
okhttp3.internal.platform.Android10Platform$Companion: Android10Platform$Companion()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
com.polidea.rxandroidble2.internal.serialization.QueueSemaphore: QueueSemaphore()
io.reactivex.Observable: void safeSubscribe(io.reactivex.Observer)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetJustifyContentJNI(long,int)
com.polidea.rxandroidble2.RxBleAdapterStateObservable_Factory: com.polidea.rxandroidble2.RxBleAdapterStateObservable newInstance(android.content.Context)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateFail(java.lang.String,int)
okhttp3.internal.concurrent.TaskRunner$RealBackend: void beforeTask(okhttp3.internal.concurrent.TaskRunner)
okhttp3.internal.cache.DiskLruCache: void access$setJournalWriter$p(okhttp3.internal.cache.DiskLruCache,okio.BufferedSink)
okhttp3.CacheControl: int -deprecated_minFreshSeconds()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
okhttp3.internal.Util: java.lang.String[] concat(java.lang.String[],java.lang.String)
okhttp3.Cache: java.util.Iterator urls()
androidx.core.app.ActivityCompat$Api21Impl: void setExitSharedElementCallback(android.app.Activity,android.app.SharedElementCallback)
okhttp3.internal.http2.Http2Stream$FramingSink: Http2Stream$FramingSink(okhttp3.internal.http2.Http2Stream,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
com.facebook.react.modules.core.DeviceEventManagerModule: void emitNewIntentReceived(android.net.Uri)
com.facebook.react.modules.blob.BlobModule: byte[] resolve(java.lang.String,int,int)
okhttp3.Cookie: java.lang.String domain()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap of(java.lang.Object[])
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay[] values()
com.facebook.react.views.switchview.ReactSwitchManager: void setValueInternal(com.facebook.react.views.switchview.ReactSwitch,boolean)
okhttp3.internal.platform.android.AndroidLogKt: int getAndroidLevel(java.util.logging.LogRecord)
com.polidea.rxandroidble2.internal.scan.ScanRecordImplNativeWrapper: byte[] getBytes()
io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit)
com.polidea.rxandroidble2.scan.ScanSettings$Builder: com.polidea.rxandroidble2.scan.ScanSettings$Builder setLegacy(boolean)
com.facebook.drawee.view.DraweeView: void setImageURI(android.net.Uri)
okhttp3.CacheControl$Builder: CacheControl$Builder()
io.reactivex.Observable: io.reactivex.Observable window(io.reactivex.ObservableSource)
com.polidea.rxandroidble2.internal.scan.ScanSetup: ScanSetup(com.polidea.rxandroidble2.internal.operations.Operation,io.reactivex.ObservableTransformer)
io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(int,long,java.util.concurrent.TimeUnit)
okhttp3.ResponseBody$Companion: ResponseBody$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCapitalize(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.Dynamic)
okhttp3.internal.connection.RealConnection$connectTls$1: RealConnection$connectTls$1(okhttp3.CertificatePinner,okhttp3.Handshake,okhttp3.Address)
com.facebook.soloader.SoSource: java.lang.String toString()
okhttp3.internal.connection.RouteException: java.io.IOException getLastConnectException()
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.facebook.soloader.ApkSoSource: int access$000(com.facebook.soloader.ApkSoSource)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
okhttp3.internal.cache.DiskLruCache: java.io.File getDirectory()
com.polidea.rxandroidble2.internal.scan.ExternalScanSettingsExtension$Builder: com.polidea.rxandroidble2.internal.scan.ExternalScanSettingsExtension$Builder setShouldCheckLocationServicesState(boolean)
io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function6)
io.reactivex.Observable: io.reactivex.Observable throttleLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.facebook.react.bridge.JavaOnlyMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.bridge.ReadableArray)
com.facebook.soloader.UnpackingSoSource$InputDsoStream: int available()
com.facebook.react.ReactActivity: void onActivityResult(int,int,android.content.Intent)
com.polidea.rxandroidble2.ClientComponent$NamedSchedulers: ClientComponent$NamedSchedulers()
com.bleplx.BlePlxModule: void readDescriptorForService(int,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.modules.debug.DevSettingsModule: void reload()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String,long)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.util.List)
com.polidea.rxandroidble2.internal.connection.LoggingIllegalOperationHandler: com.polidea.rxandroidble2.internal.BleIllegalOperationException handleMismatchData(android.bluetooth.BluetoothGattCharacteristic,int)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromArray(java.lang.Object)
io.reactivex.Flowable: io.reactivex.Flowable concatWith(org.reactivestreams.Publisher)
okhttp3.Response: okhttp3.Response -deprecated_priorResponse()
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
com.polidea.rxandroidble2.internal.operations.ServiceDiscoveryOperation: void lambda$getCallback$0(com.polidea.rxandroidble2.RxBleDeviceServices)
com.facebook.react.modules.blob.BlobModule: void removeWebSocketHandler(double)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String,okhttp3.RequestBody)
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceDestroy()
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: ReactQueueConfigurationImpl(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl)
io.reactivex.Observable: io.reactivex.Observable mergeWith(io.reactivex.SingleSource)
com.facebook.react.views.image.ReactImageView: void setHeaders(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatToggleButton: void setAllCaps(boolean)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: void flush()
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$3: void onNext(com.polidea.rxandroidble2.exceptions.BleException)
io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.polidea.rxandroidble2.internal.operations.MtuRequestOperation_Factory: com.polidea.rxandroidble2.internal.operations.MtuRequestOperation newInstance(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration,int)
com.facebook.react.runtime.JSTimerExecutor: void callTimers(com.facebook.react.bridge.WritableNativeArray)
com.bleplx.BlePlxModule: void servicesForDevice(java.lang.String,com.facebook.react.bridge.Promise)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream getStream(int)
com.facebook.react.views.view.ReactViewGroup: void setNeedsOffscreenAlphaCompositing(boolean)
okhttp3.CertificatePinner$Companion: okio.ByteString sha1Hash(java.security.cert.X509Certificate)
okhttp3.internal.connection.RealCall: void enterNetworkInterceptorExchange(okhttp3.Request,boolean)
androidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
okhttp3.Request$Builder: okhttp3.Request$Builder delete(okhttp3.RequestBody)
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.bridge.CxxModuleWrapperBase: void onCatalystInstanceDestroy()
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withWriteTimeout(int,java.util.concurrent.TimeUnit)
androidx.activity.ComponentActivity: void addOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
com.facebook.react.bridge.ReadableArray: int getInt(int)
okhttp3.TlsVersion$Companion: TlsVersion$Companion()
com.polidea.rxandroidble2.internal.scan.InternalToExternalScanResultConverter: InternalToExternalScanResultConverter(com.polidea.rxandroidble2.internal.RxBleDeviceProvider)
okhttp3.internal.ws.RealWebSocket$Streams: boolean getClient()
com.facebook.react.ReactNativeHost: void clear()
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.DynamicFromArray create(com.facebook.react.bridge.ReadableArray,int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDisplayJNI(long,int)
okhttp3.internal.http1.Http1ExchangeCodec: void finishRequest()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mainThreadSpec()
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: java.lang.String getMarkerName()
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: java.lang.String getName()
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(com.facebook.react.views.switchview.ReactSwitch,boolean)
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.facebook.react.bridge.ReactContext: void onWindowFocusChange(boolean)
com.facebook.react.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: TurboModuleInteropUtils$MethodDescriptor(java.lang.String,java.lang.String,java.lang.String,int)
com.polidea.rxandroidble2.internal.util.CheckerScanPermission_Factory: com.polidea.rxandroidble2.internal.util.CheckerScanPermission_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.polidea.rxandroidble2.ConnectionParameters: int getSlaveLatency()
okhttp3.internal.concurrent.TaskQueue: java.util.concurrent.CountDownLatch idleLatch()
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi31: LocationServicesStatusApi31(com.polidea.rxandroidble2.internal.util.CheckerLocationProvider,com.polidea.rxandroidble2.internal.util.CheckerScanPermission,boolean,boolean)
com.polidea.rxandroidble2.internal.connection.MtuBasedPayloadSizeLimit: int getPayloadSizeLimit()
io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiFunction,boolean)
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation valueOf(java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era[] values()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int)
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager: TraceUpdateOverlayManager()
okhttp3.Authenticator: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarIndeterminateVisibility(boolean)
com.facebook.hermes.intl.Intl: Intl()
com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter_Factory: java.lang.Object get()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
okhttp3.internal.http2.Http2Connection$Companion: Http2Connection$Companion()
com.facebook.fbreact.specs.NativeBlobModuleSpec: void release(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder secure()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void ping(double)
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
okhttp3.HttpUrl$Companion: java.lang.String percentDecode$okhttp$default(okhttp3.HttpUrl$Companion,java.lang.String,int,int,boolean,int,java.lang.Object)
com.facebook.react.animated.NativeAnimatedModule: void startListeningToAnimatedNodeValue(double)
com.facebook.react.bridge.JavaModuleWrapper: void findMethods()
io.reactivex.Observable: io.reactivex.Observable flatMapIterable(io.reactivex.functions.Function)
com.facebook.soloader.nativeloader.NativeLoaderDelegate: boolean loadLibrary(java.lang.String,int)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1: BouncyCastleSocketAdapter$Companion$factory$1()
com.facebook.react.bridge.SoftAssertions: void assertCondition(boolean,java.lang.String)
com.facebook.react.bridge.InvalidIteratorException: InvalidIteratorException(java.lang.String)
com.polidea.rxandroidble2.ConnectionSetup$Builder: com.polidea.rxandroidble2.ConnectionSetup$Builder setAutoConnect(boolean)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(byte[],okhttp3.MediaType,int)
com.facebook.react.bridge.NativeModule$NativeMethod: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter_Factory: com.polidea.rxandroidble2.internal.connection.DisconnectionRouter_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
okhttp3.internal.platform.android.AndroidLog: void androidLog$okhttp(java.lang.String,int,java.lang.String,java.lang.Throwable)
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType valueOf(java.lang.String)
com.facebook.react.modules.core.TimingModule: TimingModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)
io.reactivex.Observable: java.lang.Iterable blockingLatest()
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadMessage(java.lang.String)
okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$5: io.reactivex.SingleSource apply(android.bluetooth.BluetoothGattCharacteristic)
io.reactivex.Single: io.reactivex.Flowable concat(java.lang.Iterable)
com.facebook.imagepipeline.nativecode.NativeCodeInitializer: void init(android.content.Context)
com.facebook.react.bridge.BaseJavaModule: boolean canOverrideExistingModule()
com.polidea.rxandroidble2.LogOptions: java.lang.Integer getMacAddressLogSetting()
com.reactnativecommunity.asyncstorage.AsyncStorageModule$4: AsyncStorageModule$4(com.reactnativecommunity.asyncstorage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback,com.facebook.react.bridge.ReadableArray)
io.reactivex.Observable: io.reactivex.Observable delaySubscription(io.reactivex.ObservableSource)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
okhttp3.Headers: java.lang.String name(int)
com.polidea.rxandroidble2.internal.DeviceModule_ProvideConnectionStateRelayFactory$InstanceHolder: com.polidea.rxandroidble2.internal.DeviceModule_ProvideConnectionStateRelayFactory access$000()
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: android.bluetooth.le.ScanSettings buildScanSettings(com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: void setConsolePatchSettings(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setBorderTopLeftRadius(android.view.View,float)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideTargetSdkFactory: ClientComponent_ClientModule_ProvideTargetSdkFactory(bleshadow.javax.inject.Provider)
com.polidea.rxandroidble2.internal.util.ClientStateObservable$1: java.lang.Object apply(java.lang.Object)
com.facebook.soloader.SoLoader: void addDirectApkSoSource(android.content.Context,java.util.ArrayList)
io.reactivex.internal.util.EmptyComponent: io.reactivex.internal.util.EmptyComponent valueOf(java.lang.String)
androidx.core.widget.TextViewCompat$Api16Impl: boolean getIncludeFontPadding(android.widget.TextView)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: void deleteContents(java.io.File)
com.polidea.rxandroidble2.scan.ScanFilter: com.polidea.rxandroidble2.scan.ScanFilter empty()
com.facebook.react.uimanager.ViewManager: ViewManager()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(java.time.Duration)
com.facebook.react.views.text.ReactTextViewManager: ReactTextViewManager()
com.polidea.rxandroidble2.internal.QueueOperation: QueueOperation()
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType valueOf(java.lang.String)
okhttp3.HttpUrl: java.lang.String -deprecated_encodedPath()
okhttp3.internal.platform.Platform: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
okhttp3.CipherSuite: CipherSuite(java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator_Factory: com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator get()
com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl: java.util.List onScanResultReceived(android.content.Intent)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$300(com.facebook.jni.DestructorThread$Destructor)
okhttp3.internal.connection.RealConnection$Companion: RealConnection$Companion()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
io.reactivex.Flowable: io.reactivex.Flowable fromFuture(java.util.concurrent.Future)
com.polidea.rxandroidble2.internal.operations.DisconnectOperation: void protectedRun(io.reactivex.ObservableEmitter,com.polidea.rxandroidble2.internal.serialization.QueueReleaseInterface)
okhttp3.internal.cache.DiskLruCache: boolean removeOldestEntry()
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.polidea.rxandroidble2.internal.operations.ConnectOperation$3: ConnectOperation$3(com.polidea.rxandroidble2.internal.operations.ConnectOperation)
okhttp3.OkHttpClient$Builder: void setConnectionPool$okhttp(okhttp3.ConnectionPool)
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule getJSIModule()
com.polidea.rxandroidble2.internal.util.CheckerLocationProvider: CheckerLocationProvider(android.content.ContentResolver,android.location.LocationManager)
com.polidea.rxandroidble2.RxBleConnection$LongWriteOperationBuilder: com.polidea.rxandroidble2.RxBleConnection$LongWriteOperationBuilder setCharacteristicUuid(java.util.UUID)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.polidea.rxandroidble2.internal.util.BleConnectionCompat: BleConnectionCompat(android.content.Context)
com.polidea.rxandroidble2.internal.connection.DescriptorWriter_Factory: java.lang.Object get()
com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter_Factory: com.polidea.rxandroidble2.internal.scan.AndroidScanObjectsConverter_Factory create(bleshadow.javax.inject.Provider)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDisableNotificationValueFactory$InstanceHolder: ClientComponent_ClientModule_ProvideDisableNotificationValueFactory$InstanceHolder()
com.facebook.react.uimanager.BaseViewManager: void setPointerOut(android.view.View,boolean)
com.facebook.react.views.image.ReactImageManager: java.lang.String getName()
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: io.reactivex.Observable setupServerInitiatedCharacteristicRead(android.bluetooth.BluetoothGattCharacteristic,com.polidea.rxandroidble2.NotificationSetupMode,boolean)
okhttp3.CertificatePinner: void check$okhttp(java.lang.String,kotlin.jvm.functions.Function0)
com.facebook.react.bridge.ReactContext: java.lang.String getSourceURL()
com.facebook.soloader.SysUtil$Api14Utils: java.lang.String getClassLoaderLdLoadLibrary()
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi18: boolean isLocationPermissionOk()
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18_Factory: com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18 newInstance(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator,com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator)
okhttp3.internal.connection.Exchange$ResponseBodySource: void close()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: MessageQueueThreadSpec$ThreadType(java.lang.String,int)
com.facebook.react.ReactRootView: com.facebook.react.ReactRootView$CustomGlobalLayoutListener getCustomGlobalLayoutListener()
okhttp3.internal.ws.RealWebSocket: void loopReader()
okhttp3.internal.cache2.Relay$RelaySource: void close()
com.polidea.rxandroidble2.exceptions.BleCannotSetCharacteristicNotificationException: java.lang.String reasonDescription(int)
io.reactivex.Observable: io.reactivex.Single toSortedList(int)
io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,io.reactivex.functions.Function)
okhttp3.OkHttp: OkHttp()
okhttp3.CertificatePinner$Pin: okio.ByteString getHash()
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.animated.NativeAnimatedModule: void setNodesManager(com.facebook.react.animated.NativeAnimatedNodesManager)
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(boolean)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: int getMaxLines(android.widget.TextView)
com.polidea.rxandroidble2.helpers.AdvertisedServiceUUIDExtractor: java.util.List extractUUIDs(byte[])
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: boolean propagateErrorIfOccurred(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$Output,android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int,com.polidea.rxandroidble2.exceptions.BleGattOperationType)
com.facebook.hermes.intl.NumberFormat: java.util.List formatToParts(double)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideComputationSchedulerFactory$InstanceHolder: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideComputationSchedulerFactory access$000()
com.polidea.rxandroidble2.internal.cache.DeviceComponentWeakReference: boolean isEmpty()
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(com.facebook.react.views.textinput.ReactEditText,java.lang.Object)
okhttp3.internal.ws.RealWebSocket: RealWebSocket(okhttp3.internal.concurrent.TaskRunner,okhttp3.Request,okhttp3.WebSocketListener,java.util.Random,long,okhttp3.internal.ws.WebSocketExtensions,long)
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(java.lang.Object)
com.polidea.rxandroidble2.RxBleDeviceServices$1: RxBleDeviceServices$1(com.polidea.rxandroidble2.RxBleDeviceServices,java.util.UUID)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getCommandsMap()
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: io.reactivex.Observable getOnCharacteristicChanged()
com.facebook.react.bridge.JavaOnlyArray: int hashCode()
okhttp3.Request: java.util.List headers(java.lang.String)
com.facebook.react.views.view.ReactClippingViewManager: void addView(android.view.ViewGroup,android.view.View,int)
io.reactivex.Observable: io.reactivex.Observable filter(io.reactivex.functions.Predicate)
okhttp3.internal.platform.android.ConscryptSocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager: io.reactivex.functions.Function wrapIntoRxBleDeviceServices()
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(java.lang.Iterable,io.reactivex.functions.Function,int)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void abortRequest(double)
okhttp3.internal.cache.CacheStrategy: okhttp3.Response getCacheResponse()
io.reactivex.Flowable: io.reactivex.Flowable buffer(io.reactivex.Flowable,io.reactivex.functions.Function,java.util.concurrent.Callable)
io.reactivex.Observable: io.reactivex.Observable concatMap(io.reactivex.functions.Function)
kotlin.jvm.internal.CallableReference: boolean isAbstract()
okhttp3.internal.connection.RouteSelector: RouteSelector(okhttp3.Address,okhttp3.internal.connection.RouteDatabase,okhttp3.Call,okhttp3.EventListener)
com.polidea.rxandroidble2.scan.ScanResult: int getRssi()
kotlin.coroutines.CombinedContext: java.lang.Object writeReplace()
com.polidea.rxandroidble2.RxBleDeviceServices: java.util.List getBluetoothGattServices()
com.facebook.react.views.textinput.ReactEditText: void setFontWeight(java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentPrefersCrossFadeTransitionsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.polidea.rxandroidble2.ClientComponent$Builder: com.polidea.rxandroidble2.ClientComponent$Builder applicationContext(android.content.Context)
androidx.appcompat.widget.SwitchCompat: void setTextOn(java.lang.CharSequence)
com.facebook.react.bridge.UiThreadUtil: void assertNotOnUiThread()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
com.facebook.react.ReactActivity: boolean onKeyUp(int,android.view.KeyEvent)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getRemoveClippedSubviews()
okhttp3.internal.http2.Http2Reader: void readHeaders(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.polidea.rxandroidble2.internal.util.QueueReleasingEmitterWrapper: void onError(java.lang.Throwable)
okhttp3.internal.http.ExchangeCodec: void finishRequest()
com.facebook.react.turbomodule.core.TurboModuleManager: void onCatalystInstanceDestroy()
okhttp3.internal.http2.Hpack$Reader: void readHeaders()
com.polidea.rxandroidble2.RxBleAdapterStateObservable_Factory: com.polidea.rxandroidble2.RxBleAdapterStateObservable_Factory create(bleshadow.javax.inject.Provider)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexBasis(com.facebook.react.bridge.Dynamic)
io.reactivex.Observable: io.reactivex.Observable combineLatestDelayError(io.reactivex.ObservableSource[],io.reactivex.functions.Function)
okhttp3.Cookie$Companion: java.lang.String parseDomain(java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour valueOf(java.lang.String)
com.facebook.react.views.text.ReactTextView: void setGravityVertical(int)
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: void broadcast(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.views.text.ReactRawTextManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)
okhttp3.HttpUrl$Builder: java.lang.String getHost$okhttp()
com.polidea.rxandroidble2.internal.util.CharacteristicPropertiesParser: java.lang.String propertyToString(int)
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void flattenAnimatedNodeOffset(double)
io.reactivex.Observable: int bufferSize()
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
com.facebook.soloader.UnpackingSoSource$Unpacker: void close()
com.facebook.react.bridge.JavaOnlyMap: int hashCode()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexGrowJNI(long,float)
com.polidea.rxandroidble2.ClientComponent$ClientModule: ClientComponent$ClientModule()
com.polidea.rxandroidble2.internal.operations.ScanOperation: com.polidea.rxandroidble2.exceptions.BleException provideException(android.os.DeadObjectException)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getDefaultEventTypes()
okhttp3.internal.connection.RealConnectionPool: int connectionCount()
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory$1: void subscribe(io.reactivex.ObservableEmitter)
com.polidea.rxandroidble2.internal.connection.ConnectionModule_MinimumMtuFactory: int minimumMtu()
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Listener getListener$okhttp()
okhttp3.internal.Util: java.lang.String format(java.lang.String,java.lang.Object[])
com.polidea.rxandroidble2.internal.util.LocationServicesStatus: boolean isLocationProviderOk()
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: ReactContext$ExceptionHandlerWrapper(com.facebook.react.bridge.ReactContext)
io.reactivex.observers.DisposableSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.facebook.react.bridge.JavaOnlyArray: int getInt(int)
com.polidea.rxandroidble2.internal.connection.ConnectorImpl: io.reactivex.Observable enqueueConnectOperation(com.polidea.rxandroidble2.internal.connection.ConnectionComponent)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$9: RxBleConnectionImpl$9(com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl,byte[])
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void deleteValues(com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.BaseViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.polidea.rxandroidble2.RxBleClientImpl: void finalize()
okhttp3.internal.platform.Jdk9Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider: BluetoothGattProvider()
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: android.os.LocaleList forLanguageTags(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.views.textinput.ReactTextInputManager: void setDisableFullscreenUI(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.bridge.JSIModuleRegistry: void registerModules(java.util.List)
com.facebook.soloader.UnpackingSoSource$InputDsoStream: void close()
com.facebook.react.bridge.ReactContext: boolean runOnJSQueueThread(java.lang.Runnable)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion: okhttp3.internal.platform.android.SocketAdapter buildIfSupported$default(okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion,java.lang.String,int,java.lang.Object)
io.reactivex.Flowable: io.reactivex.Flowable distinctUntilChanged()
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: boolean equals(java.lang.Object)
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
io.reactivex.Observable: io.reactivex.Single lastOrError()
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderRadius(com.facebook.react.views.textinput.ReactEditText,int,float)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
okhttp3.internal.http2.Http2Stream: void writeHeaders(java.util.List,boolean,boolean)
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.uimanager.StateWrapper getStateWrapper()
com.facebook.react.bridge.JavaMethodWrapper$6: com.facebook.react.bridge.ReadableArray extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.reactnativecommunity.asyncstorage.AsyncStoragePackage: AsyncStoragePackage()
io.reactivex.Observable: io.reactivex.Completable switchMapCompletable(io.reactivex.functions.Function)
okhttp3.internal.http.ExchangeCodec: okhttp3.Response$Builder readResponseHeaders(boolean)
okhttp3.Dispatcher: int queuedCallsCount()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month valueOf(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void invalidate()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
com.facebook.react.views.text.ReactTextViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap deepClone(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int,android.widget.TextView,android.text.TextPaint,androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl)
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$3: com.polidea.rxandroidble2.exceptions.BleException apply(java.lang.Boolean)
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$4: com.polidea.rxandroidble2.RxBleDeviceServices apply(java.util.List)
okhttp3.internal.platform.android.ConscryptSocketAdapter: boolean isSupported()
okhttp3.Headers: int hashCode()
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Single discoverServices()
okhttp3.MediaType: java.nio.charset.Charset charset$default(okhttp3.MediaType,java.nio.charset.Charset,int,java.lang.Object)
okhttp3.Address: java.net.Proxy -deprecated_proxy()
okhttp3.MultipartBody: int -deprecated_size()
com.facebook.react.animated.NativeAnimatedModule: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
okhttp3.Response: okhttp3.Response networkResponse()
io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit)
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi18_Factory: java.lang.Object get()
com.bleplx.adapter.BleModule: void readDescriptorForDevice(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
com.facebook.react.bridge.ReactCxxErrorHandler: ReactCxxErrorHandler()
com.facebook.jni.DestructorThread$Destructor: void destruct()
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode valueOf(java.lang.String)
okhttp3.internal.platform.BouncyCastlePlatform: boolean access$isSupported$cp()
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform access$getPlatform$cp()
okhttp3.MediaType: java.util.regex.Pattern access$getTYPE_SUBTYPE$cp()
io.reactivex.Flowable: io.reactivex.Flowable dematerialize()
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(android.view.View,int)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(byte[])
okhttp3.internal.cache.DiskLruCache: void evictAll()
com.facebook.react.bridge.GuardedRunnable: void run()
okhttp3.internal.http2.Http2Connection: void awaitPong()
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteSelector$Selection next()
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,int,com.facebook.react.bridge.ReadableArray)
com.polidea.rxandroidble2.scan.ScanSettings: void writeToParcel(android.os.Parcel,int)
okhttp3.Cookie: boolean -deprecated_secure()
io.reactivex.Flowable: io.reactivex.Flowable concatArrayEagerDelayError(org.reactivestreams.Publisher[])
com.polidea.rxandroidble2.internal.connection.MtuWatcher$1: MtuWatcher$1(com.polidea.rxandroidble2.internal.connection.MtuWatcher)
io.reactivex.Flowable: void blockingSubscribe(org.reactivestreams.Subscriber)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: void run()
com.facebook.react.views.textinput.ReactTextInputManager: void setTextContentType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void setOverflow(java.lang.String)
com.facebook.soloader.MinElf: void read(com.facebook.soloader.ElfByteChannel,java.nio.ByteBuffer,int,long)
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.Exchange initExchange$okhttp(okhttp3.internal.http.RealInterceptorChain)
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
okhttp3.Request$Builder: Request$Builder()
com.facebook.react.ReactActivity: void onResume()
com.polidea.rxandroidble2.internal.scan.ScanRecordImplNativeWrapper: java.util.List getServiceSolicitationUuids()
io.reactivex.Flowable: io.reactivex.Flowable concatMapSingleDelayError(io.reactivex.functions.Function,boolean,int)
com.facebook.react.bridge.BaseActivityEventListener: BaseActivityEventListener()
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String buildSignature(java.lang.reflect.Method,java.lang.Class[],boolean)
com.facebook.react.bridge.CxxModuleWrapperBase: void initialize()
androidx.appcompat.widget.SwitchCompat: int getSwitchPadding()
io.reactivex.Observable: io.reactivex.Observable fromArray(java.lang.Object[])
io.reactivex.Flowable: io.reactivex.Flowable throttleLatest(long,java.util.concurrent.TimeUnit,boolean)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.bridge.JavaOnlyMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http2.Http2Stream: void setErrorCode$okhttp(okhttp3.internal.http2.ErrorCode)
okhttp3.internal.http1.Http1ExchangeCodec: void access$setState$p(okhttp3.internal.http1.Http1ExchangeCodec,int)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: void readChunkSize()
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
okhttp3.ResponseBody: okio.BufferedSource source()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisJNI(long,float)
io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybeDelayError(io.reactivex.functions.Function)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType[] values()
androidx.appcompat.widget.SwitchCompat: void setAllCaps(boolean)
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Float extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
okhttp3.RequestBody$Companion$toRequestBody$1: RequestBody$Companion$toRequestBody$1(okio.ByteString,okhttp3.MediaType)
okhttp3.MultipartBody: okhttp3.MultipartBody$Part part(int)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String uiMode()
okhttp3.OkHttpClient: okhttp3.Authenticator -deprecated_authenticator()
com.facebook.react.bridge.ReactBridge: ReactBridge()
okhttp3.Headers$Companion: void access$checkName(okhttp3.Headers$Companion,java.lang.String)
com.facebook.react.bridge.ReactBridge: boolean isInitialized()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noStore()
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerLeave(boolean)
com.facebook.react.uimanager.UIManagerModule: void onHostPause()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
okhttp3.internal.http2.Http2Reader: void readData(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.facebook.react.bridge.ModuleHolder: void doInitialize(com.facebook.react.bridge.NativeModule)
com.facebook.react.bridge.Promise: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactScrollView,int,float)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler getJSExceptionHandler()
androidx.appcompat.widget.SwitchCompat: void setTextOff(java.lang.CharSequence)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: NativeFrameRateLoggerSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
com.polidea.rxandroidble2.internal.operations.ConnectionPriorityChangeOperation: ConnectionPriorityChangeOperation(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration,int,com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStopped()
okhttp3.WebSocketListener: void onOpen(okhttp3.WebSocket,okhttp3.Response)
io.reactivex.Observable: io.reactivex.Observable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function)
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Observable setupNotification(java.util.UUID,com.polidea.rxandroidble2.NotificationSetupMode)
io.reactivex.Observable: io.reactivex.Observable interval(long,long,java.util.concurrent.TimeUnit)
okhttp3.MediaType$Companion: okhttp3.MediaType parse(java.lang.String)
com.polidea.rxandroidble2.internal.connection.NotificationAndIndicationManager: io.reactivex.Observable lambda$setupServerInitiatedCharacteristicRead$0(io.reactivex.subjects.PublishSubject,io.reactivex.Observable)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.facebook.yoga.YogaNodeJNIBase: YogaNodeJNIBase()
com.polidea.rxandroidble2.internal.DeviceModule: com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration providesConnectTimeoutConf(io.reactivex.Scheduler)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
io.reactivex.Observable: io.reactivex.Observable defaultIfEmpty(java.lang.Object)
okhttp3.internal.cache.DiskLruCache: java.util.Iterator snapshots()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void dropAnimatedNode(double)
com.facebook.fbreact.specs.NativeBugReportingSpec: java.lang.String getName()
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
com.facebook.react.modules.websocket.WebSocketModule: void addListener(java.lang.String)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback_Factory: RxBleGattCallback_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
okhttp3.Response: java.lang.String message()
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
com.facebook.react.uimanager.UIManagerModule: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Observable setupIndication(java.util.UUID,com.polidea.rxandroidble2.NotificationSetupMode)
okhttp3.CookieJar$Companion: CookieJar$Companion()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$11: RxBleConnectionImpl$11(com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl,com.polidea.rxandroidble2.RxBleCustomOperation,com.polidea.rxandroidble2.internal.Priority)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.polidea.rxandroidble2.internal.connection.ConnectionModule: com.polidea.rxandroidble2.internal.operations.OperationsProvider bindOperationsProvider(com.polidea.rxandroidble2.internal.operations.OperationsProviderImpl)
com.facebook.fbreact.specs.NativeBugReportingSpec: void startReportAProblemFlow()
io.reactivex.Flowable: io.reactivex.Flowable cache()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Single discoverServices()
com.facebook.react.bridge.ReactSoftExceptionLogger: void addListener(com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener)
io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,int,io.reactivex.Scheduler)
com.facebook.yoga.YogaNative: void jni_YGNodeCopyStyleJNI(long,long)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Observable setupNotification(java.util.UUID)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
io.reactivex.Single: io.reactivex.Single delaySubscription(long,java.util.concurrent.TimeUnit)
io.reactivex.Flowable: io.reactivex.Flowable fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.Observable: io.reactivex.Observable concatMap(io.reactivex.functions.Function,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.facebook.react.animated.NativeAnimatedModule: void stopAnimation(double)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void priority(int,int,int,boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
okhttp3.internal.tls.CertificateChainCleaner: CertificateChainCleaner()
com.facebook.react.bridge.Systrace: void setEnabled(boolean)
okhttp3.internal.cache.DiskLruCache: boolean access$getInitialized$p(okhttp3.internal.cache.DiskLruCache)
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: java.util.zip.ZipFile access$200(com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker)
com.polidea.rxandroidble2.internal.operations.DescriptorReadOperation: io.reactivex.Single getCallback(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback)
com.facebook.react.bridge.UIManagerListener: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingRight()
io.reactivex.Single: io.reactivex.Single equals(io.reactivex.SingleSource,io.reactivex.SingleSource)
okhttp3.internal.concurrent.Task: Task(java.lang.String,boolean)
okhttp3.internal.concurrent.TaskQueue: boolean cancelAllAndDecide$okhttp()
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String convertInputStreamToBase64OutputStream(java.io.InputStream)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,java.io.File)
com.polidea.rxandroidble2.internal.connection.ThrowingIllegalOperationHandler_Factory: com.polidea.rxandroidble2.internal.connection.ThrowingIllegalOperationHandler newInstance(com.polidea.rxandroidble2.internal.connection.IllegalOperationMessageCreator)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem createDispatchCommandMountItemForInterop(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.core.TimingModule)
okhttp3.internal.http2.Settings$Companion: Settings$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.concurrent.TaskQueue: java.util.List getScheduledTasks()
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: long size(java.io.File)
com.facebook.react.bridge.WritableNativeArray: void pushNativeMap(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeListeners(double)
com.polidea.rxandroidble2.ClientComponent$ClientModule: int provideTargetSdk(android.content.Context)
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl_Factory: com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl get()
com.polidea.rxandroidble2.internal.operations.DescriptorWriteOperation: boolean startOperation(android.bluetooth.BluetoothGatt)
com.ghostcommv2.MainApplication: com.facebook.react.ReactNativeHost getReactNativeHost()
okhttp3.internal.ws.RealWebSocket: void checkUpgradeSuccess$okhttp(okhttp3.Response,okhttp3.internal.connection.Exchange)
okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)
com.facebook.react.bridge.JavaOnlyMap: int getInt(java.lang.String)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.FormBody$Builder: FormBody$Builder(java.nio.charset.Charset,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.reactivex.Flowable: io.reactivex.Flowable amb(java.lang.Iterable)
com.bleplx.BlePlxModule: void createClient(java.lang.String)
com.polidea.rxandroidble2.internal.util.BleConnectionCompat_Factory: BleConnectionCompat_Factory(bleshadow.javax.inject.Provider)
com.polidea.rxandroidble2.internal.connection.ConnectionModule_MinimumMtuFactory: java.lang.Object get()
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl$2: void subscribe(io.reactivex.ObservableEmitter)
com.facebook.soloader.FileLocker: void init(java.io.File,boolean)
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.Exchange getExchange$okhttp()
com.facebook.react.modules.network.NetworkingModule: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
okhttp3.HttpUrl: java.util.List queryParameterValues(java.lang.String)
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$7: ServiceDiscoveryManager$7(com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.polidea.rxandroidble2.RxBleClientImpl_Factory: java.lang.Object get()
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: MessageQueueThreadPerfStats()
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices_Factory: LoggerUtilBluetoothServices_Factory(bleshadow.javax.inject.Provider)
okhttp3.ConnectionPool: int idleConnectionCount()
io.reactivex.Flowable: io.reactivex.Completable switchMapCompletable(io.reactivex.functions.Function)
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.Request: okhttp3.HttpUrl -deprecated_url()
okhttp3.internal.connection.RealCall$AsyncCall: okhttp3.internal.connection.RealCall getCall()
okhttp3.OkHttpClient: boolean retryOnConnectionFailure()
com.bleplx.BlePlxModule: void characteristicsForService(int,com.facebook.react.bridge.Promise)
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18_Factory: com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi18 get()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.uimanager.BaseViewManager: void updateViewAccessibility(android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.widget.OverScroller getOverScrollerFromParent()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$6: RxBleConnectionImpl$6(com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap toHashMap()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
io.reactivex.Observable: io.reactivex.Observable timestamp(java.util.concurrent.TimeUnit)
com.facebook.soloader.MinElf$ElfError: MinElf$ElfError(java.lang.String)
com.facebook.imagepipeline.nativecode.Bitmaps: Bitmaps()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle valueOf(java.lang.String)
com.facebook.react.bridge.WritableNativeMap: void putNativeMap(java.lang.String,com.facebook.react.bridge.ReadableNativeMap)
okhttp3.Handshake: okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper access$1700(com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl)
okhttp3.internal.Util: long and(int,long)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$1: int get()
com.facebook.react.views.textinput.ReactEditText: void setDisableFullscreenUI(boolean)
io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function7)
io.reactivex.Flowable: io.reactivex.Flowable fromFuture(java.util.concurrent.Future,io.reactivex.Scheduler)
okhttp3.internal.platform.android.AndroidLog: void enableLogging(java.lang.String,java.lang.String)
okhttp3.Headers$Companion: okhttp3.Headers of(java.util.Map)
io.reactivex.Observable: io.reactivex.Observable mergeDelayError(java.lang.Iterable,int)
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion: ConscryptSocketAdapter$Companion()
com.facebook.react.bridge.Promise: void reject(java.lang.String)
com.facebook.react.bridge.Inspector$LocalConnection: void sendMessage(java.lang.String)
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: java.lang.String getName()
okhttp3.Response$Builder: okhttp3.Response$Builder receivedResponseAtMillis(long)
com.facebook.react.bridge.JsonWriterHelper: void listValue(android.util.JsonWriter,java.util.List)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole[] values()
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.HttpUrl: java.util.List pathSegments()
com.facebook.react.uimanager.BaseViewManager: void setTransformOrigin(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.drawee.view.DraweeView: void setLegacyVisibilityHandlingEnabled(boolean)
com.facebook.react.fabric.FabricUIManager: void onAllAnimationsComplete()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontSize(float)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideContentResolverFactory: ClientComponent_ClientModule_ProvideContentResolverFactory(bleshadow.javax.inject.Provider)
io.reactivex.Single: io.reactivex.Single delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithoutIndexingNewName()
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$7: io.reactivex.Single apply(com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.facebook.react.bridge.WritableNativeArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl: android.bluetooth.BluetoothDevice bluetoothDevice()
okhttp3.Cookie$Companion: long parseExpires(java.lang.String,int,int)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String,java.lang.Throwable)
com.facebook.soloader.NoopSoSource: NoopSoSource()
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.soloader.UnpackingSoSource: java.lang.String getSoNameFromFileName(java.lang.String)
okhttp3.ConnectionSpec: ConnectionSpec(boolean,boolean,java.lang.String[],java.lang.String[])
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: java.lang.String getName()
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: boolean propagateStatusError(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$Output,com.polidea.rxandroidble2.exceptions.BleGattException)
com.bleplx.adapter.BleModule: void cancelTransaction(java.lang.String)
com.polidea.rxandroidble2.scan.ScanFilter: boolean matchesServiceSolicitationUuids(android.os.ParcelUuid,android.os.ParcelUuid,java.util.List)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator: io.reactivex.functions.Function toFirstMatch()
okhttp3.Request$Builder: okhttp3.Request$Builder delete$default(okhttp3.Request$Builder,okhttp3.RequestBody,int,java.lang.Object)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newUIBackgroundTreadSpec(java.lang.String)
okhttp3.MultipartReader$PartSource: okio.Timeout timeout()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.core.widget.ListViewCompat$Api19Impl: void scrollListBy(android.widget.ListView,int)
com.polidea.rxandroidble2.scan.ScanSettings: int getScanMode()
okhttp3.internal.platform.Jdk9Platform$Companion: Jdk9Platform$Companion()
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi26_Factory: java.lang.Object get()
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.OkHttpClient access$getClient$p(okhttp3.internal.http1.Http1ExchangeCodec)
io.reactivex.Observable: io.reactivex.Observable empty()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReadableMapKeySetIterator: java.lang.String nextKey()
androidx.appcompat.widget.AppCompatCheckBox: void setAllCaps(boolean)
okhttp3.Dispatcher: void executed$okhttp(okhttp3.internal.connection.RealCall)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setRefreshing(boolean)
okhttp3.internal.http2.Http2Connection: long getReadBytesAcknowledged()
okhttp3.Headers: int -deprecated_size()
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: void clearAndCloseDatabase()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNotifyOnInlineViewLayout(com.facebook.react.views.text.ReactTextView,boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)
okhttp3.internal.ws.WebSocketWriter: void writePing(okio.ByteString)
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.JavaJSExecutor)
okhttp3.Response: int code()
com.polidea.rxandroidble2.scan.ScanFilter$1: ScanFilter$1()
com.facebook.react.fabric.FabricUIManager: void clearJSResponder()
okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)
com.facebook.react.modules.permissions.PermissionsModule: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
androidx.core.widget.TextViewCompat$Api17Impl: int getTextDirection(android.view.View)
io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(int,io.reactivex.Scheduler)
com.facebook.react.modules.intent.IntentModule: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$3: void subscribe(io.reactivex.ObservableEmitter)
com.facebook.react.bridge.JavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
okhttp3.internal.http2.Http2Connection: void access$setShutdown$p(okhttp3.internal.http2.Http2Connection,boolean)
okhttp3.HttpUrl: java.lang.String username()
okhttp3.internal.http2.ErrorCode: int getHttpCode()
com.polidea.rxandroidble2.ClientComponent$ClientModule: com.polidea.rxandroidble2.internal.serialization.ClientOperationQueue bindClientOperationQueue(com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl)
okhttp3.RequestBody$Companion$asRequestBody$1: void writeTo(okio.BufferedSink)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxAge(int,java.util.concurrent.TimeUnit)
okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)
okhttp3.Handshake$Companion$handshake$1: Handshake$Companion$handshake$1(java.util.List)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodes(double,double)
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion: okhttp3.internal.platform.android.SocketAdapter buildIfSupported(java.lang.String)
com.bleplx.adapter.BleModule: void lambda$safeReadDescriptorForDevice$10(com.bleplx.adapter.Descriptor,com.bleplx.adapter.utils.SafeExecutor,java.lang.String,byte[])
okhttp3.HttpUrl: java.lang.String encodedFragment()
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$DisconnectGattObservable$1: java.lang.Object apply(java.lang.Object)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
okhttp3.internal.http2.Http2Writer: void pushPromise(int,int,java.util.List)
com.polidea.rxandroidble2.RxBleClientImpl: void lambda$createScanOperationApi18$5(java.util.Set)
com.ghostcommv2.MainApplication$reactNativeHost$1: java.lang.Boolean isHermesEnabled()
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi18: ScanPreconditionsVerifierApi18(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,com.polidea.rxandroidble2.internal.util.LocationServicesStatus)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void onFastRefresh()
androidx.appcompat.app.AppCompatActivity: boolean supportShouldUpRecreateTask(android.content.Intent)
okhttp3.internal.Util: void threadName(java.lang.String,kotlin.jvm.functions.Function0)
com.facebook.soloader.Elf32_Dyn: Elf32_Dyn()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName valueOf(java.lang.String)
okhttp3.JavaNetCookieJar: JavaNetCookieJar(java.net.CookieHandler)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
okhttp3.internal.cache.DiskLruCache: boolean access$getMostRecentRebuildFailed$p(okhttp3.internal.cache.DiskLruCache)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.ErrorCode getErrorCode$okhttp()
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
com.facebook.react.bridge.Arguments$1: Arguments$1(java.lang.Object)
com.facebook.react.uimanager.BaseViewManager: void setResponderTerminationRequest(android.view.View,boolean)
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker$ZipBackedInputDsoIterator: com.facebook.soloader.UnpackingSoSource$InputDso next()
okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothInteractionExecutorServiceFactory: ClientComponent_ClientModule_ProvideBluetoothInteractionExecutorServiceFactory()
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
okhttp3.ResponseBody: void close()
com.facebook.react.bridge.JsonWriterHelper: void value(android.util.JsonWriter,java.lang.Object)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentGrayscaleState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeAppStateSpec: java.lang.String getName()
com.facebook.react.modules.fresco.FrescoModule: boolean hasBeenInitialized()
io.reactivex.Observable: io.reactivex.Observable ofType(java.lang.Class)
com.facebook.react.bridge.JavaOnlyMap: void putInt(java.lang.String,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: void close()
okhttp3.Response: okhttp3.Headers trailers()
io.reactivex.Flowable: io.reactivex.Flowable timestamp(java.util.concurrent.TimeUnit)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object getValue()
okio.AsyncTimeout: java.io.IOException newTimeoutException(java.io.IOException)
io.reactivex.Flowable: io.reactivex.Flowable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,org.reactivestreams.Publisher)
okhttp3.HttpUrl: boolean isHttps()
androidx.activity.ComponentActivity: void removeOnNewIntentListener(androidx.core.util.Consumer)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay[] values()
com.facebook.fbreact.specs.NativeModalManagerSpec: NativeModalManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.turbomodule.core.NativeModuleSoLoader$Companion: NativeModuleSoLoader$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.SwitchCompat: void setSplitTrack(boolean)
com.polidea.rxandroidble2.internal.connection.NoRetryStrategy$1: io.reactivex.Observable apply(com.polidea.rxandroidble2.RxBleConnection$WriteOperationRetryStrategy$LongWriteFailure)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] values()
com.polidea.rxandroidble2.internal.RxBleLog: void v(java.lang.String,java.lang.Object[])
com.facebook.react.views.modal.ReactModalHostView: void setOnShowListener(android.content.DialogInterface$OnShowListener)
com.facebook.react.uimanager.UIManagerModule: void setViewLocalData(int,java.lang.Object)
okhttp3.OkHttpClient: okhttp3.Authenticator -deprecated_proxyAuthenticator()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostPause()
com.facebook.soloader.NoopSoSource: int loadLibrary(java.lang.String,int,android.os.StrictMode$ThreadPolicy)
io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function,boolean,int,io.reactivex.functions.Function)
com.facebook.react.modules.permissions.PermissionsModule: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.bleplx.adapter.BleModule: com.polidea.rxandroidble2.RxBleConnection lambda$safeConnectToDevice$26(com.polidea.rxandroidble2.RxBleConnection,java.lang.Integer)
com.bleplx.adapter.RefreshGattMoment: com.bleplx.adapter.RefreshGattMoment[] values()
io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,int)
io.reactivex.Observable: io.reactivex.Observable throttleFirst(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.Flowable: io.reactivex.Flowable delay(long,java.util.concurrent.TimeUnit)
com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator: com.polidea.rxandroidble2.scan.ScanCallbackType toScanCallbackType(int)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: java.lang.String getName()
okhttp3.internal.http2.Huffman: int encodedLength(okio.ByteString)
com.facebook.fbreact.specs.NativeDevSettingsSpec: java.lang.String getName()
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setAutoFocus(boolean)
com.facebook.react.views.view.ReactViewManager: void setBorderColor(com.facebook.react.views.view.ReactViewGroup,int,java.lang.Integer)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadClose(int,java.lang.String)
com.facebook.soloader.SoLoader: java.lang.String[] getLibraryDependencies(java.lang.String)
okhttp3.CipherSuite$Companion: CipherSuite$Companion()
okhttp3.internal.cache.CacheInterceptor$Companion: okhttp3.Headers access$combine(okhttp3.internal.cache.CacheInterceptor$Companion,okhttp3.Headers,okhttp3.Headers)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothAdapterFactory: java.lang.Object get()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder followRedirects(boolean)
okhttp3.internal.concurrent.TaskLoggerKt: void taskLog(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setLeft(int)
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory$1: LocationServicesOkObservableApi23Factory$1(com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory)
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache: java.lang.Object get(java.lang.Object)
okhttp3.Response$Builder: okhttp3.Response$Builder addHeader(java.lang.String,java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
io.reactivex.Flowable: io.reactivex.Flowable repeatWhen(io.reactivex.functions.Function)
com.facebook.react.views.textinput.ReactTextInputManager: void setCaretHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.modules.camera.ImageStoreManager: void closeQuietly(java.io.Closeable)
com.bleplx.adapter.BleModule: void lambda$safeWriteCharacteristicForDevice$39(com.bleplx.adapter.utils.SafeExecutor,java.lang.String,java.lang.Throwable)
okhttp3.internal.connection.RealConnection$connectTls$2: java.lang.Object invoke()
okhttp3.EventListener: EventListener()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] $values()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeResource(int)
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices: void log(com.polidea.rxandroidble2.RxBleDeviceServices,android.bluetooth.BluetoothDevice)
io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function9)
okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)
io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay()
com.facebook.react.modules.intent.IntentModule: void waitForActivityAndGetInitialURL(com.facebook.react.bridge.Promise)
com.bleplx.adapter.BleModule: void lambda$requestConnectionPriorityForDevice$1(com.bleplx.adapter.utils.SafeExecutor,com.bleplx.adapter.Device,java.lang.String)
androidx.core.widget.TextViewCompat$Api17Impl: java.util.Locale getTextLocale(android.widget.TextView)
androidx.appcompat.widget.AppCompatSpinner$Api23Impl: void setDropDownViewTheme(android.widget.ThemedSpinnerAdapter,android.content.res.Resources$Theme)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap createMap()
com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable,long)
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Double extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType valueOf(java.lang.String)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion: Jdk8WithJettyBootPlatform$Companion()
okhttp3.ResponseBody: okio.ByteString byteString()
okhttp3.internal.connection.Exchange: okio.Sink createRequestBody(okhttp3.Request,boolean)
okhttp3.OkHttpClient: javax.net.SocketFactory -deprecated_socketFactory()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableNotificationValueFactory$InstanceHolder: ClientComponent_ClientModule_ProvideEnableNotificationValueFactory$InstanceHolder()
com.polidea.rxandroidble2.internal.QueueOperation: int compareTo(com.polidea.rxandroidble2.internal.operations.Operation)
okhttp3.internal.connection.RealConnection: void setRouteFailureCount$okhttp(int)
kotlin.jvm.internal.CallableReference: java.lang.String getName()
com.facebook.hermes.intl.DateTimeFormat: java.lang.String format(double)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.polidea.rxandroidble2.scan.ScanSettings$Builder: com.polidea.rxandroidble2.scan.ScanSettings build()
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay[] values()
com.facebook.react.bridge.JavaModuleWrapper: java.util.List getMethodDescriptors()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Completable requestConnectionPriority(int,long,java.util.concurrent.TimeUnit)
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withReadTimeout(int,java.util.concurrent.TimeUnit)
com.polidea.rxandroidble2.internal.util.ActiveCharacteristicNotification: ActiveCharacteristicNotification(io.reactivex.Observable,boolean)
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideIllegalOperationHandlerFactory: com.polidea.rxandroidble2.internal.connection.IllegalOperationHandler get()
com.polidea.rxandroidble2.internal.logger.LoggerUtil$AttributeLogWrapper: LoggerUtil$AttributeLogWrapper(java.util.UUID,byte[],boolean)
io.reactivex.Single: io.reactivex.Single doAfterTerminate(io.reactivex.functions.Action)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assignToPerfStats(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
com.facebook.react.uimanager.UIManagerModule: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23_Factory: com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23 newInstance(com.polidea.rxandroidble2.internal.util.CheckerLocationProvider,com.polidea.rxandroidble2.internal.util.CheckerScanPermission,int,int,boolean)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
okhttp3.internal.http2.Http2Connection$Listener: void onStream(okhttp3.internal.http2.Http2Stream)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextBreakStrategy(java.lang.String)
com.facebook.react.bridge.UIManager: void stopSurface(int)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.connection.RealConnection getConnection()
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
com.facebook.soloader.UnpackingSoSource$InputDsoStream: UnpackingSoSource$InputDsoStream(com.facebook.soloader.UnpackingSoSource$Dso,java.io.InputStream)
com.facebook.react.bridge.ReactContext: void addActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
androidx.core.provider.FontProvider$Api16Impl: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setLegacyRequestDisallowInterceptTouchEventEnabled(boolean)
io.reactivex.Flowable: io.reactivex.Flowable throttleLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentImpl: com.polidea.rxandroidble2.internal.util.BleConnectionCompat bleConnectionCompat()
com.facebook.react.bridge.DynamicFromObject: boolean asBoolean()
io.reactivex.Flowable: io.reactivex.Flowable switchMapSingle(io.reactivex.functions.Function)
com.polidea.rxandroidble2.internal.util.ByteAssociation: java.lang.String toString()
com.facebook.react.views.textinput.ReactTextInputManager: void setNumLines(com.facebook.react.views.textinput.ReactEditText,int)
com.bleplx.adapter.BleModule: com.bleplx.adapter.Descriptor getDescriptor(int)
io.reactivex.Observable: io.reactivex.Observable flatMapIterable(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setEllipsizeMode(com.facebook.react.views.text.ReactTextView,java.lang.String)
okhttp3.internal.http2.Http2Stream$FramingSink: void emitFrame(boolean)
com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper: RxBleAdapterWrapper(android.bluetooth.BluetoothAdapter)
okhttp3.internal.http2.Http2Connection: void writeSynResetLater$okhttp(int,okhttp3.internal.http2.ErrorCode)
io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)
com.facebook.react.fabric.events.EventEmitterWrapper: void dispatchUniqueEvent(java.lang.String,com.facebook.react.bridge.NativeMap)
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory access$getSslSocketFactoryOrNull$p(okhttp3.OkHttpClient)
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$5: io.reactivex.ObservableSource apply(com.polidea.rxandroidble2.exceptions.BleException)
okhttp3.Cache$CacheResponseBody$1: Cache$CacheResponseBody$1(okhttp3.Cache$CacheResponseBody,okio.Source,okio.Source)
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: void onReset(int,okhttp3.internal.http2.ErrorCode)
com.polidea.rxandroidble2.exceptions.BleCharacteristicNotFoundException: java.util.UUID getCharacteristicUUID()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideScanPreconditionVerifierFactory: com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifier get()
com.facebook.react.bridge.ReactCallback: void onBatchComplete()
okio.Timeout: okio.Timeout deadlineNanoTime(long)
com.polidea.rxandroidble2.internal.connection.LongWriteOperationBuilderImpl$2: io.reactivex.Observable apply(android.bluetooth.BluetoothGattCharacteristic)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setNumberOfLines(int)
com.facebook.react.bridge.ReactContext: void handleException(java.lang.Exception)
okhttp3.internal.Util: int delimiterOffset$default(java.lang.String,char,int,int,int,java.lang.Object)
okhttp3.internal.connection.Exchange: boolean isDuplex$okhttp()
okhttp3.OkHttpClient: okhttp3.CookieJar -deprecated_cookieJar()
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$302(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setProfilingEnabled(boolean)
io.reactivex.Observable: io.reactivex.Observable takeLast(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.polidea.rxandroidble2.helpers.LocationServicesOkObservable: void subscribeActual(io.reactivex.Observer)
okhttp3.HttpUrl: java.util.List encodedPathSegments()
com.facebook.soloader.SysUtil: long getApkDepBlockLength(java.io.File)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDirectionJNI(long)
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomRightRadius(android.view.View,float)
okhttp3.internal.concurrent.Task: long runOnce()
okhttp3.Handshake$Companion$handshake$1: java.lang.Object invoke()
io.reactivex.Observable: io.reactivex.Observable withLatestFrom(io.reactivex.ObservableSource,io.reactivex.functions.BiFunction)
io.reactivex.Observable: io.reactivex.Observable concatMapSingleDelayError(io.reactivex.functions.Function,boolean,int)
com.polidea.rxandroidble2.internal.operations.ScanOperation$1: ScanOperation$1(com.polidea.rxandroidble2.internal.operations.ScanOperation,java.lang.Object)
okhttp3.internal.http.StatusLine$Companion: okhttp3.internal.http.StatusLine get(okhttp3.Response)
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider access$600(com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl)
com.polidea.rxandroidble2.RxBleDeviceServices: io.reactivex.Single getCharacteristic(java.util.UUID)
com.bleplx.BlePlxModule: void enable(java.lang.String,com.facebook.react.bridge.Promise)
com.polidea.rxandroidble2.internal.util.ClientStateObservable$1: ClientStateObservable$1()
okhttp3.Response$Builder: void setPriorResponse$okhttp(okhttp3.Response)
com.facebook.react.fabric.SurfaceHandlerBinding: void stopNative()
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.Headers access$getTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec)
okhttp3.Interceptor$Companion$invoke$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.facebook.react.views.text.ReactTextView: void setNumberOfLines(int)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateCacheHit(java.lang.String,int)
com.facebook.react.bridge.Dynamic: void recycle()
io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiFunction)
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData initHybrid()
com.facebook.react.bridge.NoSuchKeyException: NoSuchKeyException(java.lang.String)
com.facebook.react.bridge.WritableMap: com.facebook.react.bridge.WritableMap copy()
io.reactivex.Observable: io.reactivex.Observable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.facebook.fbreact.specs.NativeAppStateSpec: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
okhttp3.HttpUrl$Builder$Companion: int access$slashCount(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int)
com.polidea.rxandroidble2.internal.util.CheckerLocationProvider: boolean isLocationProviderEnabledBelowApi19()
okhttp3.internal.platform.AndroidPlatform$Companion: AndroidPlatform$Companion()
com.polidea.rxandroidble2.RxBleScanResult: int getRssi()
okhttp3.OkHttpClient$Builder: okhttp3.CertificatePinner getCertificatePinner$okhttp()
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket$default(okhttp3.internal.http2.Http2Connection$Builder,java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink,int,java.lang.Object)
io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer)
com.facebook.react.uimanager.BaseViewManager: void setClick(android.view.View,boolean)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void invalidate()
okhttp3.internal.cache.DiskLruCache: boolean journalRebuildRequired()
com.polidea.rxandroidble2.internal.logger.LoggerSetup: LoggerSetup(int,int,int,boolean,boolean,com.polidea.rxandroidble2.LogOptions$Logger)
okhttp3.OkHttpClient$Builder: long getMinWebSocketMessageToCompress$okhttp()
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setPadding(int)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideComputationSchedulerFactory: io.reactivex.Scheduler get()
com.facebook.react.uimanager.BaseViewManager: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)
io.reactivex.Observable: io.reactivex.Observable doAfterNext(io.reactivex.functions.Consumer)
io.reactivex.Observable: io.reactivex.Observable retryWhen(io.reactivex.functions.Function)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
io.reactivex.Flowable: io.reactivex.Flowable distinctUntilChanged(io.reactivex.functions.Function)
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: okio.Timeout timeout()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher(com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
io.reactivex.Flowable: io.reactivex.Flowable skipUntil(org.reactivestreams.Publisher)
com.facebook.react.bridge.BackgroundExecutor: void queueRunnable(java.lang.Runnable)
com.facebook.react.uimanager.UIManagerModule: void findSubviewIn(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.lang.String getName()
okhttp3.internal.cache2.Relay: okio.Source getUpstream()
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
okhttp3.internal.platform.Jdk9Platform$Companion: boolean isAvailable()
io.reactivex.Flowable: io.reactivex.Flowable buffer(org.reactivestreams.Publisher,int)
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor()
com.facebook.react.views.image.ReactImageView: void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: NativeAnimatedModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.CatalystInstanceImpl: void initializeBridge(com.facebook.react.bridge.ReactCallback,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.bridge.queue.MessageQueueThread,java.util.Collection,java.util.Collection)
com.polidea.rxandroidble2.internal.connection.DisconnectAction_Factory: com.polidea.rxandroidble2.internal.connection.DisconnectAction_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule getLegacyJavaModule(java.lang.String)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.facebook.react.bridge.Inspector$RemoteConnection: void onMessage(java.lang.String)
com.polidea.rxandroidble2.RxBleScanResult: byte[] getScanRecord()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
androidx.fragment.app.FragmentActivity: void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
okhttp3.OkHttpClient: java.lang.Object clone()
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Single discoverServices(long,java.util.concurrent.TimeUnit)
okhttp3.HttpUrl$Builder: void setScheme$okhttp(java.lang.String)
com.polidea.rxandroidble2.RxBleClient: com.polidea.rxandroidble2.RxBleDevice getBleDevice(java.lang.String)
okhttp3.internal.connection.RealCall: java.lang.String access$toLoggableString(okhttp3.internal.connection.RealCall)
com.polidea.rxandroidble2.internal.operations.DisconnectOperation: boolean isDisconnected(android.bluetooth.BluetoothGatt)
com.facebook.react.bridge.CatalystInstanceImpl$1: CatalystInstanceImpl$1(com.facebook.react.bridge.CatalystInstanceImpl)
com.polidea.rxandroidble2.RxBleClientImpl: io.reactivex.Observable scanBleDevices(com.polidea.rxandroidble2.scan.ScanSettings,com.polidea.rxandroidble2.scan.ScanFilter[])
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
com.bleplx.BlePlxModule: BlePlxModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.app.AppCompatActivity: android.view.MenuInflater getMenuInflater()
okhttp3.internal.http2.Http2Connection$Builder: void setPushObserver$okhttp(okhttp3.internal.http2.PushObserver)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.polidea.rxandroidble2.RxBleClient: RxBleClient()
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
com.polidea.rxandroidble2.utils.StandardUUIDsParser: StandardUUIDsParser()
okhttp3.internal.http.ExchangeCodec: okhttp3.Headers trailers()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothInteractionSchedulerFactory: io.reactivex.Scheduler provideBluetoothInteractionScheduler(java.util.concurrent.ExecutorService)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderRadius(float)
okhttp3.internal.http2.Http2Connection$Listener: Http2Connection$Listener()
com.facebook.soloader.SysUtil: int getAppVersionCode(android.content.Context)
com.facebook.react.fabric.SurfaceHandlerBinding: com.facebook.jni.HybridData initHybrid(int,java.lang.String)
com.facebook.soloader.NativeDepsUnpacker: byte[] readNativeDepsFromApk(android.content.Context)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeMap getMap(int)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
com.facebook.react.modules.share.ShareModule: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.soloader.SoSource: java.io.File getSoFileByName(java.lang.String)
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy valueOf(java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager: boolean hasModule(java.lang.String)
okhttp3.internal.connection.RealConnection: void connectTls(okhttp3.internal.connection.ConnectionSpecSelector)
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23_Factory: com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: java.lang.String toString()
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: HeadlessJsTaskSupportModule(com.facebook.react.bridge.ReactApplicationContext)
com.polidea.rxandroidble2.internal.operations.ServiceDiscoveryOperation: io.reactivex.Single timeoutFallbackProcedure(android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,io.reactivex.Scheduler)
io.reactivex.Single: io.reactivex.Single retry(io.reactivex.functions.BiPredicate)
io.reactivex.Single: io.reactivex.Single ambArray(io.reactivex.SingleSource[])
com.facebook.react.bridge.WritableNativeMap: void putNativeArray(java.lang.String,com.facebook.react.bridge.ReadableNativeArray)
com.polidea.rxandroidble2.internal.connection.DescriptorWriter: DescriptorWriter(com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueue,com.polidea.rxandroidble2.internal.operations.OperationsProvider)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthJNI(long,float)
com.facebook.react.views.view.ReactViewManager: void handleHotspotUpdate(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel[] values()
okhttp3.Headers$Companion: void checkName(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontSize(com.facebook.react.views.textinput.ReactEditText,float)
com.himelbrand.ble.peripheral.RNBLEModule: void isAdvertising(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
io.reactivex.Observable: io.reactivex.Observable wrap(io.reactivex.ObservableSource)
okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1: java.lang.Object initialValue()
com.polidea.rxandroidble2.internal.RxBleDeviceImpl: boolean equals(java.lang.Object)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$3: void doInBackgroundGuarded(java.lang.Void[])
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvidesOperationTimeoutConfFactory: com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration get()
com.facebook.react.devsupport.LogBoxModule: void hide()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateSetUpStart(java.lang.String,int)
com.facebook.react.bridge.queue.ReactQueueConfiguration: void destroy()
com.polidea.rxandroidble2.internal.scan.ScanRecordImplNativeWrapper: android.util.SparseArray getManufacturerSpecificData()
com.facebook.react.modules.appstate.AppStateModule: void sendEvent(java.lang.String,java.lang.Object)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$6: io.reactivex.ObservableSource apply(io.reactivex.Observable)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setRegistry(com.facebook.react.bridge.NativeModuleRegistry)
okhttp3.internal.platform.Jdk9Platform: boolean access$isAvailable$cp()
okhttp3.internal.connection.Exchange: java.io.IOException bodyComplete(long,boolean,boolean,java.io.IOException)
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KMutableProperty0$Setter getSetter()
com.polidea.rxandroidble2.internal.serialization.FIFORunnableEntry$1$1: void onNext(java.lang.Object)
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView)
androidx.core.os.CancellationSignal$Api16Impl: void cancel(java.lang.Object)
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder followSslRedirects(boolean)
okhttp3.Response$Builder: okhttp3.internal.connection.Exchange getExchange$okhttp()
io.reactivex.Observable: io.reactivex.Observable doOnEach(io.reactivex.Observer)
com.facebook.react.bridge.JavaMethodWrapper: int calculateJSArgumentsNeeded()
okhttp3.EventListener: void dnsStart(okhttp3.Call,java.lang.String)
okhttp3.internal.HostnamesKt: java.net.InetAddress decodeIpv6(java.lang.String,int,int)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String)
okhttp3.Headers$Companion: void access$checkValue(okhttp3.Headers$Companion,java.lang.String,java.lang.String)
com.polidea.rxandroidble2.internal.cache.CacheEntry: CacheEntry(java.lang.String,com.polidea.rxandroidble2.internal.cache.DeviceComponentWeakReference)
okhttp3.internal.connection.RealConnection: void connectFailed$okhttp(okhttp3.OkHttpClient,okhttp3.Route,java.io.IOException)
com.facebook.react.modules.devloading.DevLoadingModule: void hide()
okhttp3.internal.http2.Hpack$Reader: void adjustDynamicTableByteCount()
okhttp3.Cookie: okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: void onHostPause()
okhttp3.internal.Util: java.util.Map toImmutableMap(java.util.Map)
okhttp3.internal.connection.RouteSelector$Selection: boolean hasNext()
okhttp3.Request: okhttp3.Headers headers()
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KCallable getReflected()
io.reactivex.Single: io.reactivex.Single merge(io.reactivex.SingleSource)
okhttp3.internal.http2.Http2Stream: okio.Sink getSink()
io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(java.lang.Iterable,io.reactivex.functions.Function)
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,boolean)
okhttp3.OkHttpClient$Builder: int getReadTimeout$okhttp()
com.bleplx.adapter.BleModule: void cleanServicesAndCharacteristicsForDevice(com.bleplx.adapter.Device)
okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)
io.reactivex.Flowable: io.reactivex.Flowable timer(long,java.util.concurrent.TimeUnit)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithIncrementalIndexingIndexedName(int)
okhttp3.internal.http2.Header: java.lang.String toString()
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType[] values()
okhttp3.internal.platform.Jdk9Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.fbreact.specs.NativeShareModuleSpec: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.HttpUrl$Builder$Companion: int schemeDelimiterOffset(java.lang.String,int,int)
com.facebook.react.views.view.ReactViewManager: void setOpacity(android.view.View,float)
com.bleplx.BlePlxModule: void addListener(java.lang.String)
com.polidea.rxandroidble2.internal.connection.ThrowingIllegalOperationHandler: ThrowingIllegalOperationHandler(com.polidea.rxandroidble2.internal.connection.IllegalOperationMessageCreator)
androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)
io.reactivex.Single: io.reactivex.Single create(io.reactivex.SingleOnSubscribe)
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableMap fromJSONObject(org.json.JSONObject)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri$okhttp()
okhttp3.internal.cache.CacheInterceptor$Companion: CacheInterceptor$Companion()
com.facebook.react.bridge.Arguments: android.os.Bundle toBundle(com.facebook.react.bridge.ReadableMap)
io.reactivex.Flowable: io.reactivex.Flowable intervalRange(long,long,long,long,java.util.concurrent.TimeUnit)
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybrid(boolean,java.lang.String,long)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.bleplx.BlePlxModule: void connectedDevices(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: int getModuleId()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostPause()
androidx.core.app.ActivityCompat$Api21Impl: void startPostponedEnterTransition(android.app.Activity)
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: CallInvokerHolderImpl(com.facebook.jni.HybridData)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setTextAlignVertical(com.facebook.react.views.text.ReactTextView,java.lang.String)
io.reactivex.Observable: io.reactivex.Observable distinct(io.reactivex.functions.Function)
com.polidea.rxandroidble2.internal.DeviceModule_ProvideBluetoothDeviceFactory: com.polidea.rxandroidble2.internal.DeviceModule_ProvideBluetoothDeviceFactory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.internal.http2.Http2Stream$FramingSource: boolean getFinished$okhttp()
io.reactivex.Single: io.reactivex.Single takeUntil(io.reactivex.SingleSource)
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String)
okhttp3.internal.tls.CertificateChainCleaner$Companion: CertificateChainCleaner$Companion()
com.facebook.soloader.ElfZipFileChannel: int read(java.nio.ByteBuffer,long)
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setEnterTransition(android.widget.PopupWindow,android.transition.Transition)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
io.reactivex.Observable: io.reactivex.Single toMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)
io.reactivex.Observable: io.reactivex.Observable concatEager(io.reactivex.ObservableSource,int,int)
com.facebook.react.views.text.ReactTextView: void setBorderRadius(float)
com.facebook.react.modules.i18nmanager.I18nManagerModule: void allowRTL(boolean)
com.bleplx.adapter.BleModule: void discoverAllServicesAndCharacteristicsForDevice(java.lang.String,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
com.polidea.rxandroidble2.internal.connection.LoggingIllegalOperationHandler_Factory: LoggingIllegalOperationHandler_Factory(bleshadow.javax.inject.Provider)
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType[] values()
okhttp3.ConnectionSpec$Builder: void setTls$okhttp(boolean)
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable getStatusBarBackgroundDrawable()
okhttp3.internal.http2.Hpack$Reader: Hpack$Reader(okio.Source,int,int)
io.reactivex.Observable: io.reactivex.Observable takeLast(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)
io.reactivex.subscribers.TestSubscriber$EmptySubscriber: io.reactivex.subscribers.TestSubscriber$EmptySubscriber valueOf(java.lang.String)
com.bleplx.BlePlxModule: void descriptorsForDevice(java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.soloader.SysUtil: boolean is64Bit()
com.facebook.yoga.YogaLogger: void log(com.facebook.yoga.YogaLogLevel,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void updateStagedInputTypeFlag(com.facebook.react.views.textinput.ReactEditText,int,int)
com.facebook.react.modules.core.TimingModule: void onHostPause()
okhttp3.internal.cache.DiskLruCache: boolean removeEntry$okhttp(okhttp3.internal.cache.DiskLruCache$Entry)
okhttp3.OkHttpClient$Builder: okhttp3.internal.connection.RouteDatabase getRouteDatabase$okhttp()
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedUsername(java.lang.String)
com.polidea.rxandroidble2.RxBleConnection: io.reactivex.Single readCharacteristic(android.bluetooth.BluetoothGattCharacteristic)
okhttp3.internal.http2.Http2Stream$FramingSink: okio.Timeout timeout()
com.facebook.react.views.image.ReactImageManager: void setOverlayColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.facebook.jni.ThreadScopeSupport: void runStdFunction(long)
okhttp3.internal.platform.android.DeferredSocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator_Factory: com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator_Factory create(bleshadow.javax.inject.Provider)
okhttp3.Protocol: okhttp3.Protocol[] values()
com.facebook.react.views.scroll.ReactScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactScrollView,int)
io.reactivex.Observable: io.reactivex.Observable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function,boolean)
com.facebook.react.ReactRootView: void setShouldLogContentAppeared(boolean)
com.facebook.react.bridge.ReactMarker$FabricMarkerListener: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long,int)
io.reactivex.Observable: io.reactivex.Observable takeUntil(io.reactivex.functions.Predicate)
com.facebook.soloader.UnpackingSoSource: java.lang.String[] getSoSourceAbis()
com.polidea.rxandroidble2.helpers.ValueInterpreter: float bytesToFloat(byte,byte)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void hide()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
com.polidea.rxandroidble2.internal.RxBleDeviceProvider_Factory: java.lang.Object get()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: java.lang.String getName()
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.lang.String getName()
com.facebook.react.bridge.CatalystInstanceImpl: void decrementPendingJSCalls()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
com.facebook.soloader.nativeloader.SystemDelegate: java.lang.String getLibraryPath(java.lang.String)
okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2: OkHttpClient$Builder$addNetworkInterceptor$2(kotlin.jvm.functions.Function1)
com.facebook.react.fabric.events.EventEmitterWrapper: EventEmitterWrapper(com.facebook.jni.HybridData)
okhttp3.internal.connection.RealConnection: boolean isEligible$okhttp(okhttp3.Address,java.util.List)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
okhttp3.internal.ws.WebSocketWriter: WebSocketWriter(boolean,okio.BufferedSink,java.util.Random,boolean,boolean,long)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String)
okhttp3.internal.platform.Platform$Companion: boolean isOpenJSSEPreferred()
okhttp3.internal.cache.DiskLruCache$Snapshot: long getLength(int)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String,java.lang.Class)
com.facebook.react.runtime.ReactInstance: void handleMemoryPressureJs(int)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate)
com.polidea.rxandroidble2.internal.util.UUIDUtil: UUIDUtil()
okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)
com.bleplx.adapter.BleModule: void readDescriptorForCharacteristic(int,java.lang.String,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
com.facebook.react.runtime.ReactSurfaceView: com.facebook.react.bridge.ReactContext getCurrentReactContext()
okhttp3.HttpUrl: java.net.URL -deprecated_url()
okhttp3.Cookie: boolean -deprecated_hostOnly()
com.facebook.soloader.SysUtil$MarshmallowSysdeps: boolean isSupportedDirectLoad(android.content.Context,int)
com.facebook.hermes.unicode.AndroidUnicodeUtils: AndroidUnicodeUtils()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.facebook.react.fabric.BindingImpl: void unregisterSurface(com.facebook.react.fabric.SurfaceHandlerBinding)
okhttp3.Challenge: java.lang.String realm()
com.facebook.react.uimanager.UIManagerModule: void dispatchViewManagerCommand(int,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
okhttp3.internal.connection.RealConnectionPool$cleanupTask$1: RealConnectionPool$cleanupTask$1(okhttp3.internal.connection.RealConnectionPool,java.lang.String)
com.polidea.rxandroidble2.internal.util.DisposableUtil$1: DisposableUtil$1(io.reactivex.SingleEmitter)
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList access$700()
com.polidea.rxandroidble2.internal.util.BleConnectionCompat: boolean connectUsingReflection(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCallback,boolean)
okhttp3.internal.publicsuffix.PublicSuffixDatabase$findMatchingRule$1: java.lang.Object get()
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(java.lang.String,okhttp3.MediaType)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressCircleDiameter()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance getCatalystInstance()
com.facebook.yoga.YogaNative: void jni_YGNodePrintJNI(long)
okhttp3.Protocol: Protocol(java.lang.String,int,java.lang.String)
com.facebook.soloader.DirectApkSoSource: java.lang.String[] getDependencies(java.lang.String,com.facebook.soloader.ElfByteChannel)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: MessageQueueThreadImpl$4(com.facebook.react.common.futures.SimpleSettableFuture)
okhttp3.RequestBody$Companion$toRequestBody$2: void writeTo(okio.BufferedSink)
com.facebook.react.bridge.JavaMethodWrapper: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.modal.ReactModalHostManager: void setVisible(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: MessageQueueThreadHandler(android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
okhttp3.CacheControl$Companion: int indexOfElement$default(okhttp3.CacheControl$Companion,java.lang.String,java.lang.String,int,int,java.lang.Object)
io.reactivex.Flowable: java.lang.Iterable blockingNext()
com.facebook.react.bridge.JavaOnlyMap: java.lang.String toString()
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexGrowJNI(long)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder allEnabledTlsVersions()
com.polidea.rxandroidble2.exceptions.BleScanException: BleScanException(int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: void run()
com.polidea.rxandroidble2.internal.connection.ConnectionModule_GattWriteMtuOverheadFactory$InstanceHolder: com.polidea.rxandroidble2.internal.connection.ConnectionModule_GattWriteMtuOverheadFactory access$000()
com.polidea.rxandroidble2.internal.Priority: Priority(int)
androidx.appcompat.app.AppCompatActivity: void setSupportActionBar(androidx.appcompat.widget.Toolbar)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: AccessibilityInfoModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.ws.WebSocketWriter: okio.BufferedSink getSink()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExceptionHandler(com.facebook.react.bridge.JSExceptionHandler)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Class getShadowNodeClass()
io.reactivex.Single: io.reactivex.Single zip(java.lang.Iterable,io.reactivex.functions.Function)
okhttp3.RequestBody$Companion$toRequestBody$2: RequestBody$Companion$toRequestBody$2(byte[],okhttp3.MediaType,int,int)
com.facebook.react.bridge.DynamicFromMap: int asInt()
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory_Factory: com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.turbomodule.core.TurboModuleManager: boolean isTurboModule(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
com.facebook.jni.IteratorHelper: IteratorHelper(java.lang.Iterable)
com.polidea.rxandroidble2.RxBleClient: io.reactivex.Observable observeStateChanges()
com.facebook.react.common.mapbuffer.WritableMapBuffer: WritableMapBuffer()
io.reactivex.Flowable: io.reactivex.Flowable buffer(int,int,java.util.concurrent.Callable)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$4: java.lang.Object apply(java.lang.Object)
okhttp3.internal.http1.Http1ExchangeCodec: void skipConnectBody(okhttp3.Response)
com.facebook.soloader.DirectorySoSource: DirectorySoSource(java.io.File,int,java.lang.String[])
okhttp3.internal.cache2.Relay: void access$writeHeader(okhttp3.internal.cache2.Relay,okio.ByteString,long,long)
com.facebook.react.views.text.ReactTextView: void setNotifyOnInlineViewLayout(boolean)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void headers(boolean,int,int,java.util.List)
okhttp3.internal.http1.Http1ExchangeCodec: okio.BufferedSource access$getSource$p(okhttp3.internal.http1.Http1ExchangeCodec)
com.facebook.react.uimanager.BaseViewManager: void setOpacity(android.view.View,float)
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentBuilder: DaggerClientComponent$DeviceComponentBuilder(com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl)
com.facebook.soloader.ExoSoSource: com.facebook.soloader.UnpackingSoSource$Unpacker makeUnpacker(byte)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(android.view.View,java.lang.Integer)
com.facebook.react.uimanager.UIManagerModule: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.platform.android.AndroidSocketAdapter: AndroidSocketAdapter(java.lang.Class)
okhttp3.internal.http2.Http2Connection: void access$setWriteBytesMaximum$p(okhttp3.internal.http2.Http2Connection,long)
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event[] values()
okhttp3.Cookie$Builder: okhttp3.Cookie build()
io.reactivex.Single: io.reactivex.Flowable toFlowable()
okhttp3.MultipartBody$Part$Companion: MultipartBody$Part$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String)
okhttp3.internal.connection.Exchange$RequestBodySink: void close()
okio.ByteString: void readObject(java.io.ObjectInputStream)
io.reactivex.Observable: io.reactivex.Single collect(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)
okhttp3.MultipartBody$Companion: void appendQuotedString$okhttp(java.lang.StringBuilder,java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: void removeView(android.view.ViewGroup,android.view.View)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setGlobalOptions(com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http2.Http2Stream$FramingSource: boolean getClosed$okhttp()
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getConstants()
okhttp3.internal.http2.Http2Connection: void writePing()
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: CatalystInstanceImpl$PendingJSCall(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType[] values()
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideConnectionQueueExecutorServiceFactory: ClientComponent_ClientModule_ProvideConnectionQueueExecutorServiceFactory()
com.vitorpamplona.bleavertiser.BLEAdvertiserModule: void setCompanyId(int)
com.polidea.rxandroidble2.RxBleClient: io.reactivex.Observable scanBleDevices(com.polidea.rxandroidble2.scan.ScanSettings,com.polidea.rxandroidble2.scan.ScanFilter[])
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String getName()
com.facebook.react.bridge.JavaMethodWrapper$8: com.facebook.react.bridge.ReadableMap extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
okhttp3.internal.connection.RealCall$AsyncCall: okhttp3.Request getRequest()
com.facebook.react.uimanager.UIManagerModule: void onBatchComplete()
com.facebook.react.bridge.CatalystInstanceImpl$1: void run()
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
com.polidea.rxandroidble2.RxBleDeviceServices$3: java.lang.Object apply(java.lang.Object)
com.facebook.react.bridge.JSCJavaScriptExecutor: JSCJavaScriptExecutor(com.facebook.react.bridge.ReadableNativeMap)
okhttp3.internal.concurrent.TaskQueue$AwaitIdleTask: TaskQueue$AwaitIdleTask()
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
okhttp3.internal.connection.RouteDatabase: RouteDatabase()
io.reactivex.Observable: io.reactivex.Observable switchMap(io.reactivex.functions.Function)
io.reactivex.Single: io.reactivex.Single zipArray(io.reactivex.functions.Function,io.reactivex.SingleSource[])
com.facebook.react.uimanager.ViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.soloader.ApkSoSource: com.facebook.soloader.UnpackingSoSource$Unpacker makeUnpacker(byte)
okhttp3.CacheControl: boolean isPublic()
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi26: com.polidea.rxandroidble2.scan.IsConnectable check(android.bluetooth.le.ScanResult)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingJNI(long,int,float)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.concurrent.TaskQueue: void schedule(okhttp3.internal.concurrent.Task,long)
com.bleplx.adapter.BleModule: java.lang.String getCurrentState()
okhttp3.internal.cache2.Relay: void setUpstreamPos(long)
okhttp3.internal.connection.RealConnectionPool: boolean callAcquirePooledConnection(okhttp3.Address,okhttp3.internal.connection.RealCall,java.util.List,boolean)
com.facebook.soloader.ElfByteChannel: int read(java.nio.ByteBuffer)
okhttp3.OkHttpClient$Builder: void setRetryOnConnectionFailure$okhttp(boolean)
okhttp3.HttpUrl: java.lang.String -deprecated_fragment()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)
com.facebook.react.bridge.Inspector$LocalConnection: Inspector$LocalConnection(com.facebook.jni.HybridData)
okhttp3.internal.Util: java.lang.String toHostHeader$default(okhttp3.HttpUrl,boolean,int,java.lang.Object)
com.facebook.react.bridge.ReactContext: boolean isOnJSQueueThread()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showShareActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String)
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$5: java.lang.Object apply(java.lang.Object)
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
okhttp3.CertificatePinner$Pin: java.lang.String toString()
okhttp3.internal.cache.CacheInterceptor: CacheInterceptor(okhttp3.Cache)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableArray asArray()
io.reactivex.Flowable: io.reactivex.Flowable timeInterval(io.reactivex.Scheduler)
com.facebook.react.modules.core.RCTNativeAppEventEmitter: void emit(java.lang.String,java.lang.Object)
androidx.appcompat.app.AppCompatActivity: void invalidateOptionsMenu()
com.polidea.rxandroidble2.internal.logger.LoggerUtil: java.lang.String commonStatusMessage()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateEnd(java.lang.String,int)
com.facebook.react.bridge.ReadableArray: int size()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion: Jdk8WithJettyBootPlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void announceForAccessibility(java.lang.String)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation: byte[] getNextBatch(java.nio.ByteBuffer,int)
com.polidea.rxandroidble2.scan.ScanSettings$1: com.polidea.rxandroidble2.scan.ScanSettings createFromParcel(android.os.Parcel)
com.facebook.react.bridge.JSBundleLoaderDelegate: void setSourceURLs(java.lang.String,java.lang.String)
com.polidea.rxandroidble2.internal.RxBleDeviceProvider_Factory: com.polidea.rxandroidble2.internal.RxBleDeviceProvider get()
com.facebook.react.bridge.Promise: void resolve(java.lang.Object)
com.facebook.react.views.modal.ReactModalHostView: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: DevToolsSettingsManagerModule(com.facebook.react.bridge.ReactApplicationContext)
com.polidea.rxandroidble2.internal.RxBleDeviceProvider_Factory: com.polidea.rxandroidble2.internal.RxBleDeviceProvider newInstance(com.polidea.rxandroidble2.internal.cache.DeviceComponentCache,bleshadow.javax.inject.Provider)
okhttp3.ConnectionPool: void evictAll()
okhttp3.Credentials: Credentials()
com.facebook.react.views.textinput.ReactEditText: void setStagedInputType(int)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient)
com.polidea.rxandroidble2.RxBleCustomOperation: io.reactivex.Observable asObservable(android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.internal.connection.RxBleGattCallback,io.reactivex.Scheduler)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportException(com.facebook.react.bridge.ReadableMap)
okhttp3.internal.concurrent.TaskQueue: void setCancelActiveTask$okhttp(boolean)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cache(okhttp3.Cache)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.modal.ReactModalHostView: android.view.View getContentView()
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentBuilder: DaggerClientComponent$DeviceComponentBuilder(com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl,com.polidea.rxandroidble2.DaggerClientComponent$1)
com.facebook.react.modules.blob.BlobModule: byte[] getBytesFromUri(android.net.Uri)
io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiFunction)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDisableNotificationValueFactory$InstanceHolder: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideDisableNotificationValueFactory access$000()
com.facebook.react.views.textinput.ReactEditText: int getGravityHorizontal()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
io.reactivex.Observable: io.reactivex.Observable concatMapDelayError(io.reactivex.functions.Function)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: NativeKeyboardObserverSpec(com.facebook.react.bridge.ReactApplicationContext)
io.reactivex.Observable: io.reactivex.Single first(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection valueOf(java.lang.String)
io.reactivex.Observable: io.reactivex.Observable merge(java.lang.Iterable,int)
com.polidea.rxandroidble2.internal.util.CharacteristicChangedEvent: java.lang.String toString()
com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTModernEventEmitter)
okhttp3.EventListener: void responseFailed(okhttp3.Call,java.io.IOException)
androidx.fragment.app.FragmentActivity: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
com.facebook.yoga.YogaGutter: com.facebook.yoga.YogaGutter valueOf(java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setAccessible(com.facebook.react.views.view.ReactViewGroup,boolean)
com.polidea.rxandroidble2.RxBleConnection$LongWriteOperationBuilder: com.polidea.rxandroidble2.RxBleConnection$LongWriteOperationBuilder setCharacteristic(android.bluetooth.BluetoothGattCharacteristic)
okhttp3.internal.cache.DiskLruCache: void trimToSize()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: MessageQueueThreadImpl$2(com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.polidea.rxandroidble2.internal.logger.LoggerUtil: java.lang.String commonMacMessage(java.lang.String)
com.facebook.react.views.text.ReactTextShadowNode: void setShouldNotifyOnTextLayout(boolean)
com.facebook.react.uimanager.BaseViewManager: BaseViewManager()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
io.reactivex.Flowable: io.reactivex.Single elementAt(long,java.lang.Object)
okhttp3.WebSocket: boolean send(okio.ByteString)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideEnableNotificationValueFactory: java.lang.Object get()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateStart(java.lang.String,int)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$1: java.lang.Object apply(java.lang.Object)
io.reactivex.Flowable: io.reactivex.Flowable distinct(io.reactivex.functions.Function,java.util.concurrent.Callable)
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(long,java.util.concurrent.TimeUnit)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getTrackTintMode()
okhttp3.internal.http.DatesKt: java.lang.String toHttpDateString(java.util.Date)
io.reactivex.Single: io.reactivex.Maybe flatMapMaybe(io.reactivex.functions.Function)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(byte[],okhttp3.MediaType)
com.facebook.soloader.nativeloader.NativeLoaderDelegate: int getSoSourcesVersion()
com.polidea.rxandroidble2.RxBleConnection$WriteOperationRetryStrategy: io.reactivex.ObservableSource apply(io.reactivex.Observable)
com.facebook.common.time.RealtimeSinceBootClock: RealtimeSinceBootClock()
okhttp3.internal.platform.Android10Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.react.bridge.JavaOnlyArray: void pushDouble(double)
io.reactivex.Flowable: io.reactivex.Flowable concatArrayEager(org.reactivestreams.Publisher[])
androidx.appcompat.app.AppCompatActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
com.polidea.rxandroidble2.internal.util.ByteAssociationUtil: ByteAssociationUtil()
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.polidea.rxandroidble2.ClientComponent$ClientModule: byte[] provideEnableIndicationValue()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(com.facebook.react.views.text.ReactTextView)
com.facebook.react.views.textinput.ReactEditText: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
com.facebook.react.modules.fresco.FrescoModule: void onHostDestroy()
com.facebook.react.bridge.ReactContext: void assertOnJSQueueThread()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideFinalizationCloseableFactory: com.polidea.rxandroidble2.ClientComponent$ClientComponentFinalizer get()
okhttp3.internal.ws.RealWebSocket: void cancel()
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: okio.ForwardingTimeout getTimeout()
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: okio.Timeout timeout()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi18_Factory$InstanceHolder: com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi18_Factory access$000()
com.facebook.react.bridge.ColorPropConverter: int resolveResource(android.content.Context,java.lang.String)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
com.facebook.react.bridge.CatalystInstance: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: CatalystInstanceImpl$1$1$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1$1$1)
com.polidea.rxandroidble2.NotificationSetupMode: com.polidea.rxandroidble2.NotificationSetupMode valueOf(java.lang.String)
okhttp3.CertificatePinner$Pin: boolean equals(java.lang.Object)
okhttp3.OkHttpClient: int -deprecated_callTimeoutMillis()
okhttp3.OkHttpClient$Builder: void setX509TrustManagerOrNull$okhttp(javax.net.ssl.X509TrustManager)
com.facebook.react.bridge.ReactMarker$FabricMarkerListener$-CC: void $default$logFabricMarker(com.facebook.react.bridge.ReactMarker$FabricMarkerListener,com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long,int)
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher: void notifyNativeReadCallback(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)
com.facebook.react.views.scroll.ReactScrollView: java.lang.String getOverflow()
com.facebook.react.uimanager.UIManagerModule: void prependUIBlock(com.facebook.react.uimanager.UIBlock)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
okhttp3.OkHttpClient$Builder: void setRouteDatabase$okhttp(okhttp3.internal.connection.RouteDatabase)
okhttp3.internal.http2.Http2Stream: void setWriteBytesMaximum$okhttp(long)
com.polidea.rxandroidble2.internal.connection.ImmediateSerializedBatchAckStrategy: io.reactivex.Observable apply(io.reactivex.Observable)
com.facebook.soloader.SoFileLoader: void loadBytes(java.lang.String,com.facebook.soloader.ElfByteChannel,int)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.views.image.ReactImageView: void setFadeDuration(int)
com.polidea.rxandroidble2.RxBleDeviceServices$3: android.bluetooth.BluetoothGattCharacteristic apply(android.bluetooth.BluetoothGattService)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
io.reactivex.Observable: io.reactivex.Maybe firstElement()
okhttp3.internal.connection.RealCall: okhttp3.EventListener getEventListener$okhttp()
com.facebook.react.bridge.LifecycleEventListener: void onHostResume()
androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response,okhttp3.internal.connection.Exchange)
com.facebook.react.bridge.ReactMarker: void clearMarkerListeners()
okhttp3.OkHttpClient$Builder: void setPingInterval$okhttp(int)
com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl_Factory: com.polidea.rxandroidble2.internal.scan.BackgroundScannerImpl_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
io.reactivex.Flowable: io.reactivex.Flowable startWith(java.lang.Iterable)
io.reactivex.Flowable: io.reactivex.Flowable cacheWithInitialCapacity(int)
io.reactivex.Observable: io.reactivex.Observable throttleWithTimeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(com.facebook.react.views.textinput.ReactEditText,int,int,int,int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isAccessibilityServiceEnabled(com.facebook.react.bridge.Callback)
okhttp3.Cache$Entry$Companion: Cache$Entry$Companion()
okhttp3.internal.connection.RealConnection: void noCoalescedConnections$okhttp()
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache_Factory: com.polidea.rxandroidble2.internal.cache.DeviceComponentCache_Factory create()
okhttp3.Cookie$Companion: Cookie$Companion()
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.bleplx.adapter.BleModule: void safeWriteDescriptorForDevice(com.bleplx.adapter.Descriptor,java.lang.String,java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
io.reactivex.Single: io.reactivex.Single subscribeOn(io.reactivex.Scheduler)
okhttp3.internal.ws.WebSocketExtensions: okhttp3.internal.ws.WebSocketExtensions copy$default(okhttp3.internal.ws.WebSocketExtensions,boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean,int,java.lang.Object)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getNestedScrollAxes()
com.facebook.react.uimanager.LayoutShadowNode: void setColumnGap(float)
com.facebook.react.views.scroll.ReactScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
io.reactivex.internal.util.ArrayListSupplier: io.reactivex.internal.util.ArrayListSupplier valueOf(java.lang.String)
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvideBluetoothGattFactory: android.bluetooth.BluetoothGatt provideBluetoothGatt(com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider)
com.polidea.rxandroidble2.LogOptions$Builder: com.polidea.rxandroidble2.LogOptions build()
io.reactivex.Flowable: int bufferSize()
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String dateFormat(double,boolean,boolean)
com.facebook.soloader.NativeLoaderToSoLoaderDelegate: NativeLoaderToSoLoaderDelegate()
com.facebook.soloader.NativeDepsUnpacker: byte[] readAllBytes(java.io.InputStream,int)
io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function3)
io.reactivex.Observable: io.reactivex.Observable concatArrayEager(io.reactivex.ObservableSource[])
okhttp3.internal.connection.RealCall: java.io.IOException callDone(java.io.IOException)
com.facebook.react.animated.NativeAnimatedModule: NativeAnimatedModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeLogBoxSpec: NativeLogBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.ConnectionSpec$Builder: java.lang.String[] getTlsVersions$okhttp()
io.reactivex.Single: io.reactivex.Single just(java.lang.Object)
com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl_Factory: com.polidea.rxandroidble2.internal.serialization.ClientOperationQueueImpl_Factory create(bleshadow.javax.inject.Provider)
okhttp3.internal.platform.android.ConscryptSocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
io.reactivex.Observable: io.reactivex.Observable timer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.internal.http.RetryAndFollowUpInterceptor: RetryAndFollowUpInterceptor(okhttp3.OkHttpClient)
com.facebook.react.bridge.CatalystInstanceImpl$1$1: CatalystInstanceImpl$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1)
io.reactivex.Observable: io.reactivex.Observable window(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
okhttp3.internal.concurrent.TaskQueue$execute$1: long runOnce()
okhttp3.internal.http2.Settings: void merge(okhttp3.internal.http2.Settings)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxHeightJNI(long)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.io.FileSystem getFileSystem$okhttp()
okhttp3.Response: okhttp3.Protocol -deprecated_protocol()
okhttp3.internal.http2.Http2Reader$ContinuationSource: int getPadding()
io.reactivex.Single: io.reactivex.Flowable concatWith(io.reactivex.SingleSource)
okhttp3.internal.cache.DiskLruCache$Editor: void commit()
okhttp3.internal.concurrent.TaskRunner$RealBackend: void coordinatorNotify(okhttp3.internal.concurrent.TaskRunner)
okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])
com.facebook.react.fabric.interop.InteropEventEmitter: InteropEventEmitter(com.facebook.react.bridge.ReactContext)
com.facebook.react.bridge.WritableMap: void putInt(java.lang.String,int)
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider access$1400(com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl)
com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator_Factory: com.polidea.rxandroidble2.internal.scan.InternalScanResultCreator newInstance(com.polidea.rxandroidble2.internal.util.ScanRecordParser,com.polidea.rxandroidble2.internal.scan.IsConnectableChecker)
io.reactivex.Flowable: io.reactivex.Flowable fromCallable(java.util.concurrent.Callable)
com.polidea.rxandroidble2.internal.serialization.RxBleThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
com.polidea.rxandroidble2.internal.serialization.ConnectionOperationQueueImpl_Factory: java.lang.Object get()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.internal.platform.Platform$Companion: java.util.List alpnProtocolNames(java.util.List)
com.bleplx.adapter.BleModule: void safeStartDeviceScan(java.util.UUID[],int,int,boolean,com.bleplx.adapter.OnEventCallback,com.bleplx.adapter.OnErrorCallback)
androidx.core.os.BundleApi18ImplKt: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Connection getConnection()
okhttp3.internal.cache2.Relay: boolean isClosed()
com.facebook.yoga.YogaNodeJNIBase: long measure(float,int,float,int)
okhttp3.Cache$Entry$Companion: Cache$Entry$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.cache2.Relay: okio.Source newSource()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.polidea.rxandroidble2.internal.connection.ThrowingIllegalOperationHandler: com.polidea.rxandroidble2.internal.BleIllegalOperationException handleMismatchData(android.bluetooth.BluetoothGattCharacteristic,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Single requestMtu(int)
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedViewConstants()
com.facebook.react.views.textinput.ReactTextInputManager: void showKeyboardOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getTypedExportedConstants()
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
io.reactivex.Flowable: io.reactivex.Flowable observeOn(io.reactivex.Scheduler,boolean,int)
okhttp3.CertificatePinner: okio.ByteString sha256Hash(java.security.cert.X509Certificate)
okhttp3.internal.concurrent.TaskRunner$Companion: TaskRunner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.polidea.rxandroidble2.helpers.AdvertisedServiceUUIDExtractor: java.util.Set toDistinctSet(java.util.UUID[])
okhttp3.internal.platform.android.SocketAdapter: boolean isSupported()
com.facebook.react.bridge.ReactContext: void onHostDestroy()
com.facebook.react.views.textinput.ReactEditText: void setContentSizeWatcher(com.facebook.react.views.textinput.ContentSizeWatcher)
com.polidea.rxandroidble2.internal.util.QueueReleasingEmitterWrapper: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthPercentJNI(long,float)
com.facebook.jni.UnknownCppException: UnknownCppException(java.lang.String)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])
androidx.core.os.LocaleListCompat$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
com.polidea.rxandroidble2.internal.RxBleLog: java.lang.String formatString(java.lang.String,java.lang.Object[])
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,int,boolean,boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.polidea.rxandroidble2.ConnectionParameters: int getSupervisionTimeout()
com.polidea.rxandroidble2.internal.operations.ServiceDiscoveryOperation: boolean startOperation(android.bluetooth.BluetoothGatt)
com.polidea.rxandroidble2.scan.ScanFilter: int hashCode()
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedViewConstants()
io.reactivex.Flowable: java.lang.Object blockingFirst()
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
com.polidea.rxandroidble2.internal.operations.ScanOperationApi18: boolean startScan(com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper,android.bluetooth.BluetoothAdapter$LeScanCallback)
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform findPlatform()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker_Factory: com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker_Factory create(bleshadow.javax.inject.Provider)
com.facebook.react.uimanager.UIManagerModule: void measure(int,com.facebook.react.bridge.Callback)
okhttp3.internal.connection.Exchange: void trackFailure(java.io.IOException)
com.polidea.rxandroidble2.ClientComponent: com.polidea.rxandroidble2.helpers.LocationServicesOkObservable locationServicesOkObservable()
com.facebook.soloader.UnpackingSoSource$DsoManifest: UnpackingSoSource$DsoManifest(com.facebook.soloader.UnpackingSoSource$Dso[])
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
okhttp3.internal.http2.Http2Connection: void access$setDegradedPongsReceived$p(okhttp3.internal.http2.Http2Connection,long)
com.facebook.react.devsupport.JSException: JSException(java.lang.String,java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.facebook.jni.IteratorHelper: IteratorHelper(java.util.Iterator)
io.reactivex.Flowable: io.reactivex.Flowable timestamp()
okhttp3.internal.http2.PushObserver: boolean onRequest(int,java.util.List)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator_Factory: com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator newInstance(io.reactivex.Scheduler)
com.facebook.react.bridge.CatalystInstanceImpl: void jniExtendNativeModules(java.util.Collection,java.util.Collection)
com.facebook.react.bridge.NativeModuleRegistry: void registerModules(com.facebook.react.bridge.NativeModuleRegistry)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
okhttp3.OkHttpClient$Builder: void setCallTimeout$okhttp(int)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] $values()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder pingInterval(long,java.util.concurrent.TimeUnit)
kotlin.random.Random$Default: java.lang.Object writeReplace()
com.polidea.rxandroidble2.helpers.ValueInterpreter: java.lang.String getStringValue(byte[],int)
com.facebook.react.modules.debug.DevSettingsModule: DevSettingsModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontWeight(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
io.reactivex.Flowable: io.reactivex.Flowable buffer(io.reactivex.Flowable,io.reactivex.functions.Function)
okhttp3.Challenge: java.lang.String -deprecated_scheme()
com.facebook.react.uimanager.BaseViewManager: void setPointerOver(android.view.View,boolean)
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi23_Factory: java.lang.Object get()
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.util.Date)
com.facebook.react.animated.NativeAnimatedModule: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
okhttp3.internal.tls.BasicTrustRootIndex: boolean equals(java.lang.Object)
com.facebook.react.modules.dialog.DialogModule: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.polidea.rxandroidble2.internal.ScanResultInterface: int getRssi()
com.facebook.soloader.SoLoader: void setSystemLoadLibraryWrapper(com.facebook.soloader.SystemLoadLibraryWrapper)
io.reactivex.Flowable: io.reactivex.Flowable switchMap0(io.reactivex.functions.Function,int,boolean)
com.polidea.rxandroidble2.internal.connection.MtuBasedPayloadSizeLimit_Factory: MtuBasedPayloadSizeLimit_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
io.reactivex.Single: io.reactivex.Single delaySubscription(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod valueOf(java.lang.String)
com.facebook.react.defaults.DefaultBindingsInstaller: DefaultBindingsInstaller()
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$5: boolean test(java.util.List)
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,int)
okhttp3.internal.http2.Http2Stream: okio.Timeout readTimeout()
okhttp3.internal.cache.DiskLruCache: void validateKey(java.lang.String)
com.facebook.react.ReactRootView: java.util.concurrent.atomic.AtomicInteger getState()
okhttp3.HttpUrl$Builder: void setEncodedPassword$okhttp(java.lang.String)
io.reactivex.Flowable: io.reactivex.Single sequenceEqual(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiPredicate,int)
com.facebook.soloader.DirectApkSoSource: DirectApkSoSource(java.io.File)
com.facebook.soloader.UnpackingSoSource$InputDso: com.facebook.soloader.UnpackingSoSource$Dso getDso()
io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function4)
okhttp3.RequestBody: okhttp3.RequestBody create(byte[],okhttp3.MediaType)
okhttp3.internal.concurrent.TaskQueue: java.lang.String getName$okhttp()
com.facebook.react.views.modal.ReactModalHostManager: ReactModalHostManager()
com.facebook.soloader.SoLoader: java.io.File getSoFile(java.lang.String)
com.facebook.fresco.ui.common.ImageLoadStatus: com.facebook.fresco.ui.common.ImageLoadStatus valueOf(java.lang.String)
com.polidea.rxandroidble2.RxBleConnection$LongWriteOperationBuilder: com.polidea.rxandroidble2.RxBleConnection$LongWriteOperationBuilder setBytes(byte[])
okhttp3.internal.tls.BasicCertificateChainCleaner: int hashCode()
com.facebook.react.bridge.DynamicFromArray: DynamicFromArray()
okhttp3.internal.connection.ConnectionSpecSelector: ConnectionSpecSelector(java.util.List)
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] values()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: java.lang.String getName()
com.polidea.rxandroidble2.internal.util.ScanRecordParser_Factory$InstanceHolder: com.polidea.rxandroidble2.internal.util.ScanRecordParser_Factory access$000()
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexShrinkJNI(long)
okhttp3.internal.http2.Http2Stream$FramingSink: void flush()
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation[] values()
io.reactivex.Observable: io.reactivex.Observable scan(java.lang.Object,io.reactivex.functions.BiFunction)
com.polidea.rxandroidble2.internal.connection.ConnectorImpl: io.reactivex.ObservableSource lambda$prepareConnection$2(com.polidea.rxandroidble2.ConnectionSetup)
com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory$1$1: LocationServicesOkObservableApi23Factory$1$1(com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory$1,io.reactivex.ObservableEmitter)
okhttp3.internal.cache.DiskLruCache$Entry: void setCurrentEditor$okhttp(okhttp3.internal.cache.DiskLruCache$Editor)
com.facebook.react.bridge.JSIModule: void onCatalystInstanceDestroy()
io.reactivex.Flowable: io.reactivex.disposables.Disposable forEach(io.reactivex.functions.Consumer)
okhttp3.internal.platform.android.CloseGuard: CloseGuard(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignContent(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int,java.util.concurrent.Callable,boolean)
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] values()
okio.AsyncTimeout: java.lang.Object withTimeout(kotlin.jvm.functions.Function0)
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl$1: com.polidea.rxandroidble2.internal.connection.ConnectionComponent$Builder get()
io.reactivex.Single: io.reactivex.Single retry(io.reactivex.functions.Predicate)
com.polidea.rxandroidble2.internal.connection.ConnectionComponent: com.polidea.rxandroidble2.internal.operations.ConnectOperation connectOperation()
com.facebook.react.bridge.JsonWriterHelper: void objectValue(android.util.JsonWriter,java.lang.Object)
com.facebook.react.modules.debug.AnimationsDebugModule: void invalidate()
com.facebook.react.bridge.ReactContext: void addWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,okhttp3.MediaType,byte[],int,int,int,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: java.lang.String getName()
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache_Factory$InstanceHolder: DeviceComponentCache_Factory$InstanceHolder()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothAdapterFactory: android.bluetooth.BluetoothAdapter get()
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setScrollWatcher(com.facebook.react.views.textinput.ScrollWatcher)
com.facebook.react.modules.core.TimingModule: void onHeadlessJsTaskStart(int)
okhttp3.Challenge: java.lang.String toString()
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder hostOnlyDomain(java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowOffset(com.facebook.react.bridge.ReadableMap)
okhttp3.internal.cache.CacheStrategy$Factory: boolean isFreshnessLifetimeHeuristic()
okhttp3.internal.http2.Http2Stream$FramingSink: Http2Stream$FramingSink(okhttp3.internal.http2.Http2Stream,boolean)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit)
com.facebook.react.fabric.BindingImpl: void renderTemplateToSurface(int,java.lang.String)
io.reactivex.Single: io.reactivex.Single timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.internal.http2.Hpack: okio.ByteString checkLowercase(okio.ByteString)
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(com.facebook.react.views.modal.ReactModalHostView)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectable(com.facebook.react.views.text.ReactTextView,boolean)
okhttp3.Cache$urls$1: void remove()
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
okhttp3.MultipartReader: okhttp3.MultipartReader$PartSource access$getCurrentPart$p(okhttp3.MultipartReader)
okhttp3.JavaNetCookieJar: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.soloader.UnpackingSoSource$InputDsoStream: java.lang.String getFileName()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToStart(boolean)
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.RealConnection getConnection$okhttp()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$11$1: void run()
androidx.appcompat.app.AppCompatActivity: boolean onSupportNavigateUp()
okhttp3.Address: okhttp3.Dns -deprecated_dns()
okhttp3.OkHttpClient: java.net.Proxy proxy()
com.facebook.react.bridge.JavaJSExecutor: void loadBundle(java.lang.String)
io.reactivex.Single: io.reactivex.Flowable mergeDelayError(java.lang.Iterable)
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache: boolean isEmpty()
okhttp3.Interceptor$Companion$invoke$1: Interceptor$Companion$invoke$1(kotlin.jvm.functions.Function1)
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasBaselineFuncJNI(long,boolean)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalMap()
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
okhttp3.OkHttpClient$Builder: java.util.List getNetworkInterceptors$okhttp()
okhttp3.internal.platform.BouncyCastlePlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.CertificatePinner$check$1: CertificatePinner$check$1(okhttp3.CertificatePinner,java.util.List,java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexShrink(float)
com.polidea.rxandroidble2.scan.ScanFilter: void writeToParcel(android.os.Parcel,int)
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(int,long,java.util.concurrent.TimeUnit)
com.facebook.yoga.YogaNative: void jni_YGConfigSetErrataJNI(long,int)
com.facebook.soloader.ElfByteChannel: com.facebook.soloader.ElfByteChannel position(long)
com.facebook.react.uimanager.UIManagerModule: void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
io.reactivex.Observable: io.reactivex.Observable doOnLifecycle(io.reactivex.functions.Consumer,io.reactivex.functions.Action)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.soloader.MinElf: int getu16(com.facebook.soloader.ElfByteChannel,java.nio.ByteBuffer,long)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.polidea.rxandroidble2.internal.util.CheckerScanPermission: CheckerScanPermission(com.polidea.rxandroidble2.internal.util.CheckerPermission,java.lang.String[][])
okhttp3.internal.platform.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.polidea.rxandroidble2.scan.ScanSettings$Builder: com.polidea.rxandroidble2.internal.scan.ExternalScanSettingsExtension$Builder setShouldCheckLocationServicesState(boolean)
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind[] values()
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSource getSource()
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object setValue(java.lang.Object)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
okio.Timeout: long timeoutNanos()
okhttp3.internal.http2.Http2Writer: void settings(okhttp3.internal.http2.Settings)
com.facebook.react.modules.image.ImageLoaderModule: void onHostDestroy()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.drawer.ReactDrawerLayout)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.List findMatchingRule(java.util.List)
com.polidea.rxandroidble2.internal.util.CheckerPermission_Factory: com.polidea.rxandroidble2.internal.util.CheckerPermission newInstance(android.content.Context)
com.facebook.react.bridge.ActivityEventListener: void onNewIntent(android.content.Intent)
com.polidea.rxandroidble2.exceptions.BleCharacteristicNotFoundException: BleCharacteristicNotFoundException(java.util.UUID)
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
io.reactivex.Flowable: void subscribe(io.reactivex.FlowableSubscriber)
okhttp3.Challenge: java.nio.charset.Charset -deprecated_charset()
okhttp3.internal.ws.WebSocketExtensions: java.lang.Integer component4()
io.reactivex.Observable: io.reactivex.Observable takeWhile(io.reactivex.functions.Predicate)
com.polidea.rxandroidble2.internal.QueueOperation$1: QueueOperation$1(com.polidea.rxandroidble2.internal.QueueOperation,com.polidea.rxandroidble2.internal.serialization.QueueReleaseInterface)
com.facebook.react.uimanager.UIManagerModule: void profileNextBatch()
com.polidea.rxandroidble2.internal.RxBleLog: void println(int,java.lang.String,java.lang.String)
okhttp3.internal.cache.DiskLruCache: DiskLruCache(okhttp3.internal.io.FileSystem,java.io.File,int,int,long,okhttp3.internal.concurrent.TaskRunner)
com.polidea.rxandroidble2.internal.scan.IsConnectableCheckerApi26: IsConnectableCheckerApi26()
okhttp3.internal.platform.android.AndroidLogHandler: void close()
com.facebook.react.uimanager.UIManagerModule: void setChildren(int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getCommandsMap()
androidx.activity.ComponentActivity: void removeOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyAndPropagateToDescendantsJNI(long)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
com.polidea.rxandroidble2.internal.DeviceModule$1: void onConnectionStateChange(com.polidea.rxandroidble2.RxBleConnection$RxBleConnectionState)
io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,int)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder domain(java.lang.String)
com.facebook.react.modules.blob.FileReaderModule: FileReaderModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
okhttp3.internal.platform.AndroidPlatform$Companion: boolean isSupported()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
androidx.activity.ComponentActivity: java.lang.Object onRetainNonConfigurationInstance()
com.facebook.react.turbomodule.core.NativeModuleSoLoader: void access$setSoLibraryLoaded$cp(boolean)
okhttp3.internal.cache.DiskLruCache$Editor: DiskLruCache$Editor(okhttp3.internal.cache.DiskLruCache,okhttp3.internal.cache.DiskLruCache$Entry)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.polidea.rxandroidble2.internal.connection.NativeCallbackDispatcher: void notifyNativeDescriptorReadCallback(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)
com.facebook.react.modules.statusbar.StatusBarModule: void setStyle(java.lang.String)
com.facebook.soloader.Elf64_Shdr: Elf64_Shdr()
okhttp3.internal.connection.RealConnection: okhttp3.Request createTunnelRequest()
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.bleplx.adapter.BleModule: void stopDeviceScan()
io.reactivex.Single: io.reactivex.Maybe toMaybe()
com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl$1: DaggerClientComponent$DeviceComponentImpl$1(com.polidea.rxandroidble2.DaggerClientComponent$DeviceComponentImpl)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.io.File)
com.polidea.rxandroidble2.RxBleDeviceServices$1: boolean test(java.lang.Object)
okhttp3.internal.Util: int indexOf(java.lang.String[],java.lang.String,java.util.Comparator)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
com.facebook.hermes.intl.IPlatformCollator$Usage: com.facebook.hermes.intl.IPlatformCollator$Usage valueOf(java.lang.String)
androidx.core.util.ObjectsCompat$Api19Impl: boolean equals(java.lang.Object,java.lang.Object)
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnection getConnectionToCancel()
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: NativeSegmentFetcherSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealCall$timeout$1 access$getTimeout$p(okhttp3.internal.connection.RealCall)
com.polidea.rxandroidble2.internal.logger.LoggerUtil: void logOperationFinished(com.polidea.rxandroidble2.internal.operations.Operation,long,long)
com.facebook.soloader.SysUtil: void fsyncRecursive(java.io.File)
com.facebook.react.fabric.SurfaceHandlerBinding: void startNative()
okhttp3.Cache$Companion: okhttp3.Headers varyHeaders(okhttp3.Response)
okhttp3.Response$Builder: void setSentRequestAtMillis$okhttp(long)
okhttp3.internal.cache.DiskLruCache$Entry: boolean getReadable$okhttp()
androidx.drawerlayout.widget.DrawerLayout: float getDrawerElevation()
com.facebook.react.ReactNativeHost: com.facebook.react.devsupport.interfaces.RedBoxHandler getRedBoxHandler()
com.bleplx.adapter.BleModule: com.bleplx.adapter.Descriptor getDescriptor(int,java.lang.String)
okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)
com.polidea.rxandroidble2.ClientComponent$ClientModule: android.bluetooth.BluetoothManager provideBluetoothManager(android.content.Context)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,int)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.imagepipeline.platform.PreverificationHelper: PreverificationHelper()
com.polidea.rxandroidble2.internal.operations.MtuRequestOperation: io.reactivex.Single getCallback(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback)
com.polidea.rxandroidble2.LogOptions$Builder: com.polidea.rxandroidble2.LogOptions$Builder setShouldLogAttributeValues(java.lang.Boolean)
com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult: android.bluetooth.BluetoothDevice getBluetoothDevice()
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType[] values()
com.himelbrand.ble.peripheral.RNBLEModule: java.lang.String getName()
okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion: AndroidCertificateChainCleaner$Companion()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationServicesStatusFactory: java.lang.Object get()
okhttp3.Protocol: java.lang.String access$getProtocol$p(okhttp3.Protocol)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$4: void doInBackgroundGuarded(java.lang.Void[])
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
com.facebook.soloader.ApplicationSoSource: boolean checkAndMaybeUpdate()
com.facebook.react.views.textinput.ReactTextInputManager: void setFontWeight(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.modules.core.TimingModule: void onHeadlessJsTaskFinish(int)
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter$6: boolean test(java.lang.Object)
com.bleplx.adapter.BleModule: io.reactivex.ObservableSource lambda$safeConnectToDevice$27(int,com.polidea.rxandroidble2.RxBleConnection)
okhttp3.internal.ws.WebSocketExtensions: okhttp3.internal.ws.WebSocketExtensions copy(boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean)
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$2: void run()
io.reactivex.Single: io.reactivex.Single map(io.reactivex.functions.Function)
com.bleplx.adapter.BleModule: com.bleplx.adapter.Device getDeviceById(java.lang.String)
io.reactivex.Single: io.reactivex.Flowable concatEager(java.lang.Iterable)
okhttp3.internal.tls.OkHostnameVerifier: java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int)
okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()
io.reactivex.Flowable: java.lang.Iterable blockingMostRecent(java.lang.Object)
com.polidea.rxandroidble2.internal.util.LocationServicesStatus: boolean isLocationPermissionOk()
okhttp3.internal.cache.DiskLruCache$Editor: void detach$okhttp()
okhttp3.internal.cache.DiskLruCache: long getMaxSize()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSBundleLoader(com.facebook.react.bridge.JSBundleLoader)
com.polidea.rxandroidble2.internal.operations.DescriptorReadOperation_Factory: DescriptorReadOperation_Factory(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.polidea.rxandroidble2.internal.DeviceModule_ProvidesDisconnectTimeoutConfFactory: DeviceModule_ProvidesDisconnectTimeoutConfFactory(bleshadow.javax.inject.Provider)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute valueOf(java.lang.String)
okhttp3.internal.http2.StreamResetException: StreamResetException(okhttp3.internal.http2.ErrorCode)
okhttp3.CacheControl$Companion: int indexOfElement(java.lang.String,java.lang.String,int)
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(long,io.reactivex.functions.Action,io.reactivex.BackpressureOverflowStrategy)
okhttp3.internal.platform.Android10Platform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi24: ScanPreconditionsVerifierApi24(com.polidea.rxandroidble2.internal.scan.ScanPreconditionsVerifierApi18,io.reactivex.Scheduler)
com.facebook.fbreact.specs.NativeModalManagerSpec: java.lang.String getName()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: ReadableMapBuffer(com.facebook.jni.HybridData)
com.bleplx.adapter.BleModule: void lambda$safeStartDeviceScan$19(com.bleplx.adapter.OnEventCallback,com.polidea.rxandroidble2.scan.ScanResult)
com.polidea.rxandroidble2.RxBleClientImpl: io.reactivex.Observable initializeScan(java.util.UUID[])
com.polidea.rxandroidble2.internal.SingleResponseOperation: boolean startOperation(android.bluetooth.BluetoothGatt)
com.polidea.rxandroidble2.internal.connection.ConnectionModule_MinimumMtuFactory: com.polidea.rxandroidble2.internal.connection.ConnectionModule_MinimumMtuFactory create()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.List splitDomain(java.lang.String)
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker$ZipBackedInputDsoIterator: ExtractFromZipSoSource$ZipUnpacker$ZipBackedInputDsoIterator(com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion: AndroidCertificateChainCleaner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.polidea.rxandroidble2.internal.scan.EmulatedScanFilterMatcher: boolean matches(com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult)
okhttp3.internal.ws.RealWebSocket: boolean send(okio.ByteString,int)
okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()
com.bleplx.BlePlxModule: void writeDescriptorForCharacteristic(int,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContextIfActiveOrWarn()
androidx.appcompat.widget.AppCompatButton: void setFilters(android.text.InputFilter[])
com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvidesOperationTimeoutConfFactory: com.polidea.rxandroidble2.internal.connection.ConnectionModule_ProvidesOperationTimeoutConfFactory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.polidea.rxandroidble2.internal.DeviceModule_ProvidesConnectTimeoutConfFactory: com.polidea.rxandroidble2.internal.operations.TimeoutConfiguration providesConnectTimeoutConf(io.reactivex.Scheduler)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$2: void onSubscribe(io.reactivex.disposables.Disposable)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.polidea.rxandroidble2.internal.logger.LoggerUtilBluetoothServices: java.lang.String prepareServicesDescription(com.polidea.rxandroidble2.RxBleDeviceServices,android.bluetooth.BluetoothDevice)
com.facebook.soloader.SoLoader: void init(android.content.Context,int,com.facebook.soloader.SoFileLoader,java.lang.String[])
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.Class)
com.facebook.soloader.UnpackingSoSource$Unpacker: com.facebook.soloader.UnpackingSoSource$DsoManifest getDsoManifest()
com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker_Factory: com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker get()
com.facebook.react.bridge.CatalystInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybeDelayError(io.reactivex.functions.Function,boolean)
io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function5)
okhttp3.internal.http2.Hpack$Reader: java.util.List getAndResetHeaderList()
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.network.NetworkingModule: void removeUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketExtensions access$getExtensions$p(okhttp3.internal.ws.RealWebSocket)
kotlin.internal.jdk8.JDK8PlatformImplementations: JDK8PlatformImplementations()
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String createInvokeExceptionMessage(java.lang.String)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$1: CharacteristicLongWriteOperation$1(com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation,java.nio.ByteBuffer,int)
com.facebook.react.turbomodule.core.TurboModuleInteropUtils: java.lang.reflect.Method[] getMethodsFromModule(com.facebook.react.bridge.NativeModule)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactScrollView,int,float)
com.polidea.rxandroidble2.RxBleConnection: com.polidea.rxandroidble2.RxBleConnection$LongWriteOperationBuilder createNewLongWriteBuilder()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomDirectEventTypeConstants()
okhttp3.Response: okhttp3.Headers -deprecated_headers()
com.facebook.react.uimanager.ViewGroupManager: void removeAllViews(android.view.ViewGroup)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexJNI(long)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getNativeModulesQueueThreadSpec()
okhttp3.HttpUrl$Builder: void setHost$okhttp(java.lang.String)
okhttp3.Dispatcher: okhttp3.internal.connection.RealCall$AsyncCall findExistingCallWithHost(java.lang.String)
com.polidea.rxandroidble2.internal.logger.LoggerUtil: java.lang.String getUuidSetToLog(java.util.Set)
com.polidea.rxandroidble2.helpers.ByteArrayBatchObservable$1: void accept(java.lang.Object)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
com.polidea.rxandroidble2.internal.RxBleLog: void d(java.lang.String,java.lang.Object[])
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(android.view.ViewGroup)
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: com.facebook.soloader.ExtractFromZipSoSource$ZipDso[] access$100(com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker)
okhttp3.internal.ws.WebSocketExtensions: java.lang.String toString()
com.polidea.rxandroidble2.internal.util.CheckerConnectPermission: boolean isConnectRuntimePermissionGranted()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext,java.util.concurrent.Executor)
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean,int)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper rxBleAdapterWrapper()
com.facebook.soloader.DirectApkSoSource: java.lang.String toString()
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: java.util.List invoke()
com.polidea.rxandroidble2.internal.connection.MtuWatcher: void onConnectionUnsubscribed()
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder hostnameVerifier(javax.net.ssl.HostnameVerifier)
io.reactivex.Observable: io.reactivex.Observable switchMapDelayError(io.reactivex.functions.Function,int)
okhttp3.internal.http2.Huffman: void encode(okio.ByteString,okio.BufferedSink)
io.reactivex.Observable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate,io.reactivex.functions.Consumer)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.polidea.rxandroidble2.helpers.LocationServicesOkObservable_Factory: com.polidea.rxandroidble2.helpers.LocationServicesOkObservable newInstance(io.reactivex.Observable)
com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper: java.util.Set getBondedDevices()
io.reactivex.Flowable: io.reactivex.Flowable doOnEach(io.reactivex.functions.Consumer)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
io.reactivex.Flowable: io.reactivex.parallel.ParallelFlowable parallel(int)
okhttp3.Dispatcher: void setMaxRequests(int)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
com.polidea.rxandroidble2.internal.ScanResultInterface: com.polidea.rxandroidble2.scan.ScanCallbackType getScanCallbackType()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setNestedScrollingEnabled(boolean)
com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentBuilder: com.polidea.rxandroidble2.DaggerClientComponent$ConnectionComponentBuilder operationTimeout(com.polidea.rxandroidble2.Timeout)
okhttp3.MultipartReader: MultipartReader(okio.BufferedSource,java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager: boolean shouldRouteTurboModulesThroughLegacyModuleInterop()
com.polidea.rxandroidble2.internal.operations.DescriptorReadOperation_Factory: com.polidea.rxandroidble2.internal.operations.DescriptorReadOperation_Factory create(bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider,bleshadow.javax.inject.Provider)
com.facebook.react.modules.intent.IntentModule: void sendOSIntent(android.content.Intent,java.lang.Boolean)
okhttp3.Response$Builder: okhttp3.Response$Builder cacheResponse(okhttp3.Response)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: io.reactivex.Observable withDisconnectionHandling(com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$Output)
io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(io.reactivex.Scheduler)
okhttp3.internal.http2.Http2Connection$Companion: okhttp3.internal.http2.Settings getDEFAULT_SETTINGS()
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl: io.reactivex.Observable queue(com.polidea.rxandroidble2.RxBleCustomOperation)
okhttp3.OkHttpClient$Companion: java.util.List getDEFAULT_CONNECTION_SPECS$okhttp()
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureDrop(io.reactivex.functions.Consumer)
io.reactivex.Observable: io.reactivex.Observable withLatestFrom(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function3)
com.bleplx.adapter.BleModule: void cancelDeviceConnection(java.lang.String,com.bleplx.adapter.OnSuccessCallback,com.bleplx.adapter.OnErrorCallback)
com.polidea.rxandroidble2.RxBleDeviceServices$6: android.bluetooth.BluetoothGattCharacteristic apply(android.bluetooth.BluetoothGattService)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback$2: void onCharacteristicChanged(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic)
com.polidea.rxandroidble2.RxBleConnection: int getMtu()
io.reactivex.Single: io.reactivex.Single observeOn(io.reactivex.Scheduler)
com.polidea.rxandroidble2.internal.util.BluetoothManagerWrapper_Factory: com.polidea.rxandroidble2.internal.util.BluetoothManagerWrapper_Factory create(bleshadow.javax.inject.Provider)
io.reactivex.Observable: io.reactivex.Observable throttleWithTimeout(long,java.util.concurrent.TimeUnit)
okhttp3.Cache$Entry: Cache$Entry(okio.Source)
com.facebook.react.devsupport.JSCHeapCapture: void captureHeap(java.lang.String,com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$8: byte[] apply(com.polidea.rxandroidble2.internal.util.ByteAssociation)
io.reactivex.Single: io.reactivex.Observable toObservable()
com.polidea.rxandroidble2.internal.util.RxBleAdapterWrapper: android.bluetooth.BluetoothDevice getRemoteDevice(java.lang.String)
okhttp3.Response: okhttp3.CacheControl cacheControl()
com.polidea.rxandroidble2.internal.util.DisposableUtil: io.reactivex.observers.DisposableSingleObserver disposableSingleObserverFromEmitter(io.reactivex.SingleEmitter)
com.polidea.rxandroidble2.internal.connection.ServiceDiscoveryManager$1: void accept(io.reactivex.disposables.Disposable)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setIncludeFontPadding(boolean)
com.polidea.rxandroidble2.internal.connection.RxBleGattCallback: io.reactivex.Observable getOnServicesDiscovered()
okhttp3.MultipartBody$Part$Companion: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String)
okhttp3.internal.connection.RealCall: void timeoutEarlyExit()
okhttp3.internal.http.HttpHeaders: java.util.List parseChallenges(okhttp3.Headers,java.lang.String)
com.polidea.rxandroidble2.internal.util.CheckerConnectPermission: CheckerConnectPermission(com.polidea.rxandroidble2.internal.util.CheckerPermission,java.lang.String[][])
com.facebook.react.bridge.JSCJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.modules.statusbar.StatusBarModule: java.util.Map getTypedExportedConstants()
okhttp3.ConnectionSpec: boolean -deprecated_supportsTlsExtensions()
com.polidea.rxandroidble2.internal.RxBleLog: boolean isAtLeast(int)
io.reactivex.Observable: io.reactivex.Observable compose(io.reactivex.ObservableTransformer)
com.facebook.react.views.image.ReactImageView: void setOverlayColor(int)
okhttp3.internal.http2.Http2Connection: long getWriteBytesTotal()
com.facebook.react.bridge.BaseJavaModule: void onCatalystInstanceDestroy()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$Listener getListener$okhttp()
com.facebook.react.bridge.JavaOnlyArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
io.reactivex.Flowable: io.reactivex.Flowable startWith(java.lang.Object)
okhttp3.Cookie$Companion: okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: boolean isDestroyed()
com.facebook.react.devsupport.HMRClient: void registerBundle(java.lang.String)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1: okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket)
okhttp3.OkHttpClient: okhttp3.internal.connection.RouteDatabase getRouteDatabase()
com.facebook.react.bridge.WritableNativeMap: WritableNativeMap()
com.facebook.react.uimanager.BaseViewManager: void setScaleY(android.view.View,float)
io.reactivex.Flowable: io.reactivex.Flowable buffer(java.util.concurrent.Callable)
com.polidea.rxandroidble2.internal.util.LocationServicesStatusApi23: boolean isLocationPermissionOk()
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImageLeft(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.fbreact.specs.NativeDevMenuSpec: java.lang.String getName()
io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,int,io.reactivex.Scheduler)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideFinalizationCloseableFactory: com.polidea.rxandroidble2.ClientComponent$ClientComponentFinalizer provideFinalizationCloseable(java.util.concurrent.ExecutorService,io.reactivex.Scheduler,java.util.concurrent.ExecutorService)
io.reactivex.Observable: java.lang.Object blockingFirst()
okhttp3.internal.http.HttpHeaders: boolean startsWith(okio.Buffer,byte)
okhttp3.internal.http.StatusLine$Companion: StatusLine$Companion()
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void enable()
com.facebook.react.views.image.ReactImageManager: void setProgressiveRenderingEnabled(com.facebook.react.views.image.ReactImageView,boolean)
okhttp3.internal.http2.Http2Stream$StreamTimeout: void timedOut()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.polidea.rxandroidble2.helpers.ValueInterpreter: int unsignedByteToInt(byte)
okhttp3.internal.http2.Http2Reader$Handler: void windowUpdate(int,long)
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(com.facebook.jni.DestructorThread$1)
okhttp3.internal.cache.DiskLruCache$Entry: long[] getLengths$okhttp()
com.facebook.react.views.scroll.ReactScrollView: void setEndFillColor(int)
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason valueOf(java.lang.String)
com.polidea.rxandroidble2.internal.logger.LoggerUtil: void logCallback(java.lang.String,android.bluetooth.BluetoothGatt,int,android.bluetooth.BluetoothGattDescriptor,boolean)
okhttp3.Dispatcher: void cancelAll()
com.bleplx.adapter.BleModule: void lambda$safeMonitorCharacteristicForDevice$42(com.bleplx.adapter.utils.SafeExecutor,java.lang.String)
com.facebook.soloader.SoLoader: int getLoadedLibrariesCount()
io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,io.reactivex.Scheduler)
com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider_Factory: com.polidea.rxandroidble2.internal.connection.BluetoothGattProvider get()
io.reactivex.Observable: io.reactivex.observables.ConnectableObservable publish()
okhttp3.internal.ws.WebSocketWriter: void writeMessageFrame(int,okio.ByteString)
com.facebook.react.bridge.ReactContext: void addLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothManagerFactory: ClientComponent_ClientModule_ProvideBluetoothManagerFactory(bleshadow.javax.inject.Provider)
io.reactivex.Single: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer)
okhttp3.HttpUrl: int pathSize()
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.bridge.DynamicFromMap: DynamicFromMap()
com.bleplx.adapter.BleModule: void safeMonitorCharacteristicForDevice(com.bleplx.adapter.Characteristic,java.lang.String,java.lang.String,com.bleplx.adapter.OnEventCallback,com.bleplx.adapter.OnErrorCallback)
com.facebook.drawee.view.DraweeView: void setExtraData(java.lang.Object)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateConstructStart(java.lang.String,int)
com.polidea.rxandroidble2.RxBleAdapterStateObservable$BleAdapterState: java.lang.String toString()
okhttp3.OkHttpClient: void verifyClientState()
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.animation.ValueAnimator getFlingAnimator()
com.polidea.rxandroidble2.ClientComponent$ClientModule: boolean provideIsNearbyPermissionNeverForLocation(android.content.Context)
com.polidea.rxandroidble2.internal.connection.RxBleConnectionImpl$2: java.lang.Object apply(java.lang.Object)
com.facebook.react.uimanager.UIManagerModule: android.view.View resolveView(int)
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
com.facebook.react.bridge.ReadableNativeArray: java.util.ArrayList toArrayList()
com.polidea.rxandroidble2.internal.connection.DisconnectionRouter: void onGattConnectionStateException(com.polidea.rxandroidble2.exceptions.BleGattException)
com.polidea.rxandroidble2.scan.ScanFilter: android.os.ParcelUuid getServiceSolicitationUuidMask()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
com.facebook.fbreact.specs.NativeImageEditorSpec: NativeImageEditorSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform access$findPlatform(okhttp3.internal.platform.Platform$Companion)
com.facebook.soloader.ElfFileChannel: int read(java.nio.ByteBuffer)
com.polidea.rxandroidble2.internal.scan.ScanSetupBuilderImplApi21_Factory: java.lang.Object get()
com.polidea.rxandroidble2.exceptions.BleGattCannotStartException: BleGattCannotStartException(android.bluetooth.BluetoothGatt,com.polidea.rxandroidble2.exceptions.BleGattOperationType)
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: Http2Connection$writeWindowUpdateLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,long)
com.polidea.rxandroidble2.scan.ScanFilter: boolean matchesPartialData(byte[],byte[],byte[])
com.facebook.react.bridge.ProxyJavaScriptExecutor: void close()
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack()
com.facebook.react.uimanager.BaseViewManager: void setRole(android.view.View,java.lang.String)
com.facebook.react.bridge.ReactCxxErrorHandler: void handleError(java.lang.String)
io.reactivex.Single: io.reactivex.Flowable concat(org.reactivestreams.Publisher)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignSelf(java.lang.String)
com.polidea.rxandroidble2.ClientComponent$ClientModule$1: ClientComponent$ClientModule$1(java.util.concurrent.ExecutorService,io.reactivex.Scheduler,java.util.concurrent.ExecutorService)
okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1: int compare(java.lang.Object,java.lang.Object)
io.reactivex.Flowable: io.reactivex.Flowable buffer(java.util.concurrent.Callable,java.util.concurrent.Callable)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexDirection(java.lang.String)
okhttp3.internal.http2.Header: int hashCode()
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.Exchange getInterceptorScopedExchange$okhttp()
com.polidea.rxandroidble2.scan.IsConnectable: com.polidea.rxandroidble2.scan.IsConnectable[] values()
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.ModuleHolder: boolean isCxxModule()
io.reactivex.Flowable: io.reactivex.Flowable distinctUntilChanged(io.reactivex.functions.BiPredicate)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThread: void quitSynchronous()
com.facebook.soloader.DirectorySoSource: java.lang.String[] getLibraryDependencies(java.lang.String)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
okhttp3.internal.http2.Http2: java.lang.String frameLog(boolean,int,int,int,int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
okhttp3.internal.Util: java.util.List toImmutableList(java.util.List)
okhttp3.internal.http2.Settings: int size()
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideLocationServicesOkObservableFactory: io.reactivex.Observable provideLocationServicesOkObservable(int,com.polidea.rxandroidble2.internal.util.LocationServicesOkObservableApi23Factory)
com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothInteractionSchedulerFactory: com.polidea.rxandroidble2.ClientComponent_ClientModule_ProvideBluetoothInteractionSchedulerFactory create(bleshadow.javax.inject.Provider)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionJNI(long,int,float)
okhttp3.MultipartBody$Part$Companion: okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody)
io.reactivex.Flowable: io.reactivex.Flowable materialize()
okhttp3.internal.connection.RouteException: void addConnectException(java.io.IOException)
com.facebook.react.bridge.CatalystInstance: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.views.text.ReactTextViewManager: boolean needsCustomLayoutForChildren()
com.polidea.rxandroidble2.internal.scan.ScanRecordImplNativeWrapper: int getAdvertiseFlags()
okhttp3.MediaType: boolean equals(java.lang.Object)
androidx.appcompat.widget.DropDownListView$Api33Impl: void setSelectedChildViewEnabled(android.widget.AbsListView,boolean)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
okhttp3.internal.http.StatusLine$Companion: okhttp3.internal.http.StatusLine parse(java.lang.String)
com.polidea.rxandroidble2.scan.BackgroundScanner: java.util.List onScanResultReceived(android.content.Intent)
io.reactivex.Single: io.reactivex.Single doAfterSuccess(io.reactivex.functions.Consumer)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSize(int)
com.polidea.rxandroidble2.scan.ScanFilter$1: com.polidea.rxandroidble2.scan.ScanFilter[] newArray(int)
okhttp3.Authenticator$Companion: Authenticator$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.facebook.react.modules.network.NetworkingModule: boolean shouldDispatch(long,long)
com.facebook.soloader.ElfZipFileChannel: com.facebook.soloader.ElfByteChannel truncate(long)
okhttp3.Credentials: java.lang.String basic$default(java.lang.String,java.lang.String,java.nio.charset.Charset,int,java.lang.Object)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.facebook.yoga.YogaNative: long jni_YGNodeNewWithConfigJNI(long)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
com.facebook.react.bridge.RuntimeExecutor: RuntimeExecutor(com.facebook.jni.HybridData)
okhttp3.internal.cache.FaultHidingSink: void write(okio.Buffer,long)
com.facebook.react.views.scroll.ReactScrollViewManager: void setShowsVerticalScrollIndicator(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.views.scroll.ReactScrollView: void setBorderStyle(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlign(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
io.reactivex.Flowable: io.reactivex.Single singleOrError()
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
okhttp3.HttpUrl$Builder$Companion: int access$parsePort(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
okhttp3.internal.connection.RealCall: boolean retryAfterFailure()
com.facebook.soloader.SoLoader: boolean loadLibrary(java.lang.String,int)
com.facebook.soloader.SoLoader: java.lang.String makeNonZipPath(java.lang.String)
okhttp3.CipherSuite: java.lang.String toString()
io.reactivex.Single: io.reactivex.Single doFinally(io.reactivex.functions.Action)
com.facebook.jni.UnknownCppException: UnknownCppException()
com.polidea.rxandroidble2.internal.operations.DisconnectOperation: io.reactivex.Single disconnectIfRequired(android.bluetooth.BluetoothGatt)
com.polidea.rxandroidble2.internal.operations.CharacteristicLongWriteOperation$4: CharacteristicLongWriteOperation$4(android.bluetooth.BluetoothGattCharacteristic)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLetterSpacing(float)
androidx.core.os.BundleApi21ImplKt: void putSizeF(android.os.Bundle,java.lang.String,android.util.SizeF)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: void write(okio.Buffer,long)
com.ghostcommv2.MainApplication: void onCreate()
okhttp3.internal.ws.RealWebSocket: okhttp3.Request request()
com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl: bleshadow.javax.inject.Provider access$1000(com.polidea.rxandroidble2.DaggerClientComponent$ClientComponentImpl)
com.facebook.react.bridge.JavaOnlyMap: boolean getBoolean(java.lang.String)
com.polidea.rxandroidble2.internal.scan.ScanSettingsEmulator$3$2: java.lang.String apply(com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult)
com.polidea.rxandroidble2.internal.operations.DisconnectOperation$1: void onError(java.lang.Throwable)
com.facebook.react.modules.core.DeviceEventManagerModule: void emitHardwareBackPressed()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
com.polidea.rxandroidble2.internal.cache.DeviceComponentCache: java.util.Collection values()
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
io.reactivex.Flowable: io.reactivex.Flowable compose(io.reactivex.FlowableTransformer)
okhttp3.internal.connection.RealConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)
com.polidea.rxandroidble2.internal.connection.IllegalOperationChecker_Factory: java.lang.Object get()
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: boolean isSupported()
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(com.facebook.react.views.view.ReactViewGroup)
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KProperty getReflected()
com.facebook.react.bridge.UIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.UIConstantsProviderManager: void staticInit()
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: Http2Connection$pushResetLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okhttp3.internal.http2.ErrorCode)
okhttp3.internal.concurrent.TaskRunner: void access$runTask(okhttp3.internal.concurrent.TaskRunner,okhttp3.internal.concurrent.Task)
okhttp3.internal.http2.Http2Stream: boolean closeInternal(okhttp3.internal.http2.ErrorCode,java.io.IOException)
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: java.lang.String getName()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reload()
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
okhttp3.OkHttpClient: int -deprecated_writeTimeoutMillis()
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
okhttp3.internal.platform.Platform: java.lang.Object getStackTraceForCloseable(java.lang.String)
com.facebook.react.bridge.ReactContext: boolean startActivityForResult(android.content.Intent,int,android.os.Bundle)
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
com.polidea.rxandroidble2.RxBleConnection$WriteOperationAckStrategy: io.reactivex.ObservableSource apply(io.reactivex.Observable)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.ReadableNativeMap: double getDouble(java.lang.String)
okhttp3.internal.Util: int indexOfFirstNonAsciiWhitespace(java.lang.String,int,int)
okhttp3.internal.http2.Http2Stream: okhttp3.Headers trailers()
com.polidea.rxandroidble2.internal.scan.InternalToExternalScanResultConverter: com.polidea.rxandroidble2.scan.ScanResult apply(com.polidea.rxandroidble2.internal.scan.RxBleInternalScanResult)
io.reactivex.Single: io.reactivex.Flowable merge(org.reactivestreams.Publisher)
okhttp3.Handshake: okhttp3.CipherSuite -deprecated_cipherSuite()
